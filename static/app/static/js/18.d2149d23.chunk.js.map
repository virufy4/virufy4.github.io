{"version":3,"sources":["components/Button/style.ts","components/Button/Button.tsx","../node_modules/little-state-machine/dist/little-state-machine.es.js","hooks/useHeaderContext.ts","helper/scrollHelper.ts","components/WizardButtons/style.ts","components/WizardButtons/WizardButtons.tsx","utils/wizard.ts","components/OptionList/style.ts","components/OptionList/OptionList.tsx","containers/SubmitSteps/Questionary/Step1/Step1.tsx","containers/SubmitSteps/Questionary/Step1/index.ts"],"names":["StyledButton","styled","button","dark","color","disabled","colors","purple_50","purple","white","Button","React","memo","children","props","type","getBrowserStoreData","storageType","storeName","sessionStorageData","getItem","JSON","parse","undefined","_a","storeFactory","name","store","set","value","get","getName","isUndefined","val","setUpDevTools","isDevMode","getStore","window","STATE_MACHINE_DEBUG","setItem","STATE_MACHINE_RESET","clear","STATE_MACHINE_GET_STORE","STATE_MACHINE_SAVE_TO","localStorage","stringify","STATE_MACHINE_LOAD","data","StateMachineContext","createContext","updateStore","payload","transformStore","transform","externalStoreName","externalStoreData","currentStoreData","getSyncStoreData","defaultStoreData","options","syncStoreOption","syncStores","Array","isArray","forEach","option","Object","entries","key","values","browserStore","assign","setStore","isClient","sessionStorage","length","toString","removeItem","middleWaresArray","setStorageType","createStore","middleWares","methods","process","StateMachineProvider","useState","globalState","useMemo","createElement","Provider","actionTemplate","callback","result","shouldReRenderApp","pipeData","reduce","currentValue","currentFunction","useStateMachine","updateStoreFunction","useContext","keys","actions","previous","useCallback","action","p","state","useHeaderContext","HeaderContext","title","setTitle","subtitle","setSubtitle","setType","logoSize","setLogoSize","setDoGoBack","doGoBack","scrollToTop","scrollTo","top","behavior","WizardButtonsContainer","div","theme","layout","generalPaddingAmount","breakpoints","tablet","WizardButtons","invert","leftLabel","leftDisabled","leftHandler","rightLabel","rightDisabled","rightHandler","onClick","updateAction","storeKey","resetStore","welcome","language","OptionListItem","darkBlack","isSelected","purple_10","mercury","OptionListItemLabel","span","OptionListAddOtherButton","OptionListCheck","checkbox","OptionListInputContainer","OptionListInput","input","green_25","darkBlack_04","midDarkGray","defaultValue","selected","other","OptionList","items","excludableValues","singleSelection","isCheckbox","onChange","allowAddOther","addOtherLabel","enableOther","otherPlaceholder","showOtherInput","setShowOtherInput","useEffect","otherChangeHandler","newOtherVaue","newSelected","some","item","includes","map","index","lastItem","selectedItem","newOtherValue","indexOf","slice","selectItem","label","placeholder","e","target","defaultProps","schema","Yup","illStatus","oneOf","required","zipCode","defined","previousStep","nextStep","metadata","Portal","usePortal","bindTo","document","getElementById","history","useHistory","t","useTranslation","useForm","mode","defaultValues","resolver","yupResolver","control","handleSubmit","formState","errors","isValid","activeStep","setActiveStep","handleDoBack","push","goBack","onSubmit","a","illOptions","extraSpace","first","render","v","message","hasNote","autoComplete"],"mappings":"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","file":"static/js/18.d2149d23.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { colors } from '../../theme';\n\nexport interface StyledButtonProps {\n  disabled?: boolean;\n  dark?: boolean;\n  id?: string;\n}\n\nexport const StyledButton = styled.button<StyledButtonProps>`\n  height: 50px;\n  border-radius: 15px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  font-weight: bold;\n  font-size: 14px;\n  font-weight: bold;\n  width: 100%;\n\n  ${({ dark, disabled }) => {\n    const color = disabled ? colors.purple_50 : colors.purple;\n    return dark ? `\n    background-color: ${color};\n    color: ${colors.white};\n    border: none;\n  ` : `\n    background-color: ${colors.white};\n    color: ${color};\n    border: 1px solid ${color};\n  `;\n  }}\n`;\n","import React, { PropsWithChildren } from 'react';\n\n// Styles\nimport {\n  StyledButton,\n  StyledButtonProps,\n} from './style';\n\nexport interface ButtonProps extends PropsWithChildren<StyledButtonProps> {\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void);\n}\n\nconst Button = React.memo(({ children, ...props }: ButtonProps) => ((\n  <StyledButton\n    type=\"button\"\n    {...props}\n  >\n    {children}\n  </StyledButton>\n)));\n\nexport default Button;\n","import { createContext, useState, useMemo, createElement, useContext, useCallback } from 'react';\n\nconst STORE_DEFAULT_NAME = '__STATE_MACHINE__';\r\nconst STORE_ACTION_NAME = '__STATE_MACHINE_ACTION_NAME__';\r\nconst STATE_MACHINE_DEBUG_NAME = '___STATE_MACHINE_DEBUG__';\n\nvar getBrowserStoreData = (storageType, storeName) => {\r\n    const sessionStorageData = storageType.getItem(storeName);\r\n    try {\r\n        return sessionStorageData ? JSON.parse(sessionStorageData) : undefined;\r\n    }\r\n    catch (_a) {\r\n        return undefined;\r\n    }\r\n};\n\nfunction storeFactory(storageType, name) {\r\n    const storeName = name || STORE_DEFAULT_NAME;\r\n    let store = getBrowserStoreData(storageType, storeName);\r\n    const getName = () => storeName;\r\n    const set = (value) => {\r\n        store = value;\r\n    };\r\n    const get = () => store;\r\n    return {\r\n        set,\r\n        get,\r\n        getName,\r\n    };\r\n}\n\nvar isUndefined = (val) => val === undefined;\n\nfunction setUpDevTools(isDevMode, storageType, getName, getStore) {\r\n    if (typeof window === 'undefined' || !isDevMode)\r\n        return;\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_DEBUG = (value) => storageType.setItem(STATE_MACHINE_DEBUG_NAME, value);\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_RESET = () => storageType.clear();\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_GET_STORE = () => storageType.getItem(getName());\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_SAVE_TO = name => window.localStorage.setItem(name, JSON.stringify(getStore()));\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_LOAD = ({ storeName, data, }) => storageType.setItem(getName() || STATE_MACHINE_DEBUG_NAME, data || window.localStorage.getItem(storeName) || '');\r\n}\n\nvar StateMachineContext = createContext({\r\n    store: {},\r\n    updateStore: (payload) => payload,\r\n});\n\nvar transformStore = ({ transform, externalStoreName, storageType, store, }) => transform({\r\n    externalStoreData: getBrowserStoreData(storageType, externalStoreName),\r\n    currentStoreData: store,\r\n});\n\nfunction getSyncStoreData(defaultStoreData, options, storageType) {\r\n    let store = defaultStoreData;\r\n    const syncStoreOption = options.syncStores;\r\n    if (!syncStoreOption)\r\n        return store;\r\n    try {\r\n        if (Array.isArray(syncStoreOption)) {\r\n            syncStoreOption.forEach(option => {\r\n                store = transformStore({\r\n                    transform: option.transform,\r\n                    externalStoreName: option.externalStoreName,\r\n                    storageType,\r\n                    store,\r\n                });\r\n            });\r\n        }\r\n        else if (syncStoreOption.externalStoreName &&\r\n            typeof syncStoreOption.transform === 'function' &&\r\n            typeof syncStoreOption.externalStoreName === 'string') {\r\n            return transformStore({\r\n                transform: syncStoreOption.transform,\r\n                externalStoreName: syncStoreOption.externalStoreName,\r\n                storageType,\r\n                store,\r\n            });\r\n        }\r\n        else {\r\n            Object.entries(syncStoreOption).forEach(([key, values]) => {\r\n                const browserStore = getBrowserStoreData(storageType, key);\r\n                values.forEach((value) => {\r\n                    store = Object.assign(Object.assign({}, store), {\r\n                        [value]: Object.assign(Object.assign({}, store[value]), browserStore[value]),\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n    catch (_a) {\r\n        return store;\r\n    }\r\n    return store;\r\n}\n\nconst isClient = typeof window !== 'undefined';\r\nconst isDevMode = process.env.NODE_ENV !== 'production';\r\nlet storageType = isClient\r\n    ? window.sessionStorage\r\n    : {\r\n        getItem: payload => payload,\r\n        setItem: (payload) => payload,\r\n        clear: () => { },\r\n        length: 0,\r\n        key: (payload) => payload.toString(),\r\n        removeItem: () => { },\r\n    };\r\nlet getStore;\r\nlet setStore;\r\nlet getName;\r\nlet middleWaresArray = [];\r\nconst middleWare = (data = '') => {\r\n    if (data && isClient) {\r\n        // @ts-ignore\r\n        window[STORE_ACTION_NAME] = data;\r\n    }\r\n    return data;\r\n};\r\nfunction setStorageType(type) {\r\n    storageType = type;\r\n}\r\nfunction createStore(defaultStoreData, options = {\r\n    name: STORE_DEFAULT_NAME,\r\n    middleWares: [],\r\n    syncStores: undefined,\r\n}) {\r\n    const storeName = options ? options.name : STORE_DEFAULT_NAME;\r\n    const methods = storeFactory(storageType, storeName);\r\n    if (isDevMode && isClient) {\r\n        // @ts-ignore\r\n        window['STATE_MACHINE_NAME'] = storeName;\r\n    }\r\n    getName = methods.getName;\r\n    getStore = methods.get;\r\n    setStore = methods.set;\r\n    middleWaresArray = options.middleWares;\r\n    setUpDevTools(isDevMode, storageType, getName, getStore);\r\n    setStore(getSyncStoreData(getStore() || defaultStoreData, options, storageType));\r\n}\r\nfunction StateMachineProvider(props) {\r\n    const [globalState, updateStore] = useState(getStore());\r\n    const value = useMemo(() => ({\r\n        store: globalState,\r\n        updateStore,\r\n    }), [globalState]);\r\n    // @ts-ignore\r\n    return createElement(StateMachineContext.Provider, Object.assign({ value: value }, props));\r\n}\r\nconst actionTemplate = ({ options, callback, updateStore, }) => (payload) => {\r\n    let result;\r\n    const debugName = callback ? callback.name : '';\r\n    if (isDevMode) {\r\n        middleWare(debugName);\r\n    }\r\n    if (callback) {\r\n        result = callback(getStore(), payload);\r\n    }\r\n    setStore(isUndefined(result) ? getStore() : result);\r\n    storageType.setItem(getName(), JSON.stringify(getStore()));\r\n    if (isUndefined(options) ||\r\n        (options && options.shouldReRenderApp !== false)) {\r\n        let pipeData = getStore();\r\n        if (Array.isArray(middleWaresArray) && middleWaresArray.length) {\r\n            pipeData = middleWaresArray.reduce((currentValue, currentFunction) => currentFunction(currentValue) || currentValue, pipeData);\r\n        }\r\n        updateStore(pipeData);\r\n    }\r\n};\r\nfunction useStateMachine(updateStoreFunction, options) {\r\n    const { store: globalState, updateStore } = useContext(StateMachineContext);\r\n    if (updateStoreFunction && Object.keys(updateStoreFunction).length) {\r\n        return {\r\n            actions: Object.entries(updateStoreFunction).reduce((previous, [key, callback]) => (Object.assign(Object.assign({}, previous), { [key]: useCallback(actionTemplate({\r\n                    options,\r\n                    callback,\r\n                    updateStore,\r\n                }), []) })), {}),\r\n            action: p => p,\r\n            state: globalState,\r\n        };\r\n    }\r\n    return {\r\n        actions: {},\r\n        action: useCallback(updateStoreFunction\r\n            ? actionTemplate({\r\n                options,\r\n                callback: updateStoreFunction,\r\n                updateStore,\r\n            })\r\n            : () => { }, []),\r\n        state: globalState,\r\n    };\r\n}\n\nexport { StateMachineContext, StateMachineProvider, createStore, setStorageType, useStateMachine };\n","import React from 'react';\nimport { HeaderContext } from 'components/Header';\n\nconst useHeaderContext = () => {\n  const {\n    title, setTitle, subtitle, setSubtitle, type, setType, logoSize, setLogoSize, setDoGoBack, doGoBack,\n  } = React.useContext(HeaderContext);\n\n  return {\n    title,\n    setTitle,\n    subtitle,\n    setSubtitle,\n    type,\n    setType,\n    logoSize,\n    setLogoSize,\n    doGoBack,\n    setDoGoBack,\n  };\n};\n\nexport default useHeaderContext;\n","export const scrollToTop = function scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nexport const scrollToBottom = function scrollToBottom() {\n  window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\n};\n","import styled from 'styled-components';\n\nexport const WizardButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: ${props => `calc(100% - ${props.theme.layout.generalPaddingAmount * 2}px)`};\n  margin: 0 auto;\n\n  button {\n    flex: 1;\n    min-height: 50px;\n    margin-bottom: 8px;\n\n    &:first-of-type {\n      margin-left: 0px !important;\n    }\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Components\nimport Button from 'components/Button';\n\n// Styles\nimport {\n  WizardButtonsContainer,\n} from './style';\n\ninterface WizardButtonsProps {\n  invert?: boolean;\n  leftLabel: string;\n  leftDisabled?: boolean;\n  leftHandler: () => void;\n  rightLabel?: string;\n  rightDisabled?: boolean;\n  rightHandler?: () => void;\n}\n\nconst WizardButtons = React.memo(({\n  invert = false,\n  leftLabel,\n  leftDisabled,\n  leftHandler,\n  rightLabel,\n  rightDisabled,\n  rightHandler,\n}: WizardButtonsProps) => (\n  <WizardButtonsContainer>\n    <Button\n      dark={invert}\n      disabled={leftDisabled}\n      onClick={leftHandler}\n    >\n      {leftLabel}\n    </Button>\n    {\n        rightLabel && rightHandler && (\n          <Button\n            dark={!invert}\n            disabled={rightDisabled}\n            onClick={rightHandler}\n          >\n            {rightLabel}\n          </Button>\n        )\n      }\n  </WizardButtonsContainer>\n));\nexport default React.memo(WizardButtons);\n","// TODO: Improve types\nexport function updateAction(storeKey: string): any {\n  return (state: any, payload: any) => ({\n    ...state,\n    [storeKey]: {\n      ...state[storeKey],\n      ...payload,\n    },\n  });\n}\n\nexport function resetStore(): any {\n  return (state: any) => ({ welcome: { language: state.welcome.language } });\n}\n","import styled from 'styled-components';\n\nexport const OptionListItem = styled.button<{lastItem: boolean; isSelected?: boolean}>`\n  width: 100%;\n  height: 50px;\n  position: relative;\n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  color: ${props => props.theme.colors.darkBlack};\n  font-size: 14px;\n  text-align: left;\n  padding: 0 20px;\n  margin: 3px auto;\n  border: none;\n  border-radius: 10px;\n  background-color: ${props => (props.isSelected ? props.theme.colors.purple_10 : props.theme.colors.mercury)};\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n    text-align: left;\n  }\n`;\n\nexport const OptionListItemLabel = styled.span`\n  display: block;\n  width: 250px;\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    width: auto;\n    text-align: left;\n    margin: auto;\n  }\n`;\n\nexport const OptionListAddOtherButton = styled(OptionListItem)`\n  font-weight: bold;\n`;\n\nexport const OptionListCheck = styled.div<{ isSelected?: boolean; checkbox?: boolean }>`\n  width: 22px;\n  height: 22px; \n  border-radius: ${props => (props.checkbox ? '10%' : '50%')};\n  border: 3px solid ${props => (props.isSelected ? props.theme.colors.purple : '#C1C1C1')};\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin-top: 14px;\n  margin-right: 29px;\n  \n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    margin-right: 31px;\n  }\n\n  &:after{\n    content: '';\n    position: absolute; \n    left: ${props => (props.checkbox ? '0%' : '2px')}; \n    top: ${props => (props.checkbox ? '0%' : '2px')};\n    height: ${props => (props.checkbox ? '16px' : '12px')};\n    width: ${props => (props.checkbox ? '16px' : '12px')};\n    border-radius: ${props => (props.checkbox ? '0%' : '50%')};\n    background-color: ${props => (props.checkbox ? props.theme.colors.purple_10 : props.theme.colors.purple)}; \n    display: ${props => (props.isSelected ? 'block' : 'none')};\n    background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 16 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14.0005 2L6.00018 10L2 6.00018' stroke='%233578DE' stroke-width='2.18192' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E\");\n    background-repeat: no-repeat;\n    background-size: 16px 16px;\n  }\n`;\n\nexport const OptionListInputContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  width: calc(100% + 40px);\n  margin: 0 -20px;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n\nexport const OptionListInput = styled.input<{isSelected: boolean}>`\n  height: 50px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  color: ${props => props.theme.colors.darkBlack};\n  width: 100%;\n  padding: 0 20px;\n  border: none;\n  background-color: ${props => (props.isSelected ? props.theme.colors.green_25 : 'transparent')};\n  border-top: 1px ${props => props.theme.colors.darkBlack_04} solid;\n  border-bottom: 1px ${props => props.theme.colors.darkBlack_04} solid;\n  ::placeholder {\n    color: ${props => props.theme.colors.midDarkGray};\n  }\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    text-align: center;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  OptionListAddOtherButton,\n  OptionListCheck, OptionListInput,\n  OptionListInputContainer,\n  OptionListItem,\n  OptionListItemLabel,\n} from './style';\n\ninterface OptionListItemProps {\n  value: string;\n  label: string;\n  excludable?: boolean;\n}\ninterface OptionListValue {\n  selected: string[];\n  other?: string;\n}\n\ninterface OptionListProps {\n  value?: OptionListValue;\n  items: OptionListItemProps[];\n  excludableValues?: string[];\n  singleSelection?: boolean;\n  onChange?: (value: OptionListValue) => void;\n  allowAddOther?: boolean;\n  addOtherLabel?: string;\n  enableOther?: boolean;\n  otherPlaceholder?: string;\n  isCheckbox?: boolean;\n}\nconst defaultValue = { selected: [], other: '' };\nconst OptionList = ({\n  value = defaultValue, items, excludableValues, singleSelection, isCheckbox,\n  onChange, allowAddOther, addOtherLabel, enableOther, otherPlaceholder,\n}: OptionListProps) => {\n  const [showOtherInput, setShowOtherInput] = useState(false);\n\n  useEffect(() => {\n    setShowOtherInput(!!enableOther || !!value?.other);\n  }, [value, enableOther]);\n\n  const selectItem = (selectedItem: OptionListItemProps) => {\n    const { selected, other } = value;\n    let newSelected: string[];\n    let newOtherValue: string | undefined;\n\n    const index = selected.indexOf(selectedItem.value);\n\n    if (index >= 0) {\n      newSelected = [...selected.slice(0, index), ...selected.slice(index + 1)];\n      newOtherValue = other;\n    } else if (singleSelection) {\n      newSelected = [selectedItem.value];\n      newOtherValue = undefined;\n    } else if (excludableValues?.includes(selectedItem.value)\n    || (excludableValues && selected.some(item => excludableValues.includes(item)))) {\n      newSelected = [selectedItem.value];\n      newOtherValue = undefined;\n    } else {\n      newSelected = [...selected, selectedItem.value];\n      newOtherValue = other;\n    }\n\n    if (onChange) {\n      onChange({\n        selected: newSelected,\n        other: newOtherValue,\n      });\n    }\n  };\n\n  const otherChangeHandler = (newOtherVaue: string) => {\n    const { selected } = value;\n    let newSelected: string[];\n\n    if (singleSelection || (excludableValues && selected.some(item => excludableValues.includes(item)))) {\n      newSelected = [];\n    } else {\n      newSelected = selected;\n    }\n\n    if (onChange) {\n      onChange({\n        selected: newSelected,\n        other: newOtherVaue,\n      });\n    }\n\n    if (!newOtherVaue) {\n      setShowOtherInput(false);\n    }\n  };\n\n  const addOtherClickHandler = () => {\n    setShowOtherInput(true);\n  };\n\n  return (\n    <>\n      {items.map((item, index) => {\n        const isSelected = value?.selected?.includes(item.value);\n        return (\n          <OptionListItem\n            key={item.value}\n            lastItem={items.length === index + 1 && !allowAddOther && !enableOther}\n            onClick={() => selectItem(item)}\n            isSelected={isSelected}\n          >\n            <OptionListItemLabel>\n              {item.label}\n            </OptionListItemLabel>\n            <OptionListCheck isSelected={isSelected} checkbox={isCheckbox} />\n          </OptionListItem>\n        );\n      })}\n      {allowAddOther && !showOtherInput && (\n        <OptionListAddOtherButton onClick={addOtherClickHandler} lastItem>\n          {addOtherLabel}\n        </OptionListAddOtherButton>\n      )}\n      {showOtherInput && (\n        <OptionListInputContainer>\n          <OptionListInput\n            placeholder={otherPlaceholder}\n            value={value?.other || ''}\n            isSelected={!!(value?.other)}\n            onChange={e => otherChangeHandler(e.target.value)}\n          />\n          {!!(value?.other) && (\n            <OptionListCheck />\n          )}\n        </OptionListInputContainer>\n      )}\n    </>\n  );\n};\n\nOptionList.defaultProps = {\n  value: defaultValue,\n  excludableValues: undefined,\n  singleSelection: false,\n  onChange: undefined,\n  allowAddOther: false,\n  addOtherLabel: '',\n  enableOther: false,\n  otherPlaceholder: '',\n};\n\nexport default React.memo(OptionList);\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport usePortal from 'react-useportal';\nimport { useTranslation } from 'react-i18next';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers';\nimport { ErrorMessage } from '@hookform/error-message';\nimport * as Yup from 'yup';\n\n// Update Action\nimport { updateAction } from 'utils/wizard';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Utils\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Components\nimport OptionList from 'components/OptionList';\nimport WizardButtons from 'components/WizardButtons';\n\n// Styles\nimport {\n  QuestionText,\n  MainContainer,\n  QuestionNote,\n  QuestionInput,\n  InputLabel,\n} from '../style';\n\nconst schema = Yup.object({\n  illStatus: Yup.string().oneOf(['yes', 'no', 'unsure']).required(),\n  zipCode: Yup.string().required(),\n}).defined();\n\ntype Step1Type = Yup.InferType<typeof schema>;\n\nconst Step2 = ({\n  previousStep,\n  nextStep,\n  storeKey,\n  metadata,\n}: Wizard.StepProps) => {\n  // Hooks\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const {\n    setDoGoBack, setTitle, setType, setSubtitle,\n  } = useHeaderContext();\n  const history = useHistory();\n  const { t } = useTranslation();\n  const { state, action } = useStateMachine(updateAction(storeKey));\n  const {\n    control, handleSubmit, formState,\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: state?.[storeKey],\n    resolver: yupResolver(schema),\n  });\n  const { errors, isValid } = formState;\n\n  // States\n  const [activeStep, setActiveStep] = useState(true);\n\n  // Callbacks\n  const handleDoBack = useCallback(() => {\n    setActiveStep(false);\n    if (previousStep) {\n      history.push(previousStep);\n    } else {\n      history.goBack();\n    }\n  }, [history, previousStep]);\n\n  const onSubmit = async (values: Step1Type) => {\n    if (values) {\n      action(values);\n      if (nextStep) {\n        setActiveStep(false);\n        history.push(nextStep);\n      }\n    }\n  };\n\n  // Effects\n  useEffect(() => {\n    scrollToTop();\n    setTitle(`${t('questionary:headerQuestions')}`);\n    setType('primary');\n    setDoGoBack(() => handleDoBack);\n    setSubtitle('');\n  }, [handleDoBack, setDoGoBack, setTitle, setType, metadata, t, setSubtitle]);\n\n  const illOptions = [\n    {\n      value: 'yes',\n      label: t('questionary:step1.options.yes'),\n    },\n    {\n      value: 'no',\n      label: t('questionary:step1.options.no'),\n    },\n    {\n      value: 'unsure',\n      label: t('questionary:step1.options.unsure'),\n    },\n  ];\n\n  return (\n    <MainContainer>\n      <QuestionText extraSpace first>{t('questionary:step1.question1')}\n      </QuestionText>\n      <Controller\n        control={control}\n        name=\"illStatus\"\n        defaultValue={undefined}\n        render={({ onChange, value }) => (\n          <OptionList\n            singleSelection\n            value={{ selected: value ? [value] : [] }}\n            onChange={v => onChange(v.selected[0])}\n            items={illOptions}\n          />\n        )}\n      />\n      <ErrorMessage\n        errors={errors}\n        name=\"illStatus\"\n        render={({ message }) => (\n          <p>{message}</p>\n        )}\n      />\n\n      <QuestionText hasNote>\n        {t('questionary:step1.question2')}\n      </QuestionText>\n      <QuestionNote>{t('questionary:step1.caption2')}</QuestionNote>\n      <Controller\n        control={control}\n        name=\"zipCode\"\n        defaultValue=\"\"\n        render={({ onChange, value, name }) => (\n          <>\n            <InputLabel>{t('questionary:step1.zipCodeLabel')}</InputLabel>\n            <QuestionInput\n              name={name}\n              value={value}\n              onChange={onChange}\n              type=\"text\"\n              placeholder={t('questionary:step1.zipCodePlaceholder')}\n              autoComplete=\"Off\"\n            />\n          </>\n        )}\n      />\n      <ErrorMessage\n        errors={errors}\n        name=\"zipCode\"\n        render={({ message }) => (\n          <p>{message}</p>\n        )}\n      />\n      {/* Bottom Buttons */}\n      {activeStep && (\n        <Portal>\n          <WizardButtons\n            leftLabel={t('questionary:submit')}\n            leftDisabled={!isValid}\n            leftHandler={handleSubmit(onSubmit)}\n            invert\n          />\n        </Portal>\n      )}\n    </MainContainer>\n  );\n};\n\nexport default memo(Step2);\n","export { default } from './Step1';\n"],"sourceRoot":""}