{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../usePortal.ts","../../src/utils/isHTMLElement.ts","../../src/constants.ts","../../src/logic/attachEventListeners.ts","../../src/utils/isNullOrUndefined.ts","../../src/utils/isArray.ts","../../src/utils/isObject.ts","../../src/utils/isKey.ts","../../src/utils/stringToPath.ts","../../src/utils/set.ts","../../src/logic/transformToNestObject.ts","../../src/utils/isUndefined.ts","../../src/utils/filterOutFalsy.ts","../../src/utils/get.ts","../../src/logic/focusOnErrorField.ts","../../src/logic/removeAllEventListeners.ts","../../src/logic/getRadioValue.ts","../../src/utils/isRadioInput.ts","../../src/utils/isFileInput.ts","../../src/utils/isCheckBoxInput.ts","../../src/utils/isMultipleSelect.ts","../../src/logic/getCheckboxValue.ts","../../src/logic/getFieldValue.ts","../../src/logic/getMultipleSelectValue.ts","../../src/utils/isDetached.ts","../../src/utils/isEmptyObject.ts","../../src/utils/isBoolean.ts","../../src/utils/unset.ts","../../src/logic/findRemovedFieldAndRemoveListener.ts","../../src/utils/isString.ts","../../src/utils/isPrimitive.ts","../../src/logic/getFieldsValues.ts","../../src/utils/deepMerge.ts","../../src/utils/isSameError.ts","../../src/logic/shouldRenderBasedOnError.ts","../../src/utils/isRegex.ts","../../src/logic/getValueAndMessage.ts","../../src/utils/isFunction.ts","../../src/utils/isMessage.ts","../../src/logic/getValidateError.ts","../../src/logic/appendErrors.ts","../../src/logic/validateField.ts","../../src/utils/getPath.ts","../../src/logic/assignWatchFields.ts","../../src/logic/skipValidation.ts","../../src/logic/getFieldArrayParentName.ts","../../src/utils/deepEqual.ts","../../src/logic/isNameInFieldArray.ts","../../src/utils/isSelectInput.ts","../../src/utils/onDomRemove.ts","../../src/utils/validationModeChecker.ts","../../src/utils/isRadioOrCheckbox.ts","../../src/useForm.ts","../../src/useFormContext.tsx","../../src/logic/getInputValue.ts","../../src/controller.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/use-ssr/dist/useSSR.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","HTMLElement","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","attachEventListeners","shouldAttachChangeEvent","handleChange","ref","isHTMLElement","addEventListener","Array","isArray","isObjectType","isNullOrUndefined","Date","test","input","result","replace","match","mathNumber","mathQuote","originalString","push","set","object","path","index","tempPath","isKey","stringToPath","length","lastIndex","newValue","objValue","isObject","isNaN","data","Object","entries","reduce","previous","val","filter","Boolean","obj","defaultValue","filterOutFalsy","split","isUndefined","fields","fieldErrors","get","field","focus","options","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","option","checked","element","type","defaultResult","validResult","values","map","attributes","getFieldValue","fieldsRef","name","shallowFieldsStateRef","excludeDisabled","current","disabled","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selected","isCheckBox","getCheckboxValue","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","keys","unset","updatePath","childObject","slice","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isEmptyObject","isBoolean","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","fieldRef","isCheckBoxInput","forEach","removeAllEventListeners","search","output","isString","startsWith","find","deepMerge","target","source","isPrimitive","targetValue","sourceValue","transformToNestObject","currentError","message","types","every","shouldRenderBasedOnError","errors","validFields","fieldsWithValidation","previousError","isSameError","RegExp","validationData","isRegex","getValidateError","isMessage","validateAllFieldCriteria","a","required","maxLength","minLength","min","max","pattern","validate","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","requiredValue","requiredMessage","maxValue","maxMessage","minValue","minMessage","valueNumber","valueAsNumber","parseFloat","exceedMin","valueDate","valueAsDate","maxLengthValue","minLengthValue","inputLength","toString","patternValue","patternMessage","getFieldsValue","validateRef","isFunction","validateError","validationResult","validateFunction","validateResult","getPath","pathWithIndex","getInnerPath","flat","Infinity","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","substring","indexOf","deepEqual","object1","object2","keys1","keys2","val1","val2","isMatchFieldArrayName","searchName","names","some","onDomRemove","removeFieldEventListenerAndRef","observer","MutationObserver","observe","window","document","childList","subtree","mode","isOnSubmit","isWindowUndefined","isWeb","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","context","defaultValues","shouldFocusError","criteriaMode","React.useRef","fieldArrayDefaultValuesRef","watchFieldsRef","Set","useWatchFieldsRef","useWatchRenderFunctionsRef","fieldsWithValidationRef","validFieldsRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","modeRef","modeChecker","isValidateAllFieldCriteria","React.useState","isDirty","dirtyFields","submitCount","touched","isSubmitting","isSubmitSuccessful","formState","setFormState","readFormStateRef","formStateRef","observerRef","updateFormState","React.useCallback","state","shouldRenderBaseOnError","shouldRender","shouldReRender","setFieldValue","rawValue","radioRef","selectRef","includes","checkboxRef","updateAndGetDirtyState","isFieldDirty","isDirtyFieldExist","isFieldArray","isNameInFieldArray","previousIsDirty","getValues","getFieldArrayParentName","isChanged","executeValidation","skipReRender","validateField","executeSchemaOrResolverValidation","previousFormIsValid","isInputsValid","trigger","all","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","has","fieldArrayParentName","isFieldWatched","renderWatchedInputs","found","size","setValue","payload","getFieldsValues","shouldSkipValidation","skipValidation","validateResolver","removeFieldEventListener","clearErrors","inputName","setError","shouldFocus","watchInternal","fieldNames","watchId","combinedDefaultValues","assignWatchFields","watch","unregister","registerFieldRef","validateOptions","fieldRefAndValidationOptions","isRadioOrCheckboxFunction","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","isSelectInput","register","refOrValidationOptions","rules","handleSubmit","onValid","onInvalid","e","preventDefault","persist","fieldError","focusOnErrorField","resetRefs","reset","omitResetState","inputRef","closest","resetFieldArray","React.useEffect","disconnect","commonProps","control","prop","FormContext","React.createContext","displayName","useFormContext","React.useContext","Controller","as","render","onFocus","rest","methods","isNotFieldArray","getInitialValue","setInputStateValue","valueRef","onFocusRef","commonTask","event","getInputValue","registerField","defineProperty","onBlur","onChange","props","React.isValidElement","React.cloneElement","React.createElement","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Device","__assign","assign","t","s","i","n","p","prototype","hasOwnProperty","call","Browser","Server","Native","canUseDOM","createElement","device","navigator","product","SSRObject","isBrowser","isServer","isNative","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","toArrayObject","_i","acc","useSSRObject","weAreServer","useSSR","default","_createForOfIteratorHelper","o","F","_e","f","it","normalCompletion","didErr","step","next","_e2","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","constructor","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/1.74ac48a0.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar react_dom_1 = require(\"react-dom\");\nvar use_ssr_1 = __importDefault(require(\"use-ssr\"));\nexports.errorMessage1 = 'You must either add a `ref` to the element you are interacting with or pass an `event` to openPortal(e) or togglePortal(e).';\nfunction usePortal(_a) {\n    if (_a === void 0) { _a = {}; }\n    var _b = _a.closeOnOutsideClick, closeOnOutsideClick = _b === void 0 ? true : _b, _c = _a.closeOnEsc, closeOnEsc = _c === void 0 ? true : _c, bindTo = _a.bindTo, // attach the portal to this node in the DOM\n    _d = _a.isOpen, // attach the portal to this node in the DOM\n    defaultIsOpen = _d === void 0 ? false : _d, onOpen = _a.onOpen, onClose = _a.onClose, onPortalClick = _a.onPortalClick, eventHandlers = __rest(_a, [\"closeOnOutsideClick\", \"closeOnEsc\", \"bindTo\", \"isOpen\", \"onOpen\", \"onClose\", \"onPortalClick\"]);\n    var _e = use_ssr_1.default(), isServer = _e.isServer, isBrowser = _e.isBrowser;\n    var _f = react_1.useState(defaultIsOpen), isOpen = _f[0], makeOpen = _f[1];\n    // we use this ref because `isOpen` is stale for handleOutsideMouseClick\n    var open = react_1.useRef(isOpen);\n    var setOpen = react_1.useCallback(function (v) {\n        // workaround to not have stale `isOpen` in the handleOutsideMouseClick\n        open.current = v;\n        makeOpen(v);\n    }, []);\n    var targetEl = react_1.useRef(); // this is the element you are clicking/hovering/whatever, to trigger opening the portal\n    var portal = react_1.useRef(isBrowser ? document.createElement('div') : null);\n    react_1.useEffect(function () {\n        if (isBrowser && !portal.current)\n            portal.current = document.createElement('div');\n    }, [isBrowser, portal]);\n    var elToMountTo = react_1.useMemo(function () {\n        if (isServer)\n            return;\n        return (bindTo && react_dom_1.findDOMNode(bindTo)) || document.body;\n    }, [isServer, bindTo]);\n    var createCustomEvent = function (e) {\n        if (!e)\n            return { portal: portal, targetEl: targetEl, event: e };\n        var event = e || {};\n        if (event.persist)\n            event.persist();\n        event.portal = portal;\n        event.targetEl = targetEl;\n        event.event = e;\n        var currentTarget = e.currentTarget;\n        if (!targetEl.current && currentTarget && currentTarget !== document)\n            targetEl.current = event.currentTarget;\n        return event;\n    };\n    // this should handle all eventHandlers like onClick, onMouseOver, etc. passed into the config\n    var customEventHandlers = Object\n        .entries(eventHandlers)\n        .reduce(function (acc, _a) {\n        var handlerName = _a[0], eventHandler = _a[1];\n        acc[handlerName] = function (event) {\n            if (isServer)\n                return;\n            eventHandler(createCustomEvent(event));\n        };\n        return acc;\n    }, {});\n    var openPortal = react_1.useCallback(function (e) {\n        if (isServer)\n            return;\n        var customEvent = createCustomEvent(e);\n        // for some reason, when we don't have the event argument, there\n        // is a weird race condition. Would like to see if we can remove\n        // setTimeout, but for now this works\n        if (targetEl.current == null) {\n            setTimeout(function () { return setOpen(true); }, 0);\n            throw Error(exports.errorMessage1);\n        }\n        if (onOpen)\n            onOpen(customEvent);\n        setOpen(true);\n    }, [isServer, portal, setOpen, targetEl, onOpen]);\n    var closePortal = react_1.useCallback(function (e) {\n        if (isServer)\n            return;\n        var customEvent = createCustomEvent(e);\n        if (onClose && open.current)\n            onClose(customEvent);\n        if (open.current)\n            setOpen(false);\n    }, [isServer, onClose, setOpen]);\n    var togglePortal = react_1.useCallback(function (e) {\n        return open.current ? closePortal(e) : openPortal(e);\n    }, [closePortal, openPortal]);\n    var handleKeydown = react_1.useCallback(function (e) {\n        return (e.key === 'Escape' && closeOnEsc) ? closePortal(e) : undefined;\n    }, [closeOnEsc, closePortal]);\n    var handleOutsideMouseClick = react_1.useCallback(function (e) {\n        var containsTarget = function (target) { return target.current.contains(e.target); };\n        if (containsTarget(portal) || e.button !== 0 || !open.current || containsTarget(targetEl))\n            return;\n        if (closeOnOutsideClick)\n            closePortal(e);\n    }, [isServer, closePortal, closeOnOutsideClick, portal]);\n    var handleMouseDown = react_1.useCallback(function (e) {\n        if (isServer || !(portal.current instanceof HTMLElement))\n            return;\n        var customEvent = createCustomEvent(e);\n        if (portal.current.contains(customEvent.target) && onPortalClick)\n            onPortalClick(customEvent);\n        handleOutsideMouseClick(e);\n    }, [handleOutsideMouseClick]);\n    // used to remove the event listeners on unmount\n    var eventListeners = react_1.useRef({});\n    react_1.useEffect(function () {\n        if (isServer)\n            return;\n        if (!(elToMountTo instanceof HTMLElement) || !(portal.current instanceof HTMLElement))\n            return;\n        // TODO: eventually will need to figure out a better solution for this.\n        // Surely we can find a way to map onScroll/onWheel -> scroll/wheel better,\n        // but for all other event handlers. For now this works.\n        var eventHandlerMap = {\n            onScroll: 'scroll',\n            onWheel: 'wheel',\n        };\n        var node = portal.current;\n        elToMountTo.appendChild(portal.current);\n        // handles all special case handlers. Currently only onScroll and onWheel\n        Object.entries(eventHandlerMap).forEach(function (_a) {\n            var handlerName = _a[0] /* onScroll */, eventListenerName = _a[1] /* scroll */;\n            if (!eventHandlers[handlerName])\n                return;\n            eventListeners.current[handlerName] = function (e) { return eventHandlers[handlerName](createCustomEvent(e)); };\n            document.addEventListener(eventListenerName, eventListeners.current[handlerName]);\n        });\n        document.addEventListener('keydown', handleKeydown);\n        document.addEventListener('mousedown', handleMouseDown);\n        return function () {\n            // handles all special case handlers. Currently only onScroll and onWheel\n            Object.entries(eventHandlerMap).forEach(function (_a) {\n                var handlerName = _a[0], eventListenerName = _a[1];\n                if (!eventHandlers[handlerName])\n                    return;\n                document.removeEventListener(eventListenerName, eventListeners.current[handlerName]);\n                delete eventListeners.current[handlerName];\n            });\n            document.removeEventListener('keydown', handleKeydown);\n            document.removeEventListener('mousedown', handleMouseDown);\n            elToMountTo.removeChild(node);\n        };\n    }, [isServer, handleOutsideMouseClick, handleKeydown, elToMountTo, portal]);\n    var Portal = react_1.useCallback(function (_a) {\n        var children = _a.children;\n        if (portal.current != null)\n            return react_dom_1.createPortal(children, portal.current);\n        return null;\n    }, [portal]);\n    return Object.assign([openPortal, closePortal, open.current, Portal, togglePortal, targetEl, portal], __assign(__assign({ isOpen: open.current, openPortal: openPortal, ref: targetEl, closePortal: closePortal,\n        togglePortal: togglePortal,\n        Portal: Portal, portalRef: portal }, customEventHandlers), { bind: __assign({ ref: targetEl }, customEventHandlers) }));\n}\nexports.default = usePortal;\n//# sourceMappingURL=usePortal.js.map","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent?: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types';\n\nexport default function set(object: FieldValues, path: string, value: unknown) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport filterOutFalsy from './filterOutFalsy';\n\nexport default (obj: any, path: string, defaultValue?: unknown) => {\n  const result = filterOutFalsy(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport get from '../utils/get';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  shallowFieldsStateRef?: React.MutableRefObject<FieldValues>,\n  excludeDisabled?: boolean,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value, disabled },\n      ref,\n    } = field;\n\n    if (disabled && excludeDisabled) {\n      return;\n    }\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (shallowFieldsStateRef) {\n    return get(shallowFieldsStateRef.current, name);\n  }\n}\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { Ref } from '../types';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport isBoolean from './isBoolean';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport set from '../utils/set';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport filterOutFalsy from '../utils/filterOutFalsy';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  shallowFieldsStateRef: React.MutableRefObject<FieldValues>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      set(shallowFieldsStateRef.current, name, value);\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      filterOutFalsy(options).forEach((option, index): void => {\n        const { ref } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !filterOutFalsy(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport { deepMerge } from '../utils/deepMerge';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  shallowFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  excludeDisabled?: boolean,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n        undefined,\n        excludeDisabled,\n      );\n    }\n  }\n\n  return deepMerge(\n    { ...((shallowFieldsStateRef || {}).current || {}) },\n    transformToNestObject(output),\n  );\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isPrimitive from './isPrimitive';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    try {\n      if (\n        (isObject(targetValue) && isObject(sourceValue)) ||\n        (isArray(targetValue) && isArray(sourceValue))\n      ) {\n        target[key] = deepMerge(targetValue, sourceValue);\n      } else {\n        target[key] = sourceValue;\n      }\n    } catch {}\n  }\n\n  return target;\n}\n","import isObject from './isObject';\nimport { FieldError } from '../types';\n\nexport default (error: FieldError, currentError?: FieldError): boolean =>\n  isObject(error) &&\n  isObject(currentError) &&\n  error.type === currentError.type &&\n  error.message === currentError.message &&\n  Object.keys(error.types || {}).length ===\n    Object.keys(currentError.types || {}).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => (currentError.types || {})[key] === value,\n  );\n","import isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport isUndefined from '../utils/isUndefined';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldError,\n} from '../types';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FieldError | undefined;\n  name: InternalFieldName<TFieldValues>;\n  validFields: FieldNamesMarkedBoolean<TFieldValues>;\n  fieldsWithValidation: FieldNamesMarkedBoolean<TFieldValues>;\n}): boolean {\n  const isValid = isUndefined(error);\n  const previousError = get(errors, name);\n\n  return (\n    (isValid && !!previousError) ||\n    (!isValid && !isSameError(previousError, error)) ||\n    (isValid && get(fieldsWithValidation, name) && !get(validFields, name))\n  );\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  InternalFieldErrors,\n} from '../types';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  InternalFieldErrors,\n} from '../types';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  shallowFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<InternalFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: InternalFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? (((fields[name] as Field).options || [])[0] || {}).ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, shallowFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\n\nexport const getPath = <T extends string, U extends object | unknown[]>(\n  path: T,\n  values: U,\n): string[] => {\n  const getInnerPath = <K>(key: K, value: U, isObject?: boolean) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return Object.entries(values)\n    .map(([key, value]) => getInnerPath(key, value, isObject(values)))\n    .flat(Infinity) as string[];\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\nimport {\n  DeepPartial,\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || isArray(value)) {\n      getPath(fieldName, value).forEach((name) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\n\nexport default function deepEqual(object1: any = [], object2: any = []) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n\n    if (\n      (isObject(val1) || isArray(val1)) && (isObject(val2) || isArray(val2))\n        ? !deepEqual(val1, val2)\n        : val1 !== val2\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { FieldValues, InternalFieldName } from '../types';\n\nexport const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (\n  names: Set<InternalFieldName<FieldValues>>,\n  name: InternalFieldName<FieldValues>,\n) => [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import * as React from 'react';\nimport { Field, FieldRefs } from '../types';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove<TFieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  removeFieldEventListenerAndRef: (\n    field: Field | undefined,\n    forceDelete?: boolean,\n  ) => void,\n): MutationObserver {\n  const observer = new MutationObserver((): void => {\n    for (const field of Object.values(fieldsRef.current)) {\n      if (field && field.options) {\n        for (const option of field.options) {\n          if (option && option.ref && isDetached(option.ref)) {\n            removeFieldEventListenerAndRef(field);\n          }\n        }\n      } else if (field && isDetached(field.ref)) {\n        removeFieldEventListenerAndRef(field);\n      }\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport deepEqual from './utils/deepEqual';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport onDomRemove from './utils/onDomRemove';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport filterOutFalsy from './utils/filterOutFalsy';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n  FormState,\n  SubmitErrorHandler,\n  FieldNamesMarkedBoolean,\n  LiteralToPrimitive,\n  DeepPartial,\n  NonUndefined,\n  InternalNameSet,\n  DefaultValues,\n  FieldError,\n} from './types';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {},\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const fieldArrayDefaultValuesRef = React.useRef<\n    Record<InternalFieldName<FieldValues>, unknown[]>\n  >({});\n  const watchFieldsRef = React.useRef<InternalNameSet<TFieldValues>>(new Set());\n  const useWatchFieldsRef = React.useRef<\n    Record<string, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const useWatchRenderFunctionsRef = React.useRef<\n    Record<InternalFieldName<FieldValues>, () => void>\n  >({});\n  const fieldsWithValidationRef = React.useRef<\n    FieldNamesMarkedBoolean<TFieldValues>\n  >({});\n  const validFieldsRef = React.useRef<FieldNamesMarkedBoolean<TFieldValues>>(\n    {},\n  );\n  const defaultValuesRef = React.useRef<DefaultValues<TFieldValues>>(\n    defaultValues,\n  );\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const shallowFieldsStateRef = React.useRef(\n    shouldUnregister ? {} : defaultValues,\n  );\n  const resetFieldArrayFunctionRef = React.useRef<\n    Record<\n      InternalFieldName<FieldValues>,\n      (data?: UnpackNestedValue<DeepPartial<TFieldValues>>) => void\n    >\n  >({});\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<InternalNameSet<TFieldValues>>(\n    new Set(),\n  );\n  const modeRef = React.useRef(modeChecker(mode));\n  const { isOnSubmit, isOnTouch } = modeRef.current;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const [formState, setFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touched: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: !isOnSubmit,\n    errors: {},\n  });\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const formStateRef = React.useRef(formState);\n  const observerRef = React.useRef<MutationObserver | undefined>();\n  const {\n    isOnBlur: isReValidateOnBlur,\n    isOnChange: isReValidateOnChange,\n  } = React.useRef(modeChecker(reValidateMode)).current;\n\n  contextRef.current = context;\n  resolverRef.current = resolver;\n  formStateRef.current = formState;\n\n  const updateFormState = React.useCallback(\n    (state: Partial<FormState<TFieldValues>> = {}) =>\n      !isUnMount.current &&\n      setFormState({\n        ...formStateRef.current,\n        ...state,\n      }),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FieldError | undefined,\n      shouldRender: boolean | null = false,\n      state: {\n        dirtyFields?: FieldNamesMarkedBoolean<TFieldValues>;\n        isDirty?: boolean;\n        touched?: FieldNamesMarkedBoolean<TFieldValues>;\n      } = {},\n      isValid?: boolean,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: formStateRef.current.errors,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(formStateRef.current.errors, name);\n\n      if (error) {\n        unset(validFieldsRef.current, name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error);\n        set(formStateRef.current.errors, name, error);\n      } else {\n        if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\n          set(validFieldsRef.current, name, true);\n          shouldReRender = shouldReRender || previousError;\n        }\n        unset(formStateRef.current.errors, name);\n      }\n\n      if (\n        (shouldReRender && !isNullOrUndefined(shouldRender)) ||\n        !isEmptyObject(state)\n      ) {\n        updateFormState({\n          ...state,\n          errors: formStateRef.current.errors,\n          ...(resolverRef.current ? { isValid: !!isValid } : {}),\n        });\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | string[]\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string[]).includes(\n              selectRef.value,\n            )),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = isArray(value)\n                  ? !!(value as []).find(\n                      (data: string) => data === checkboxRef.value,\n                    )\n                  : value === checkboxRef.value),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const updateAndGetDirtyState = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      shouldRender = true,\n    ): {\n      dirtyFields?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    } => {\n      if (\n        !fieldsRef.current[name] ||\n        (!readFormStateRef.current.isDirty &&\n          !readFormStateRef.current.dirtyFields)\n      ) {\n        return {};\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, shallowFieldsStateRef);\n      const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = formStateRef.current.isDirty;\n\n      isFieldDirty\n        ? set(formStateRef.current.dirtyFields, name, true)\n        : unset(formStateRef.current.dirtyFields, name);\n\n      const state = {\n        isDirty:\n          (isFieldArray &&\n            !deepEqual(\n              get(getValues(), getFieldArrayParentName(name)),\n              get(defaultValuesRef.current, getFieldArrayParentName(name)),\n            )) ||\n          !isEmptyObject(formStateRef.current.dirtyFields),\n        dirtyFields: formStateRef.current.dirtyFields,\n      };\n\n      const isChanged =\n        (readFormStateRef.current.isDirty &&\n          previousIsDirty !== state.isDirty) ||\n        (readFormStateRef.current.dirtyFields &&\n          isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name));\n\n      if (isChanged && shouldRender) {\n        formStateRef.current = {\n          ...formStateRef.current,\n          ...state,\n        };\n        updateFormState({\n          ...state,\n        });\n      }\n\n      return isChanged ? state : {};\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean | null,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = (\n          await validateField<TFieldValues>(\n            fieldsRef,\n            isValidateAllFieldCriteria,\n            fieldsRef.current[name] as Field,\n            shallowFieldsStateRef,\n          )\n        )[name];\n\n        shouldRenderBaseOnError(name, error, skipReRender);\n\n        return isUndefined(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      names:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues(),\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = formStateRef.current.isValid;\n\n      if (isArray(names)) {\n        const isInputsValid = names\n          .map((name) => {\n            const error = get(errors, name);\n\n            error\n              ? set(formStateRef.current.errors, name, error)\n              : unset(formStateRef.current.errors, name);\n\n            return !error;\n          })\n          .every(Boolean);\n\n        updateFormState({\n          isValid: isEmptyObject(errors),\n          errors: formStateRef.current.errors,\n        });\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, names);\n\n        shouldRenderBaseOnError(\n          names,\n          error,\n          previousFormIsValid !== isEmptyObject(errors),\n          {},\n          isEmptyObject(errors),\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, null)),\n        );\n        updateFormState();\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    <T extends string, U extends object | unknown[]>(\n      name: T,\n      value: U,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      getPath(name, value).forEach((fieldName) => {\n        const data = {};\n        const field = fieldsRef.current[fieldName];\n\n        if (field) {\n          set(data, name, value);\n          setFieldValue(field, get(data, fieldName));\n\n          if (shouldDirty) {\n            updateAndGetDirtyState(fieldName);\n          }\n\n          if (shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      });\n    },\n    [trigger, setFieldValue, updateAndGetDirtyState],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ) => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        config.shouldDirty && updateAndGetDirtyState(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n\n        if (\n          isNameInFieldArray(fieldArrayNamesRef.current, name) ||\n          fieldArrayNamesRef.current.has(name)\n        ) {\n          const fieldArrayParentName = getFieldArrayParentName(name) || name;\n          fieldArrayDefaultValuesRef.current[fieldArrayParentName] = value;\n          resetFieldArrayFunctionRef.current[fieldArrayParentName]({\n            [name]: value,\n          } as UnpackNestedValue<DeepPartial<TFieldValues>>);\n        }\n      }\n\n      !shouldUnregister && set(shallowFieldsStateRef.current, name, value);\n    },\n    [updateAndGetDirtyState, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(useWatchFieldsRef.current)) {\n      for (const key in useWatchFieldsRef.current) {\n        if (\n          !name ||\n          useWatchFieldsRef.current[key].has(name) ||\n          useWatchFieldsRef.current[key].has(getFieldArrayParentName(name)) ||\n          !useWatchFieldsRef.current[key].size\n        ) {\n          useWatchRenderFunctionsRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    setInternalValue(name, value as TFieldValues[string], config);\n\n    if (isFieldWatched(name)) {\n      updateFormState();\n    }\n\n    renderWatchedInputs(name);\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error;\n        let isValid;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation = skipValidation({\n            isBlurEvent,\n            isReValidateOnChange,\n            isReValidateOnBlur,\n            isTouched: !!get(formStateRef.current.touched, name),\n            isSubmitted: formStateRef.current.isSubmitted,\n            ...modeRef.current,\n          });\n          let state = updateAndGetDirtyState(name, false);\n          let shouldRender = !isEmptyObject(state) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(formStateRef.current.touched, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(formStateRef.current.touched, name, true);\n            state = {\n              ...state,\n              touched: formStateRef.current.touched,\n            };\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return (\n              (!isEmptyObject(state) ||\n                (shouldRender && isEmptyObject(state))) &&\n              updateFormState(state)\n            );\n          }\n\n          if (resolverRef.current) {\n            const { errors } = await resolverRef.current(\n              getValues(),\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = formStateRef.current.isValid;\n\n            error = get(errors, name);\n\n            isValid = isEmptyObject(errors);\n\n            if (previousFormIsValid !== isValid) {\n              shouldRender = true;\n            }\n          } else {\n            error = (\n              await validateField<TFieldValues>(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                shallowFieldsStateRef,\n              )\n            )[name];\n          }\n\n          renderWatchedInputs(name);\n          shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, shallowFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      const data = {};\n\n      for (const name of payload) {\n        set(data, name, getFieldValue(fieldsRef, name, shallowFieldsStateRef));\n      }\n\n      return data;\n    }\n\n    return getFieldsValues(fieldsRef, shallowFieldsStateRef);\n  }\n\n  const validateResolver = React.useCallback(\n    async (values = {}) => {\n      const { errors } = await resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = formStateRef.current.isValid;\n      const isValid = isEmptyObject(errors);\n\n      if (previousFormIsValid !== isValid) {\n        updateFormState({\n          isValid,\n        });\n      }\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        shallowFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (field) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister && !filterOutFalsy(field.options || []).length) {\n          delete defaultValuesAtRenderRef.current[field.ref.name];\n          unset(validFieldsRef.current, field.ref.name);\n          unset(fieldsWithValidationRef.current, field.ref.name);\n          unset(formStateRef.current.errors, field.ref.name);\n          unset(formStateRef.current.dirtyFields, field.ref.name);\n          unset(formStateRef.current.touched, field.ref.name);\n\n          updateFormState({\n            errors: formStateRef.current.errors,\n            isDirty: !isEmptyObject(formStateRef.current.dirtyFields),\n            dirtyFields: formStateRef.current.dirtyFields,\n            touched: formStateRef.current.touched,\n          });\n\n          resolverRef.current && validateResolver();\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    name &&\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        fieldsRef.current[inputName]\n          ? delete formStateRef.current.errors[inputName]\n          : unset(formStateRef.current.errors, inputName),\n      );\n\n    updateFormState({\n      errors: name ? formStateRef.current.errors : {},\n    });\n  }\n\n  function setError(\n    name: FieldName<TFieldValues>,\n    error: ErrorOption = {},\n  ): void {\n    const ref = (fieldsRef.current[name] || {})!.ref;\n\n    set(formStateRef.current.errors, name, {\n      ...error,\n      ref,\n    });\n\n    updateFormState({\n      isValid: false,\n      errors: formStateRef.current.errors,\n    });\n\n    error.shouldFocus && ref && ref.focus && ref.focus();\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? useWatchFieldsRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        shallowFieldsStateRef,\n        false,\n        fieldNames,\n      );\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (fieldNames) {\n          const fieldRefNames = Object.keys(fieldsRef.current);\n\n          if (fieldRefNames.length) {\n            (isArray(fieldNames) ? fieldNames : [fieldNames]).forEach(\n              (name) => {\n                if (\n                  !fieldRefNames.find((fieldName) => fieldName.startsWith(name))\n                ) {\n                  console.warn(\n                    `📋 watched fields: ${fieldNames} are not found.`,\n                  );\n                }\n              },\n            );\n          }\n        }\n      }\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn(\n          '📋 Field is missing `name` attribute',\n          ref,\n          `https://react-hook-form.com/api#useForm`,\n        );\n      }\n\n      if (\n        fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\n        !RegExp(\n          `^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+].\\\\w+`\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]'),\n        ).test(ref.name)\n      ) {\n        return console.warn(\n          '📋 `name` prop should be in object shape: name=\"test[index].name\"',\n          ref,\n          'https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    const compareRef = (currentRef: Ref) =>\n      isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          filterOutFalsy(field.options).find((option) => {\n            return value === option.ref.value && compareRef(option.ref);\n          })\n        : compareRef(field.ref))\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...filterOutFalsy((field && field.options) || []),\n              {\n                ref,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(shallowFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : shallowFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      set(fieldsWithValidationRef.current, name, true);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          shallowFieldsStateRef,\n        ).then((error: FieldErrors) => {\n          const previousFormIsValid = formStateRef.current.isValid;\n\n          isEmptyObject(error)\n            ? set(validFieldsRef.current, name, true)\n            : unset(validFieldsRef.current, name);\n\n          if (previousFormIsValid !== isEmptyObject(error)) {\n            updateFormState();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      const fieldValue = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? isObject(fieldValue)\n          ? { ...fieldValue }\n          : fieldValue\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      onValid: SubmitHandler<TSubmitFieldValues>,\n      onInvalid?: SubmitErrorHandler<TFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues = getFieldsValues(fieldsRef, shallowFieldsStateRef, true);\n\n      if (readFormStateRef.current.isSubmitting) {\n        updateFormState({\n          isSubmitting: true,\n        });\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          formStateRef.current.errors = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                shallowFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                unset(validFieldsRef.current, name);\n              } else if (get(fieldsWithValidationRef.current, name)) {\n                unset(formStateRef.current.errors, name);\n                set(validFieldsRef.current, name, true);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(formStateRef.current.errors).every(\n            (name) => name in fieldsRef.current,\n          )\n        ) {\n          updateFormState({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          formStateRef.current.errors = {\n            ...formStateRef.current.errors,\n            ...fieldErrors,\n          };\n          if (onInvalid) {\n            await onInvalid(fieldErrors, e);\n          }\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        updateFormState({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\n          errors: formStateRef.current.errors,\n          submitCount: formStateRef.current.submitCount + 1,\n        });\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    if (!isValid) {\n      validFieldsRef.current = {};\n      fieldsWithValidationRef.current = {};\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValuesRef.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n\n    updateFormState({\n      isDirty: isDirty ? formStateRef.current.isDirty : false,\n      isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n      submitCount: submitCount ? formStateRef.current.submitCount : 0,\n      isValid: isValid ? formStateRef.current.isValid : true,\n      dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\n      touched: touched ? formStateRef.current.touched : {},\n      errors: errors ? formStateRef.current.errors : {},\n    });\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    fieldsRef.current = {};\n\n    defaultValuesRef.current = values || { ...defaultValuesRef.current };\n\n    if (values) {\n      renderWatchedInputs('');\n    }\n\n    shallowFieldsStateRef.current = shouldUnregister ? {} : values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n  };\n\n  observerRef.current =\n    observerRef.current || !isWeb\n      ? observerRef.current\n      : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        return;\n      }\n\n      fieldsRef.current &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver && readFormStateRef.current.isValid) {\n    formState.isValid =\n      deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) &&\n      isEmptyObject(formStateRef.current.errors);\n  }\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [setInternalValue, trigger]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    mode: modeRef.current,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    useWatchFieldsRef,\n    useWatchRenderFunctionsRef,\n    fieldArrayDefaultValuesRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    readFormStateRef,\n    formStateRef,\n    defaultValuesRef,\n    shallowFieldsStateRef,\n    updateFormState,\n    shouldUnregister,\n    validateResolver: resolver ? validateResolver : undefined,\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    formState: isProxyEnabled\n      ? new Proxy(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (\n              process.env.NODE_ENV !== 'production' &&\n              prop === 'isValid' &&\n              isOnSubmit\n            ) {\n              console.warn(\n                '📋 `formState.isValid` is applicable with `onTouched`, `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState',\n              );\n            }\n\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: formState.errors,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues, FormProviderProps } from './types';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\n\nexport default (event: any) =>\n  isPrimitive(event) ||\n  !isObject(event.target) ||\n  (isObject(event.target) && !event.type)\n    ? event\n    : isUndefined(event.target.value)\n    ? event.target.checked\n    : event.target.value;\n","import * as React from 'react';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport getInputValue from './logic/getInputValue';\nimport skipValidation from './logic/skipValidation';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport { useFormContext } from './useFormContext';\nimport { VALUE } from './constants';\nimport { Control } from './types';\nimport { ControllerProps } from './types';\n\nconst Controller = <\n  TAs extends\n    | React.ReactElement\n    | React.ComponentType<any>\n    | 'input'\n    | 'select'\n    | 'textarea',\n  TControl extends Control = Control\n>({\n  name,\n  rules,\n  as,\n  render,\n  defaultValue,\n  control,\n  onFocus,\n  ...rest\n}: ControllerProps<TAs, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production' && !control && !methods) {\n    throw new Error(\n      '📋 Controller is missing `control` prop. https://react-hook-form.com/api#Controller',\n    );\n  }\n\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode,\n    reValidateMode: { isReValidateOnBlur, isReValidateOnChange },\n    formStateRef: {\n      current: { isSubmitted, touched },\n    },\n    updateFormState,\n    readFormStateRef,\n    fieldsRef,\n    fieldArrayNamesRef,\n    shallowFieldsStateRef,\n  } = control || methods.control;\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () =>\n    !isUndefined(get(shallowFieldsStateRef.current, name)) && isNotFieldArray\n      ? get(shallowFieldsStateRef.current, name)\n      : isUndefined(defaultValue)\n      ? get(defaultValuesRef.current, name)\n      : defaultValue;\n  const [value, setInputStateValue] = React.useState(getInitialValue());\n  const valueRef = React.useRef(value);\n  const onFocusRef = React.useRef(onFocus);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isUndefined(value)) {\n      console.warn(\n        `📋 ${name} is missing in the 'defaultValue' prop of either its Controller (https://react-hook-form.com/api#Controller) or useForm (https://react-hook-form.com/api#useForm)`,\n      );\n    }\n\n    if ((!as && !render) || (as && render)) {\n      console.warn(\n        `📋 ${name} Controller should use either the 'as' or 'render' prop, not both. https://react-hook-form.com/api#Controller`,\n      );\n    }\n\n    if (!isNotFieldArray && isUndefined(defaultValue)) {\n      console.warn(\n        '📋 Controller is missing `defaultValue` prop when using `useFieldArray`. https://react-hook-form.com/api#Controller',\n      );\n    }\n  }\n\n  const shouldValidate = (isBlurEvent?: boolean) =>\n    !skipValidation({\n      isBlurEvent,\n      isReValidateOnBlur,\n      isReValidateOnChange,\n      isSubmitted,\n      isTouched: !!get(touched, name),\n      ...mode,\n    });\n\n  const commonTask = ([event]: any[]) => {\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  const registerField = React.useCallback(() => {\n    if (process.env.NODE_ENV !== 'production' && !name) {\n      return console.warn(\n        '📋 Field is missing `name` prop. https://react-hook-form.com/api#Controller',\n      );\n    }\n\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = {\n        ref: fieldsRef.current[name]!.ref,\n        ...rules,\n      };\n    } else {\n      register(\n        Object.defineProperty({ name, focus: onFocusRef.current }, VALUE, {\n          set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get() {\n            return valueRef.current;\n          },\n        }),\n        rules,\n      );\n      if (isNotFieldArray && !get(defaultValuesRef.current, name)) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  }, [rules, name, register]);\n\n  React.useEffect(\n    () => () => {\n      !isNameInFieldArray(fieldArrayNamesRef.current, name) && unregister(name);\n    },\n    [unregister, name, fieldArrayNamesRef],\n  );\n\n  React.useEffect(() => {\n    registerField();\n  }, [registerField]);\n\n  React.useEffect(() => {\n    if (!fieldsRef.current[name]) {\n      registerField();\n      if (isNotFieldArray) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  });\n\n  const onBlur = () => {\n    if (readFormStateRef.current.touched && !get(touched, name)) {\n      set(touched, name, true);\n      updateFormState({\n        touched,\n      });\n    }\n\n    if (shouldValidate(true)) {\n      trigger(name);\n    }\n  };\n\n  const onChange = (...event: any[]) =>\n    setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true,\n    });\n\n  const props = {\n    ...rest,\n    onChange,\n    onBlur,\n    name,\n    value,\n  };\n\n  return as\n    ? React.isValidElement(as)\n      ? React.cloneElement(as, props)\n      : React.createElement(as as string, props as any)\n    : render\n    ? render({\n        onChange,\n        onBlur,\n        value,\n        name,\n      })\n    : null;\n};\n\nexport { Controller };\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Device;\n(function (Device) {\n    Device[\"Browser\"] = \"browser\";\n    Device[\"Server\"] = \"server\";\n    Device[\"Native\"] = \"native\";\n})(Device = exports.Device || (exports.Device = {}));\nvar Browser = Device.Browser, Server = Device.Server, Native = Device.Native;\nvar canUseDOM = !!(typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement);\nvar canUseNative = typeof navigator != 'undefined' && navigator.product == 'ReactNative';\nvar device = canUseNative ? Native : canUseDOM ? Browser : Server;\nvar SSRObject = {\n    isBrowser: device === Browser,\n    isServer: device === Server,\n    isNative: device === Native,\n    device: device,\n    canUseWorkers: typeof Worker !== 'undefined',\n    canUseEventListeners: device === Browser && !!window.addEventListener,\n    canUseViewport: device === Browser && !!window.screen,\n};\n// TODO: instead of this, do a polyfill for `Object.assign` https://www.npmjs.com/package/es6-object-assign\nvar assign = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.reduce(function (acc, obj) { return (__assign(__assign({}, acc), obj)); }, {});\n};\nvar values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\nvar toArrayObject = function () { return assign((values(SSRObject), SSRObject)); };\nvar useSSRObject = toArrayObject();\nexports.weAreServer = function () {\n    SSRObject.isServer = true;\n    useSSRObject = toArrayObject();\n};\nexports.useSSR = function () { return useSSRObject; };\nexports.default = exports.useSSR;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}