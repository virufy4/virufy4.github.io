{"version":3,"sources":["hooks/useHeaderContext.ts","helper/scrollHelper.ts","utils/wizard.ts","components/Button/style.ts","components/Button/Button.tsx","components/WizardButtons/style.ts","components/WizardButtons/WizardButtons.tsx","containers/SubmitSteps/Submission/PredictionResult/PredictionResult.tsx","containers/SubmitSteps/Submission/PredictionResult/index.ts"],"names":["useHeaderContext","React","useContext","HeaderContext","title","setTitle","subtitle","setSubtitle","type","setType","logoSize","setLogoSize","setDoGoBack","doGoBack","scrollToTop","window","scrollTo","top","behavior","updateAction","storeKey","state","payload","resetStore","welcome","language","StyledButton","styled","button","dark","color","disabled","colors","purple_50","purple","white","Button","memo","children","props","WizardButtonsContainer","div","theme","layout","generalPaddingAmount","breakpoints","tablet","WizardButtons","invert","leftLabel","leftDisabled","leftHandler","rightLabel","rightDisabled","rightHandler","onClick","PredictionResult","t","useTranslation","useStateMachine","actions","Portal","usePortal","bindTo","document","getElementById","history","useHistory","useState","errorCode","setErrorCode","processing","setProcessing","prediction","setPrediction","submitError","setSubmitError","useEffect","target","style","display","handleSubmit","a","recordYourCough","body","FormData","coughFile","recordingFile","uploadedFile","append","name","axios","post","process","headers","predictionResult","data","console","log","handleReturnMain","useCallback","replace","i18nKey"],"mappings":"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","file":"static/js/17.5d7b0693.chunk.js","sourcesContent":["import React from 'react';\nimport { HeaderContext } from 'components/Header';\n\nconst useHeaderContext = () => {\n  const {\n    title, setTitle, subtitle, setSubtitle, type, setType, logoSize, setLogoSize, setDoGoBack, doGoBack,\n  } = React.useContext(HeaderContext);\n\n  return {\n    title,\n    setTitle,\n    subtitle,\n    setSubtitle,\n    type,\n    setType,\n    logoSize,\n    setLogoSize,\n    doGoBack,\n    setDoGoBack,\n  };\n};\n\nexport default useHeaderContext;\n","export const scrollToTop = function scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nexport const scrollToBottom = function scrollToBottom() {\n  window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\n};\n","// TODO: Improve types\nexport function updateAction(storeKey: string): any {\n  return (state: any, payload: any) => ({\n    ...state,\n    [storeKey]: {\n      ...state[storeKey],\n      ...payload,\n    },\n  });\n}\n\nexport function resetStore(): any {\n  return (state: any) => ({ welcome: { language: state.welcome.language } });\n}\n","import styled from 'styled-components';\nimport { colors } from '../../theme';\n\nexport interface StyledButtonProps {\n  disabled?: boolean;\n  dark?: boolean;\n  id?: string;\n}\n\nexport const StyledButton = styled.button<StyledButtonProps>`\n  height: 52px;\n  border-radius: 15px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  font-weight: bold;\n  font-size: 14px;\n  font-weight: bold;\n  width: 100%;\n\n  ${({ dark, disabled }) => {\n    const color = disabled ? colors.purple_50 : colors.purple;\n    return dark ? `\n    background-color: ${color};\n    color: ${colors.white};\n    border: none;\n  ` : `\n    background-color: ${colors.white};\n    color: ${color};\n    border: 1px solid ${color};\n  `;\n  }}\n`;\n","import React, { PropsWithChildren } from 'react';\n\n// Styles\nimport {\n  StyledButton,\n  StyledButtonProps,\n} from './style';\n\nexport interface ButtonProps extends PropsWithChildren<StyledButtonProps> {\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void);\n}\n\nconst Button = React.memo(({ children, ...props }: ButtonProps) => ((\n  <StyledButton\n    type=\"button\"\n    {...props}\n  >\n    {children}\n  </StyledButton>\n)));\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const WizardButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: ${props => `calc(100% - ${props.theme.layout.generalPaddingAmount * 2}px)`};\n  margin: 0 auto;\n\n  button {\n    flex: 1;\n\n    &:first-of-type {\n      margin-left: 0px !important;\n    }\n\n    &:last-of-type {\n      margin-left: 20px;\n    }\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Components\nimport Button from 'components/Button';\n\n// Styles\nimport {\n  WizardButtonsContainer,\n} from './style';\n\ninterface WizardButtonsProps {\n  invert?: boolean;\n  leftLabel: string;\n  leftDisabled?: boolean;\n  leftHandler: () => void;\n  rightLabel?: string;\n  rightDisabled?: boolean;\n  rightHandler?: () => void;\n}\n\nconst WizardButtons = React.memo(({\n  invert = false,\n  leftLabel,\n  leftDisabled,\n  leftHandler,\n  rightLabel,\n  rightDisabled,\n  rightHandler,\n}: WizardButtonsProps) => (\n  <WizardButtonsContainer>\n    <Button\n      dark={invert}\n      disabled={leftDisabled}\n      onClick={leftHandler}\n    >\n      {leftLabel}\n    </Button>\n    {\n        rightLabel && rightHandler && (\n          <Button\n            dark={!invert}\n            disabled={rightDisabled}\n            onClick={rightHandler}\n          >\n            {rightLabel}\n          </Button>\n        )\n      }\n  </WizardButtonsContainer>\n));\nexport default React.memo(WizardButtons);\n","import React from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\nimport usePortal from 'react-useportal';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\n// Form\nimport { useStateMachine } from 'little-state-machine';\n\n// Update Action\nimport { resetStore } from 'utils/wizard';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Utils\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Styles\nimport WizardButtons from 'components/WizardButtons';\nimport {\n  Title,\n  ImageProcessing,\n  ProcessingContainer,\n  PredictionResultContainer,\n  TitleResult,\n  ImagePredictionResult,\n  IntroText,\n  StyledLow,\n  StyledHigh,\n  SubmitError,\n} from './style';\n\nconst predictionEndpointUrl = process.env.REACT_APP_PREDICTION_ENDPOINT || '';\n\nconst PredictionResult = () => {\n  // Hooks\n  const {\n    setDoGoBack, setTitle, setSubtitle, setType,\n  } = useHeaderContext();\n  const { t } = useTranslation();\n  const { actions, state } = useStateMachine({ resetStore: resetStore() });\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const history = useHistory();\n\n  // States\n  const [errorCode, setErrorCode] = React.useState<string | null>(null);\n  const [processing, setProcessing] = React.useState<boolean>(true);\n  const [prediction, setPrediction] = React.useState<string>('unknown');\n  const [submitError, setSubmitError] = React.useState<string | null>(null);\n\n  React.useEffect(() => {\n    // Hide the Footer Report Problems while processing\n    const target = document && document.getElementById('footer-report-problems');\n    if (target) {\n      if (processing) {\n        target.style.display = 'none';\n      } else {\n        target.style.display = 'flex';\n      }\n    }\n  }, [processing]);\n\n  // Handlers\n  const handleSubmit = async () => {\n    try {\n      setSubmitError(null);\n      if (state && state.welcome && state['submit-steps']) {\n        const {\n          recordYourCough,\n        } = state['submit-steps'];\n\n        const body = new FormData();\n\n        // Records\n        const coughFile = recordYourCough?.recordingFile || recordYourCough?.uploadedFile;\n        if (coughFile) {\n          body.append('cough', coughFile, coughFile.name || 'filename.wav');\n        }\n\n        const predictionResult = await axios.post(predictionEndpointUrl, body, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n        if (predictionResult.data) {\n          setProcessing(false);\n          setPrediction(predictionResult.data.prediction);\n          setErrorCode(predictionResult.data.errorCode);\n          actions.resetStore({});\n        }\n      } else {\n        actions.resetStore({});\n      }\n    } catch (err) {\n      console.log('Error', err);\n      setSubmitError(t('predictionResult:submitError'));\n    }\n  };\n\n  const handleReturnMain = React.useCallback(() => {\n    history.replace('/welcome');\n  }, [history]);\n\n  // Effects\n  React.useEffect(() => {\n    scrollToTop();\n    setTitle('');\n    setDoGoBack(() => {});\n    setType('noShape');\n    handleSubmit();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (processing) {\n      setSubtitle('');\n    } else {\n      setSubtitle(`${t('predictionResult:result')}`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [processing]);\n\n  // Always positive result hardcoded\n\n  console.log('errorCode', errorCode);\n\n  return (\n    <>\n      {\n        processing ? (\n          <ProcessingContainer>\n            {/* Title */}\n            <Title>\n              {t('predictionResult:processingTitle')}\n            </Title>\n\n            {/* Image */}\n            <ImageProcessing />\n          </ProcessingContainer>\n        ) : (\n          <>\n            {\n            (errorCode === 'invalid_access_code')\n              ? (\n                <PredictionResultContainer>\n                  <Title>\n                    {t('predictionResult:result')}\n                  </Title>\n                  <TitleResult color=\"#FF4444\">\n                    <Trans i18nKey=\"predictionResult:resultDetectedDummy\" />\n                  </TitleResult>\n                  <StyledHigh />\n                  <IntroText>\n                    <Trans i18nKey=\"predictionResult:resultDetectedText\">\n                      {/* eslint-disable-next-line max-len */}\n                      Your voice has indicators of COVID-19. Please contact your\n                      healthcare professional and take additional precautions.\n                    </Trans>\n                  </IntroText>\n                  <ImagePredictionResult />\n                </PredictionResultContainer>\n              ) : (\n                <>\n                  <PredictionResultContainer>\n                    <Title>\n                      {t('predictionResult:result')}\n                    </Title>\n                    {/* Title, text and image conditional based on range result */}\n                    {prediction === 'positive' && (\n                      <>\n                        <TitleResult color=\"#4FDB76\">{t('predictionResult:resultNotDetected')}</TitleResult>\n                        <StyledLow />\n                        <IntroText>\n                          <Trans i18nKey=\"predictionResult:resultNotDetectedText\">\n                            {/* eslint-disable-next-line max-len */}\n                            Your voice does not seem to have indicators of COVID-19. Please <strong>continue to take appropriate measures</strong> based on the advice of your healthcare professional or applicable regulatory body and reassess yourself in our app daily.\n                          </Trans>\n                        </IntroText>\n                      </>\n                    )}\n                    {prediction === 'unknown' && (\n                      <>\n                        <TitleResult>{t('predictionResult:resultNotAnalyze')}</TitleResult>\n                        <IntroText>\n                          <Trans i18nKey=\"predictionResult:resultNotAnalyzeText\">\n                            Our algorithm is not able to determine your COVID-19 status.\n                            <strong>Please submit another cough</strong>.\n                          </Trans>\n                        </IntroText>\n                      </>\n                    )}\n                    {prediction === 'negative' && (\n                      <>\n                        <StyledHigh />\n                        <TitleResult color=\"#FF4444\">{t('predictionResult:resultDetected')}</TitleResult>\n                        <IntroText>\n                          <Trans i18nKey=\"predictionResult:resultDetectedText\">\n                            Your voice has indicators of COVID-19. Please contact your\n                            healthcare professional and take additional precautions.\n                          </Trans>\n                        </IntroText>\n                      </>\n                    )}\n                  </PredictionResultContainer>\n                </>\n              )\n          }\n          </>\n        )\n      }\n\n      {/* Bottom Buttons */}\n      <Portal>\n        {\n          !processing && (\n            <>\n              <IntroText>\n                <Trans i18nKey=\"predictionResult:resultModalDummy\">\n                  {/* eslint-disable-next-line max-len */}\n                  <strong>Aviso importante:</strong> Esta aplicación no predecirá su estado de COVID-19 ni diagnosticará ninguna enfermedad, trastorno u otra condición de salud. Virufy está llevando a cabo una investigación y utilizará la información que proporciones únicamente para dicha investigación. Virufy no sustituirá a un médico y le recuerda que es su responsabilidad buscar consejo médico de su médico.\n                </Trans>\n              </IntroText>\n              <WizardButtons\n                invert\n                leftLabel={t('predictionResult:nextButton')}\n                leftHandler={handleReturnMain}\n              />\n            </>\n          )\n        }\n        {submitError && (\n        <SubmitError>\n          {`${t('predictionResult:error')} ${submitError}`}\n        </SubmitError>\n        )}\n      </Portal>\n    </>\n  );\n};\n\nexport default React.memo(PredictionResult);\n","export { default } from './PredictionResult';\n"],"sourceRoot":""}