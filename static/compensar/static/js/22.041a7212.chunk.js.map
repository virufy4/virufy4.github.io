{"version":3,"sources":["../node_modules/little-state-machine/dist/little-state-machine.es.js","hooks/useHeaderContext.ts","helper/scrollHelper.ts","utils/wizard.ts","assets/icons/exclamationCircle.svg","modals/CountryErrorModal/style.ts","modals/CountryErrorModal/CountryErrorModal.tsx","data/lang.ts","data/states/states.ts","data/country.ts","data/timeZones.ts","containers/Welcome/Step1/Step1.tsx","assets/images/logo-xoor.svg","components/CreatedBy/style.ts","components/CreatedBy/CreatedBy.tsx","containers/Welcome/Step1/index.ts"],"names":["getBrowserStoreData","storageType","storeName","sessionStorageData","getItem","JSON","parse","undefined","_a","storeFactory","name","store","set","value","get","getName","isUndefined","val","setUpDevTools","isDevMode","getStore","window","STATE_MACHINE_DEBUG","setItem","STATE_MACHINE_RESET","clear","STATE_MACHINE_GET_STORE","STATE_MACHINE_SAVE_TO","localStorage","stringify","STATE_MACHINE_LOAD","data","StateMachineContext","createContext","updateStore","payload","transformStore","transform","externalStoreName","externalStoreData","currentStoreData","getSyncStoreData","defaultStoreData","options","syncStoreOption","syncStores","Array","isArray","forEach","option","Object","entries","key","values","browserStore","assign","setStore","isClient","sessionStorage","length","toString","removeItem","middleWaresArray","setStorageType","type","createStore","middleWares","methods","process","StateMachineProvider","props","useState","globalState","useMemo","createElement","Provider","actionTemplate","callback","result","shouldReRenderApp","pipeData","reduce","currentValue","currentFunction","useStateMachine","updateStoreFunction","useContext","keys","actions","previous","useCallback","action","p","state","useHeaderContext","React","HeaderContext","title","setTitle","subtitle","setSubtitle","setType","logoSize","setLogoSize","setDoGoBack","doGoBack","scrollToTop","scrollTo","top","behavior","updateAction","storeKey","resetStore","welcome","language","_extends","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","_ref3","points","_ref4","SvgExclamationCircle","_ref","svgRef","width","height","viewBox","fill","ref","ForwardRef","forwardRef","ModalBody","styled","div","theme","breakpoints","tablet","ModalTitle","ModalContent","ModalLink","a","Modal","setAppElement","CountryErrorModal","memo","modalTitle","children","t","useTranslation","style","content","maxWidth","margin","borderRadius","border","overlay","backgroundColor","className","href","languageData","label","states","Afghanistan","Albania","Algeria","Andorra","Angola","Antigua","Argentina","Armenia","Australia","Austria","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia","Botswana","Brazil","Brunei","Bulgaria","Burkina","Burundi","Cabo","Cambodia","Cameroon","Canada","CentralAfrican","Chad","Chile","China","Colombia","Comoros","Congo","Cook","CostaRica","Croatia","Cuba","Cyprus","Czechia","IvoryCoast","RepublicCongo","Denmark","Djibouti","Dominica","DominicanRepublic","Ecuador","Egypt","Salvador","EquatorialGuinea","Eritrea","Estonia","Ethiopia","Faroe","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","GuineaBissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Ireland","Israel","Italy","Jamaica","Japan","Kazakhstan","Kenya","Kiribati","Kyrgyzstan","Lao","Lebanon","Lesotho","Liberia","Luxembourg","Madagascar","Malawi","Malaysia","Maldives","Mali","Marshall","Mauritania","Mauritius","Mexico","Micronesia","Monaco","Mongolia","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","NewZealand","Nicaragua","Niger","Nigeria","Niue","Norway","Oman","Palau","Panama","Papua","Paraguay","Peru","Philippines","Portugal","RepublicKorea","Romania","Russian","Rwanda","SaintKitts","SaintLucia","SaintVincent","Samoa","SanMarino","SaoTome","Saudi","Senegal","Seychelles","Sierra","Singapore","Slovakia","Slovenia","Solomon","SouthAfrica","SouthSudan","Spain","Sri","Sudan","Suriname","Sweden","Switzerland","Syrian","Tajikistan","Thailand","Timor","Togo","Tonga","Trinidad","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","UnitedArab","UnitedKingdom","Tanzania","UnitedStates","Uruguay","Uzbekistan","Vanuatu","Venezuela","Zambia","Zimbabwe","countryData","telephonePrefix","defaultLang","supportedLang","countriesWithStates","filter","c","map","timeZones","Dubai","Kabul","Tirane","Yerevan","Casey","Davis","Mawson","Palmer","Rothera","Troll","Vostok","Buenos_Aires","Cordoba","Salta","Jujuy","Tucuman","Catamarca","La_Rioja","San_Juan","Mendoza","San_Luis","Rio_Gallegos","Ushuaia","Pago_Pago","Vienna","Lord_Howe","Macquarie","Hobart","Melbourne","Sydney","Broken_Hill","Brisbane","Lindeman","Adelaide","Darwin","Perth","Eucla","Baku","Dhaka","Brussels","Sofia","Bermuda","La_Paz","Noronha","Belem","Fortaleza","Recife","Araguaina","Maceio","Bahia","Sao_Paulo","Campo_Grande","Cuiaba","Santarem","Porto_Velho","Boa_Vista","Manaus","Eirunepe","Rio_Branco","Thimphu","Minsk","St_Johns","Halifax","Glace_Bay","Moncton","Goose_Bay","Toronto","Nipigon","Thunder_Bay","Iqaluit","Pangnirtung","Winnipeg","Rainy_River","Resolute","Rankin_Inlet","Regina","Swift_Current","Edmonton","Cambridge_Bay","Yellowknife","Inuvik","Dawson_Creek","Fort_Nelson","Whitehorse","Dawson","Vancouver","Cocos","Zurich","Abidjan","Rarotonga","Santiago","Punta_Arenas","Easter","Shanghai","Urumqi","Bogota","Costa_Rica","Havana","Cape_Verde","Christmas","Nicosia","Famagusta","Prague","Berlin","Copenhagen","Santo_Domingo","Algiers","Guayaquil","Galapagos","Tallinn","Cairo","El_Aaiun","Madrid","Ceuta","Canary","Helsinki","Stanley","Chuuk","Pohnpei","Kosrae","Paris","London","Tbilisi","Cayenne","Gibraltar","Nuuk","Danmarkshavn","Scoresbysund","Thule","Athens","South_Georgia","Guam","Bissau","Hong_Kong","Tegucigalpa","Budapest","Jakarta","Pontianak","Makassar","Jayapura","Dublin","Jerusalem","Kolkata","Calcutta","Chagos","Baghdad","Tehran","Reykjavik","Rome","Amman","Tokyo","Nairobi","Bishkek","Tarawa","Kanton","Kiritimati","Pyongyang","Seoul","Almaty","Qyzylorda","Qostanay","Aqtobe","Aqtau","Atyrau","Oral","Beirut","Colombo","Monrovia","Vilnius","Riga","Tripoli","Casablanca","Chisinau","Majuro","Kwajalein","Yangon","Ulaanbaatar","Hovd","Choibalsan","Macau","Martinique","Malta","Mexico_City","Cancun","Merida","Monterrey","Matamoros","Mazatlan","Chihuahua","Ojinaga","Hermosillo","Tijuana","Bahia_Banderas","Kuala_Lumpur","Kuching","Maputo","Windhoek","Noumea","Norfolk","Lagos","Managua","Amsterdam","Oslo","Kathmandu","Auckland","Chatham","Lima","Tahiti","Marquesas","Gambier","Port_Moresby","Bougainville","Manila","Karachi","Warsaw","Miquelon","Pitcairn","Puerto_Rico","Gaza","Hebron","Lisbon","Madeira","Azores","Asuncion","Qatar","Reunion","Bucharest","Belgrade","Kaliningrad","Moscow","Simferopol","Kirov","Volgograd","Astrakhan","Saratov","Ulyanovsk","Samara","Yekaterinburg","Omsk","Novosibirsk","Barnaul","Tomsk","Novokuznetsk","Krasnoyarsk","Irkutsk","Chita","Yakutsk","Khandyga","Vladivostok","Magadan","Sakhalin","Srednekolymsk","Kamchatka","Anadyr","Riyadh","Guadalcanal","Mahe","Khartoum","Stockholm","Paramaribo","Juba","Sao_Tome","El_Salvador","Damascus","Grand_Turk","Ndjamena","Kerguelen","Bangkok","Dushanbe","Fakaofo","Dili","Ashgabat","Tunis","Tongatapu","Istanbul","Funafuti","Taipei","Kiev","Uzhgorod","Zaporozhye","Wake","New_York","Detroit","Louisville","Monticello","Indianapolis","Vincennes","Winamac","Marengo","Petersburg","Vevay","Chicago","Tell_City","Knox","Menominee","Center","New_Salem","Beulah","Denver","Boise","Phoenix","Los_Angeles","Anchorage","Juneau","Sitka","Metlakatla","Yakutat","Nome","Adak","Honolulu","Montevideo","Samarkand","Tashkent","Caracas","Ho_Chi_Minh","Efate","Wallis","Apia","Johannesburg","Anguilla","Luanda","McMurdo","DumontDUrville","Syowa","Aruba","Mariehamn","Sarajevo","Ouagadougou","Bujumbura","St_Barthelemy","Kralendijk","Nassau","Gaborone","Atikokan","Creston","Kinshasa","Lubumbashi","Bangui","Brazzaville","Douala","Curacao","Busingen","Asmara","Addis_Ababa","Libreville","Guernsey","Accra","Banjul","Conakry","Guadeloupe","Malabo","Zagreb","Isle_of_Man","Jersey","Phnom_Penh","Comoro","St_Kitts","Kuwait","Cayman","Vientiane","St_Lucia","Vaduz","Maseru","Podgorica","Marigot","Antananarivo","Skopje","Bamako","Saipan","Nouakchott","Montserrat","Blantyre","Niamey","Muscat","Kigali","St_Helena","Ljubljana","Longyearbyen","Bratislava","Freetown","San_Marino","Dakar","Mogadishu","Lower_Princes","Mbabane","Lome","Port_of_Spain","Dar_es_Salaam","Kampala","Midway","Vatican","St_Vincent","Tortola","St_Thomas","Aden","Mayotte","Lusaka","Harare","invalidCountries","schema","Yup","shape","country","required","notOneOf","region","when","is","includes","then","else","patientId","notRequired","hospitalId","defined","getCountry","fetch","res","json","getCountryInfo","countryName","find","activeStep","setActiveStep","setSupportedLang","ipLimit","setIpLimit","resetExecuted","useRef","update","reset","useForm","defaultValues","resolver","yupResolver","mode","control","formState","handleSubmit","watch","setValue","history","useHistory","isValid","errors","useEffect","current","onSubmit","nextStep","push","i18n","lang","changeLanguage","invalidCountryModal","regionSelectOptions","output","elem","s","getOptionsCountry","acc","localStorageCountry","virufyWizard","parsedVirufyWizard","supported","parsedLocalStorageCountry","cInfo","countryDataLS","catch","error","console","Intl","tzArr","DateTimeFormat","resolvedOptions","timeZone","split","userCity","userCountry","mt","mb","defaultValue","render","onChange","valueController","placeholder","e","classNamePrefix","isDisabled","noOptionsMessage","inputValue","message","onClick","isDisable","CreatedBy","inline","isOpen","_ref5","fillRule","clipRule","_ref6","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","Container","Label","color","Image","LogoXoorSVG","rel"],"mappings":"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,WACA,SACA,UACA,WACA,SACA,WACA,YACA,SACA,UACA,SAEFC,QAAS,CACP,eACA,YACA,cACA,cACA,OACA,aACA,SACA,WACA,WACA,UACA,aACA,YACA,UACA,WACA,OACA,cACA,QACA,aACA,cACA,UACA,OACA,mBACA,kBACA,aACA,aACA,eACA,SACA,cAEFC,QAAS,CACP,QACA,iBACA,yBACA,UACA,SACA,QACA,YACA,iBACA,SACA,QACA,wBACA,cACA,eACA,QACA,cACA,SACA,YACA,UACA,UACA,gBACA,SACA,SACA,QACA,YACA,WACA,UACA,cACA,OACA,aACA,QACA,aACA,OACA,UACA,iBACA,WACA,aACA,WACA,oBACA,SACA,aACA,eACA,aACA,SACA,UACA,SACA,aACA,aACA,WAEFC,QAAS,CACP,mBACA,UACA,SACA,qBACA,aACA,SACA,8BAEFC,OAAQ,CACN,QACA,WACA,SACA,UACA,iBACA,eACA,aACA,SACA,SACA,WACA,SACA,cACA,YACA,UACA,SACA,SACA,UACA,SAEFC,QAAS,CACP,iBACA,iBACA,cACA,gBACA,eACA,eACA,iBACA,kBACA,eACA,oBACA,eACA,gBACA,eACA,oBACA,eACA,iBACA,aACA,iBACA,gBACA,cACA,eACA,iBACA,sBACA,gBACA,kBACA,iBACA,eACA,eACA,cACA,gBACA,qBACA,eAEFC,UAAW,CACT,qCACA,eACA,YACA,QACA,SACA,aACA,aACA,gBACA,UACA,QACA,WACA,WACA,UACA,WACA,aACA,eACA,QACA,WACA,WACA,aACA,WACA,sBACA,mBACA,cAEFC,QAAS,CACP,aACA,SACA,UACA,cACA,SACA,OACA,SACA,SACA,SACA,cACA,WAEFC,UAAW,CACT,+BACA,kBACA,qBACA,aACA,kBACA,WACA,WACA,qBAEFC,QAAS,CACP,aACA,aACA,sBACA,oBACA,WACA,aACA,QACA,aACA,QAEFC,QAAS,CACP,iBACA,gBACA,SACA,cACA,aACA,gBACA,8BACA,oBACA,QACA,WACA,cACA,oBACA,mBACA,iBACA,YACA,SACA,YACA,cACA,gBACA,YACA,gBACA,iBACA,iCACA,cACA,eACA,kBACA,gBACA,aACA,2BACA,cACA,cACA,eACA,kBACA,qBAEFC,QAAS,CACP,SACA,WACA,uBACA,wBAEFC,WAAY,CACV,UACA,aACA,QACA,SACA,aACA,WACA,UACA,UAEFC,SAAU,CACR,gBACA,eACA,eACA,cACA,aACA,eACA,aACA,gBACA,cACA,eACA,gBAEFC,QAAS,CACP,gBACA,cACA,iBACA,iBACA,mBACA,gBACA,oBAEFC,QAAS,CACP,WACA,WACA,YAEFC,OAAQ,CACN,kBACA,gBACA,mBACA,uBACA,uBACA,mBAEFC,MAAO,CACL,UACA,UACA,aACA,SACA,sBACA,QACA,SACA,sBACA,kBACA,cACA,UACA,OAEFC,OAAQ,CACN,WACA,UACA,SACA,OACA,MACA,UACA,SACA,OACA,cACA,UACA,mBACA,SACA,UACA,UACA,aACA,gBACA,UACA,UACA,mBACA,YAEFC,QAAS,CACP,OACA,aACA,aACA,SACA,QACA,QACA,YACA,aACA,UAEFC,OAAQ,CACN,oBACA,iCACA,oBAEFC,SAAU,CACR,UACA,SACA,YACA,WACA,UACA,aACA,aACA,aACA,YAEFC,OAAQ,CACN,OACA,UACA,WACA,WACA,QACA,WACA,mBACA,oBACA,WACA,cACA,cACA,qBACA,eACA,UACA,aACA,YACA,aACA,WACA,iBACA,sBACA,oBACA,cACA,UACA,iBACA,eACA,UACA,aAEFC,OAAQ,CACN,SACA,eACA,YACA,UAEFC,SAAU,CACR,cACA,SACA,UACA,UACA,SACA,WACA,aACA,YACA,SACA,UACA,aACA,SACA,SACA,UACA,UACA,OACA,SACA,WACA,SACA,UACA,SACA,cACA,eACA,cACA,QACA,iBACA,QACA,SAEFC,QAAS,CACP,UACA,eACA,iBACA,YACA,aACA,mBACA,gBACA,iBACA,sBACA,SACA,kBACA,QACA,OACA,UACA,mBACA,aACA,YACA,iBACA,gBACA,aACA,eACA,YACA,SACA,UACA,aACA,iBACA,SACA,WACA,aACA,UACA,aACA,OACA,aACA,aACA,UACA,UACA,OACA,SACA,QACA,UACA,QACA,UACA,OACA,UACA,iBAEFC,QAAS,CACP,UACA,mBACA,kBACA,SACA,UACA,WACA,SACA,SACA,UACA,UACA,UACA,WACA,UACA,QACA,QACA,SACA,UAEFC,KAAM,CACJ,YACA,QACA,OACA,YACA,OACA,aACA,QACA,gBACA,iBACA,6BACA,MACA,iBACA,yBACA,aACA,eACA,aACA,aACA,wBACA,sCACA,iBACA,WACA,8BAEFC,SAAU,CACR,eACA,oBACA,gBACA,kBACA,gBACA,eACA,SACA,UACA,YACA,UACA,aACA,eACA,uBACA,cACA,kBACA,aACA,UACA,eACA,cACA,eACA,YACA,eACA,cACA,UACA,eAEFC,SAAU,CACR,WACA,SACA,MACA,oBACA,WACA,OACA,aACA,QACA,MACA,aAEFC,OAAQ,CACN,UACA,mBACA,WACA,gBACA,4BACA,wBACA,cACA,UACA,UACA,uBACA,SACA,eACA,SAEFC,eAAgB,CACd,oBACA,SACA,cACA,cACA,cACA,UACA,SACA,8BACA,SACA,eACA,qBACA,gBACA,QACA,QACA,oBACA,sBACA,UAEFC,KAAM,CACJ,iBACA,QACA,SACA,iBACA,YACA,cACA,WACA,eACA,QACA,MACA,oBACA,kBACA,UACA,kBACA,aACA,UACA,UACA,OACA,cACA,UACA,oBACA,aAGFC,MAAO,CACL,uDACA,cACA,eACA,qBACA,UACA,YACA,WACA,uCACA,YACA,cACA,iCACA,cACA,QACA,aACA,sCACA,cACA,iBAGFC,MAAO,CACL,QACA,UACA,YACA,SACA,QACA,YACA,UACA,UACA,SACA,QACA,eACA,QACA,YACA,QACA,QACA,iBACA,UACA,UACA,QACA,WACA,QACA,UACA,UACA,UACA,WACA,WACA,SACA,UACA,UACA,QACA,WACA,SACA,YAGFC,SAAU,CACR,WACA,YACA,SACA,eACA,YACA,aACA,YACA,SACA,mBACA,aACA,WACA,QACA,QACA,WACA,aACA,eACA,aACA,WACA,QACA,aACA,YACA,OACA,YACA,qBACA,WACA,aACA,YACA,8BACA,YACA,QACA,SACA,kBACA,YACA,WAGFC,QAAS,CACP,kBACA,gBACA,0BAGFC,MAAO,CACL,UACA,cACA,UACA,eACA,UACA,cACA,WACA,QACA,WACA,cACA,OACA,UAGFC,KAAM,CACJ,WACA,OACA,SACA,UACA,WACA,SACA,UACA,SACA,aACA,UACA,WACA,aAGFC,UAAW,CACT,WACA,UACA,aACA,UACA,WACA,aACA,eAGFC,QAAS,CACP,yBACA,mBACA,yBACA,cACA,WACA,aACA,yBACA,sBACA,YACA,iBACA,iBACA,uBACA,sBACA,kBACA,uBACA,wBACA,oBACA,uBACA,wBACA,WACA,iBAGFC,KAAM,CACJ,WACA,cACA,oBACA,aACA,SACA,gBACA,aACA,sBACA,YACA,YACA,WACA,YACA,mBACA,qBACA,mBACA,eAGFC,OAAQ,CACN,cACA,WACA,UACA,WACA,UACA,SAGFC,QAAS,CACP,6BACA,yBACA,wBACA,kCACA,sBACA,4BACA,sBACA,uBACA,qBACA,yBACA,cACA,wBAGFC,WAAY,CACV,YACA,SACA,gBACA,iBACA,qBACA,WACA,iBACA,OACA,UACA,cACA,gBACA,iBACA,gBACA,UACA,cACA,eACA,uBACA,aACA,UAiBFC,cAAe,CACb,WACA,YACA,cACA,wBACA,sBACA,UACA,WACA,UACA,YACA,YACA,YAGFC,QAAS,CACP,cACA,WACA,cACA,mBACA,cACA,mBACA,aACA,UACA,aACA,aACA,gBACA,mBACA,cACA,aACA,gBAGFC,SAAU,CACR,aACA,OACA,SACA,QACA,aAGFC,SAAU,CACR,sBACA,qBACA,sBACA,oBACA,sBACA,oBACA,oBACA,uBACA,oBACA,sBAGFC,kBAAmB,CACjB,gBACA,YACA,oBACA,aACA,aACA,WACA,WACA,QACA,YAGFC,QAAS,CACP,QACA,aACA,aACA,SACA,aACA,WACA,SACA,aACA,eACA,SACA,WACA,OACA,cACA,YACA,kBACA,OACA,WACA,UACA,YACA,cACA,oCACA,eACA,aACA,oBAGFC,MAAO,CACL,aACA,QACA,SACA,aACA,UACA,QACA,WACA,SACA,mBACA,cACA,UACA,oBACA,SACA,UACA,OACA,SACA,iBACA,QACA,UACA,QACA,UACA,cACA,YACA,UACA,OACA,UACA,mBACA,QACA,eAGFC,SAAU,CACR,gBACA,eACA,eACA,eACA,cACA,SACA,cACA,aACA,aACA,eACA,YACA,cACA,YACA,eAGFC,iBAAkB,CAChB,aACA,cACA,YACA,aACA,cACA,UACA,aAGFC,QAAS,CACP,SACA,QACA,mBACA,aACA,SACA,qBAGFC,QAAS,CACP,WACA,UACA,cACA,cACA,eACA,iBACA,sBACA,cACA,cACA,WACA,WACA,WACA,WACA,cACA,cAGFC,SAAU,CACR,cACA,OACA,SACA,mBACA,YACA,UACA,SACA,SACA,SACA,mDACA,UAGFC,MAAO,CACL,SACA,WACA,UACA,SACA,SACA,WACA,UACA,WACA,SAGFC,KAAM,CACJ,KACA,MACA,aACA,SACA,MACA,YACA,UACA,qBACA,YACA,SACA,KACA,OACA,SACA,QACA,WAGFC,QAAS,CACP,uBACA,mBACA,qBACA,gBACA,SACA,gBACA,kBACA,cACA,cACA,QACA,YACA,YACA,kBACA,oBACA,eACA,uBACA,YACA,UACA,mBAGFC,OAAQ,CACN,4BACA,6BACA,WACA,sBACA,QACA,YACA,kBACA,qBACA,YACA,qBACA,YACA,mBACA,4BACA,aACA,aACA,SACA,aACA,UACA,uBACA,eACA,2BACA,sBACA,eACA,aACA,mCACA,oBAGFC,MAAO,CACL,WACA,iBACA,kBACA,aACA,SACA,mBACA,iBACA,qBACA,cAGFC,OAAQ,CACN,SACA,gBACA,cACA,aACA,cACA,WAGFC,QAAS,CACP,qBACA,kBACA,QACA,UACA,UACA,eACA,qBACA,8BACA,yBACA,qBACA,eACA,WAGFC,QAAS,CACP,uBACA,SACA,SACA,cACA,SACA,UACA,SACA,yBACA,gBACA,sBACA,kBACA,WACA,UACA,iBACA,qBACA,gBAGFC,MAAO,CACL,QACA,UACA,OACA,YACA,UACA,UACA,gBACA,WACA,aACA,MACA,WACA,aACA,aACA,QACA,UACA,iBAGFC,OAAQ,CACN,0CACA,SACA,sBACA,yBACA,oBACA,2BACA,cACA,qBACA,kBACA,sBACA,eACA,sBACA,aACA,oBAGFC,QAAS,CACP,eACA,cACA,eACA,aACA,aACA,gBACA,8BAGFC,UAAW,CACT,eACA,eACA,gBACA,aACA,cACA,YACA,YACA,gBACA,SACA,SACA,UACA,WACA,iBACA,YACA,aACA,kBACA,aACA,aACA,YACA,mBACA,iBACA,UAGFC,OAAQ,CACN,UACA,UACA,UACA,SACA,SACA,UACA,QACA,sBAGFC,aAAc,CACZ,YACA,SACA,SACA,iBACA,SACA,YACA,MACA,UACA,WAGFC,OAAQ,CACN,eACA,kBACA,mBACA,yBACA,kCACA,kBACA,oBACA,kBACA,yBACA,gCAGFC,MAAO,CACL,aACA,SACA,aACA,SACA,OACA,WACA,aACA,QACA,MACA,WAGFC,SAAU,CACR,eACA,YACA,WACA,YACA,WACA,YACA,gBACA,uBACA,iBACA,cACA,uBACA,SACA,UACA,aACA,UACA,mBACA,QACA,QAGFC,QAAS,CACP,iBACA,UACA,cACA,mBACA,uBACA,WACA,cACA,WACA,sBACA,OACA,SACA,WACA,YACA,yBACA,mBACA,QACA,4BACA,0BACA,cACA,eACA,uBACA,UACA,cACA,eACA,oBACA,UACA,OACA,oBACA,SACA,SACA,sBACA,SACA,0BACA,eACA,UACA,cACA,eACA,QACA,MACA,cACA,qBACA,OACA,gBAGFC,QAAS,CACP,aACA,qCACA,yBACA,yBACA,iBACA,gBACA,kBACA,cAGFC,MAAO,CACL,8BACA,iBACA,oBACA,QACA,QACA,aACA,eACA,yBACA,gBACA,QACA,MACA,UACA,UACA,mBACA,oBACA,YACA,YACA,SACA,cACA,iBACA,cACA,UACA,YACA,UACA,WACA,SACA,aACA,SACA,YACA,SACA,aACA,YACA,UACA,cACA,gBACA,eAGFC,UAAW,CACT,OACA,OACA,kBACA,SACA,WACA,YACA,eACA,QACA,aACA,cACA,aACA,mBACA,qBACA,oBACA,mBACA,mBACA,iBACA,UACA,SACA,eACA,sBACA,sBACA,QACA,cACA,OACA,mBACA,kBACA,oBACA,iBACA,iBACA,mBACA,iBACA,cAGFC,QAAS,CACP,SACA,QACA,QACA,OACA,UACA,SACA,SACA,QACA,UACA,WACA,QACA,UACA,WACA,WACA,QACA,OACA,QACA,WACA,SACA,YACA,QACA,YACA,YACA,YACA,UACA,WAGFC,OAAQ,CACN,UACA,WACA,WACA,QACA,WACA,gBAGFC,MAAO,CACL,UACA,aACA,WACA,WACA,iBACA,wBACA,QACA,UACA,YACA,SACA,SACA,WACA,SACA,WACA,UACA,UACA,sBACA,SACA,gBACA,UAGFC,QAAS,CACP,YACA,UACA,WACA,aACA,WACA,eACA,YACA,kBACA,kBACA,cACA,aACA,eACA,WACA,gBAGFC,MAAO,CACL,QACA,QACA,SACA,QACA,QACA,QACA,UACA,YACA,OACA,QACA,YACA,WACA,QACA,UACA,WACA,QACA,SACA,YACA,WACA,QACA,WACA,QACA,MACA,SACA,WACA,SACA,WACA,OACA,UACA,OACA,UACA,UACA,QACA,OACA,UACA,QACA,UACA,WACA,UACA,YACA,QACA,UACA,SACA,WACA,WACA,YACA,aAGFC,WAAY,CACV,SACA,SACA,SACA,SACA,SACA,kBACA,YACA,cACA,sBACA,WACA,aACA,WACA,YACA,oBACA,sBACA,WAGFC,MAAO,CACL,UACA,QACA,UACA,QACA,iBACA,OACA,UACA,WACA,SACA,UACA,WACA,UACA,SACA,SACA,YACA,QACA,SACA,QACA,QACA,WACA,OACA,WACA,UACA,UACA,WACA,OACA,SACA,UACA,WACA,eACA,SACA,QACA,QACA,UACA,YACA,QACA,UACA,QACA,eACA,aACA,gBACA,cACA,UACA,cACA,SACA,QACA,cAGFC,SAAU,CACR,UACA,UACA,UACA,SACA,SACA,OACA,aACA,mBACA,kBACA,SACA,aACA,QACA,eACA,SACA,QACA,UACA,UACA,UACA,oBACA,SACA,kBACA,oBACA,YACA,YACA,SACA,SACA,WAGFC,WAAY,CACV,iBACA,iBACA,yBACA,qBACA,gBACA,cACA,gBACA,8BAGFC,IAAK,CACH,SACA,WACA,cACA,YACA,WACA,YACA,gBACA,gBACA,gBACA,iBACA,UACA,iBACA,YACA,cACA,YACA,aACA,gBAGFC,QAAS,CACP,cACA,kBACA,WACA,WACA,aACA,YACA,aACA,oBAGFC,QAAS,CACP,QACA,cACA,SACA,WACA,SACA,eACA,aACA,cACA,UACA,eAGFC,QAAS,CACP,OACA,OACA,WACA,cACA,mBACA,cACA,YACA,OACA,UACA,WACA,cACA,QACA,aACA,aACA,SAGFC,WAAY,CACV,WACA,UACA,WACA,aACA,mBACA,eACA,aACA,SACA,UACA,SACA,UACA,SAGFC,WAAY,CACV,eACA,cACA,eACA,YACA,YACA,WAGFC,OAAQ,CACN,SACA,WACA,WACA,aACA,UACA,QACA,OACA,UACA,UACA,SACA,WACA,WACA,WACA,UACA,UACA,SACA,SACA,aACA,aACA,SACA,SACA,UACA,WACA,SACA,SACA,SACA,SAGFC,SAAU,CACR,QACA,QACA,WACA,SACA,kBACA,SACA,QACA,SACA,eACA,QACA,UACA,WACA,aACA,qCACA,+BACA,mCAGFC,SAAU,CACR,cACA,eACA,MACA,SACA,QACA,cACA,eACA,YACA,YACA,aACA,QACA,QACA,YACA,UACA,QACA,QACA,MACA,QACA,YACA,OACA,SAGFC,KAAM,CACJ,SACA,MACA,QACA,QACA,YACA,QACA,QACA,UACA,aACA,eACA,aAGFC,SAAU,CACR,eACA,QACA,OACA,MACA,kBACA,OACA,QACA,SACA,YACA,MACA,MACA,SACA,SACA,WACA,QACA,UACA,OACA,WACA,OACA,QACA,QACA,SAGFC,WAAY,CACV,QACA,SACA,SACA,qBACA,SACA,YACA,mBACA,iBACA,UACA,kBACA,mBACA,iBACA,SACA,gBACA,UAGFC,UAAW,CACT,kBACA,wBACA,cACA,0BACA,WACA,QACA,aACA,OACA,gBACA,kBACA,oBACA,aACA,qBACA,mBACA,UACA,kBAGFC,OAAQ,CACN,iBACA,kBACA,sBACA,WACA,sBACA,UACA,YACA,uBACA,SACA,UACA,sBACA,aACA,WACA,UACA,UACA,yBACA,UACA,UACA,gBACA,SACA,SACA,0BACA,eACA,qBACA,UACA,SACA,UACA,aACA,WACA,WACA,aACA,aAGFC,WAAY,CACV,eACA,SACA,UACA,OAGFC,OAAQ,CACN,QACA,YACA,cACA,OACA,kBACA,WACA,cACA,eACA,aACA,cACA,UACA,eACA,cACA,mBACA,SACA,eACA,uBAGFC,SAAU,CACR,WACA,cACA,cACA,SACA,SACA,SACA,YACA,WACA,UACA,aACA,cACA,OACA,UACA,WACA,aACA,UACA,YACA,MACA,cACA,OAGFC,QAAS,CACP,oCACA,aACA,mBACA,2BACA,6BACA,oBACA,iBACA,sBACA,cACA,oBACA,+BACA,wBAGFC,WAAY,CACV,eACA,OACA,YACA,SACA,SACA,gBACA,UACA,SACA,SACA,OACA,YAGFC,QAAS,CACP,aACA,OACA,OACA,SACA,QACA,QACA,SACA,WACA,MACA,cACA,UACA,UACA,OACA,cACA,UAGFC,QAAS,CACP,SACA,SACA,eACA,eACA,QACA,SACA,SACA,YACA,UACA,UACA,SACA,WACA,eACA,WAGFC,MAAO,CACL,OACA,SACA,SACA,UACA,QACA,MACA,QACA,aACA,MACA,OACA,SACA,QACA,QACA,SAGFC,MAAO,CACL,UACA,QACA,cACA,UACA,WACA,UACA,OACA,UACA,WACA,QACA,WACA,QACA,aACA,QAGFC,YAAa,CACX,UACA,YACA,YACA,aACA,YACA,UACA,gBACA,gBACA,aACA,UACA,UACA,gBAGFC,WAAY,CACV,WACA,gBACA,aACA,WACA,aACA,cACA,oBACA,YACA,SACA,QACA,YACA,WACA,SACA,UACA,aACA,aACA,6BAGFC,UAAW,CACT,QACA,SACA,aACA,YACA,YACA,UACA,WACA,UACA,SACA,UACA,SACA,YACA,gBACA,kBACA,QACA,qBACA,oBAGFC,MAAO,CACL,SACA,QACA,QACA,SACA,SACA,SACA,eACA,UAGFC,QAAS,CACP,OACA,kCACA,UACA,YACA,UACA,SACA,UACA,QACA,QACA,cACA,QACA,SACA,MACA,QACA,QACA,QACA,MACA,SACA,SACA,OACA,UACA,QACA,OACA,QACA,QACA,YACA,QACA,OACA,OACA,OACA,MACA,UACA,SACA,SACA,SACA,OACA,WAGFC,KAAM,CACJ,QAGFC,OAAQ,CACN,WACA,aACA,WACA,WACA,UACA,YACA,uBACA,WACA,sBACA,UACA,OACA,WACA,mBACA,0BACA,WACA,QACA,aACA,WACA,eACA,YACA,YAGFC,KAAM,CACJ,gBACA,aACA,WACA,aACA,mBACA,sBACA,SACA,WACA,oBACA,uBACA,SAGFC,MAAO,CACL,WACA,QACA,SACA,YACA,WACA,QACA,WACA,WACA,cACA,WACA,WACA,WACA,eACA,SACA,UACA,YAGFC,OAAQ,CACN,iBACA,cACA,WACA,WACA,YACA,YACA,UACA,YACA,aACA,oBACA,YACA,kBACA,YAGFC,MAAO,CACL,eACA,UACA,SACA,mBACA,aACA,oBACA,OACA,OACA,OACA,SACA,SACA,QACA,YACA,SACA,eACA,cACA,WACA,qBACA,mBACA,aACA,UACA,qBAGFC,SAAU,CACR,gBACA,cACA,UACA,WACA,WACA,UACA,YACA,UACA,aACA,aACA,WACA,SACA,SACA,WACA,WACA,YACA,mBACA,aAGFC,KAAM,CACJ,WACA,SACA,cACA,WACA,WACA,YACA,SACA,QACA,eACA,aACA,MACA,WACA,cACA,aACA,OACA,SACA,gBACA,WACA,QACA,QACA,OACA,aACA,QACA,SACA,WAGFC,YAAa,CACX,OACA,mBACA,iBACA,QACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,WACA,UACA,UACA,kBACA,gBACA,WACA,QACA,cACA,SACA,OACA,aACA,WACA,kBACA,gBACA,mBACA,iBACA,kBACA,gBACA,WACA,SACA,eACA,aACA,SACA,UACA,UACA,WACA,SACA,kBACA,gBACA,QACA,cACA,UACA,eACA,qBACA,mBACA,qBACA,mBACA,oBACA,oBACA,kBACA,iBACA,cACA,gBACA,UACA,WACA,aACA,SACA,UACA,QACA,UACA,QACA,YACA,WACA,WACA,iBACA,iBACA,OACA,oBACA,kBACA,SACA,YACA,WACA,sBACA,oBACA,qBAGFC,SAAU,CACR,cACA,SACA,OACA,QACA,gBACA,iBACA,UACA,WACA,OACA,SACA,SACA,SACA,UACA,aACA,QACA,cACA,eACA,mBACA,YACA,SAGFC,cAAe,CACb,oBACA,oBACA,WACA,eACA,eACA,oBACA,cACA,sBACA,aACA,kBACA,kBACA,oBACA,mBACA,SACA,oBACA,qBACA,qBAGFC,QAAS,CACP,OACA,OACA,QACA,QACA,QACA,kBACA,WACA,SACA,SACA,YACA,QACA,WACA,gBACA,OACA,YACA,UACA,YACA,OACA,SACA,UACA,OACA,WACA,YACA,WACA,OACA,YACA,YACA,QACA,QACA,MACA,UACA,QACA,YACA,QACA,UACA,YACA,QACA,SACA,SACA,SACA,WAGFC,QAAS,CACP,qBACA,oCACA,aACA,cACA,qBACA,mBACA,4BACA,kBACA,iBACA,uBACA,mBACA,qBACA,4BACA,mBACA,uBACA,yBACA,iBACA,iBACA,2BACA,4BACA,qBACA,uBACA,gBACA,iBACA,6BACA,sBACA,kBACA,wBACA,wCACA,kBACA,eACA,gBACA,kBACA,iBACA,mBACA,gBACA,eACA,mBACA,iBACA,iBACA,mBACA,uBACA,gBACA,SACA,kBACA,0BACA,yBACA,kBACA,qBACA,cACA,kBACA,eACA,eACA,YACA,iBACA,eACA,gBACA,gBACA,mBACA,2BACA,kBACA,gBACA,iBACA,mCACA,kBACA,iBACA,oBACA,gBACA,wBACA,eACA,gBACA,cACA,cACA,gBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,iCACA,mBACA,oBAGFC,OAAQ,CACN,SACA,UACA,WACA,UACA,YAGFC,WAAY,CACV,cACA,SAGFC,WAAY,CACV,eACA,WACA,WACA,WACA,UACA,aACA,UACA,SACA,YACA,cAGFC,aAAc,CACZ,YACA,aACA,eACA,cACA,eACA,iBAGFC,MAAO,CACL,OACA,gBACA,OACA,eACA,aACA,eACA,UACA,aACA,YACA,eACA,aAGFC,UAAW,CACT,YACA,iBACA,cACA,YACA,UACA,aACA,gBACA,aACA,cAGFC,QAAS,CACP,WACA,YAGFC,MAAO,CACL,OACA,WACA,0BACA,UACA,2BACA,WACA,WACA,gBACA,OACA,QACA,uBACA,SACA,SAGFC,QAAS,CACP,QACA,WACA,SACA,WACA,UACA,WACA,QACA,QACA,QACA,cACA,UACA,cACA,QACA,cAGFC,WAAY,CACV,gBACA,eACA,cACA,cACA,UACA,cACA,mBACA,cACA,UACA,YACA,UACA,SACA,kBACA,qBACA,WACA,sBACA,eACA,cACA,cACA,YACA,gBACA,aACA,eACA,cACA,YAGFC,OAAQ,CACN,UACA,WACA,WACA,WAGFC,UAAW,CACT,oBACA,aACA,aACA,aACA,cAGFC,SAAU,CACR,kBACA,eACA,UACA,aACA,YACA,cACA,WACA,YAGFC,SAAU,CACR,aACA,QACA,WACA,WACA,oBACA,OACA,QACA,SACA,YACA,QACA,YACA,OACA,UACA,YACA,UACA,QACA,wBACA,WACA,SACA,aACA,YACA,YACA,mBACA,WACA,WACA,SACA,QACA,aACA,SACA,wBACA,YACA,oBACA,oBACA,UACA,UACA,YACA,SACA,sBACA,YACA,QACA,iBACA,cACA,kBACA,OACA,YACA,UACA,gBACA,QACA,SACA,WACA,iBACA,SACA,KACA,mBACA,iBACA,QACA,WACA,WACA,SACA,QACA,YACA,UACA,UACA,UACA,QACA,UACA,QACA,sBACA,SACA,QACA,QACA,gBACA,WACA,QACA,UACA,QACA,QACA,SACA,UACA,SACA,YACA,SACA,WACA,eACA,UACA,eACA,cACA,qBACA,WACA,OACA,WACA,SACA,UACA,WACA,UACA,SACA,UACA,SACA,4BACA,qBACA,QACA,YACA,WACA,oBACA,UACA,mBACA,UACA,gBACA,QACA,UACA,cACA,aACA,UACA,QACA,WACA,UACA,QACA,QACA,aACA,YACA,WACA,WACA,WACA,UACA,WACA,WACA,OACA,YACA,SACA,UACA,kBACA,aACA,oBACA,YACA,oBACA,gBACA,UACA,qBACA,kBACA,YACA,UACA,OACA,UACA,mBACA,QACA,mBACA,SACA,UACA,aACA,UACA,aACA,UACA,SACA,UACA,cACA,YACA,iBACA,qBACA,oBACA,mBACA,oBACA,kBACA,qBACA,YACA,UACA,UACA,oBACA,SACA,QACA,SACA,YACA,qCACA,oCACA,cACA,mCACA,cACA,QACA,SACA,SACA,WACA,UACA,eACA,QACA,QACA,WACA,UACA,gBACA,eACA,SACA,QACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,kBACA,QACA,QACA,QACA,YACA,SACA,OACA,YACA,aAGFC,QAAS,CACP,UACA,WACA,cACA,UACA,SACA,eACA,UACA,sBACA,SACA,WAGFC,YAAa,CACX,eACA,aACA,UACA,gBACA,UACA,aACA,gBACA,aACA,gBAGFC,WAAY,CACV,oBACA,oBACA,UACA,QACA,0BACA,QACA,aACA,SACA,yBACA,qBAGFC,MAAO,CACL,WACA,WACA,aACA,iBACA,WACA,WACA,UACA,YACA,UACA,SACA,aACA,WACA,YACA,2BACA,QACA,cACA,aACA,gBACA,SACA,WACA,SACA,UACA,cACA,SACA,SACA,gBACA,UACA,UACA,SACA,OACA,SACA,YACA,UACA,SACA,mBACA,UACA,WACA,aACA,aACA,WACA,YACA,yBACA,UACA,UACA,QACA,YACA,SACA,SACA,uBACA,aACA,SACA,YAGFC,IAAK,CACH,YACA,SACA,WACA,cACA,eACA,QACA,aACA,UACA,OAGFC,MAAO,CACL,mBACA,aACA,aACA,aACA,kBACA,kBACA,iBACA,eACA,iBACA,eACA,iBACA,UACA,cACA,gBACA,eACA,mBACA,SACA,yBAGFC,SAAU,CACR,aACA,aACA,UACA,YACA,WACA,OACA,aACA,YACA,aACA,UAGFC,OAAQ,CACN,WACA,UACA,eACA,UACA,UACA,cACA,kBACA,SACA,YACA,aACA,YACA,qBACA,WACA,kBACA,YACA,UACA,cACA,kBACA,oBACA,iBACA,yBAGFC,YAAa,CACX,SACA,yBACA,uBACA,mBACA,cACA,OACA,WACA,YACA,SACA,gBACA,OACA,SACA,iBACA,YACA,WACA,eACA,eACA,SACA,YACA,UACA,SACA,MACA,SACA,OACA,MACA,aAGFC,OAAQ,CACN,aACA,gBACA,gBACA,YACA,aACA,QACA,eACA,UACA,QACA,QACA,OACA,QACA,cACA,UAGFC,WAAY,CACV,WACA,uBACA,UACA,SAGFC,SAAU,CACR,gBACA,YACA,YACA,WACA,eACA,WACA,aACA,cACA,aACA,aACA,YACA,WACA,UACA,iBACA,eACA,YACA,QACA,kCACA,UACA,UACA,OACA,WACA,eACA,gBACA,WACA,eACA,iBACA,gBACA,oBACA,eACA,sBACA,MACA,aACA,mBACA,YACA,aACA,eACA,UACA,WACA,cACA,SACA,aACA,cACA,UACA,cACA,2BACA,QACA,SACA,eACA,sBACA,SACA,aACA,SACA,SACA,UACA,eACA,eACA,eACA,kBACA,WACA,QACA,YACA,YACA,WACA,YACA,cACA,cACA,QACA,MACA,QACA,OACA,mBACA,aACA,cACA,YACA,OACA,YAGFC,MAAO,CACL,QACA,SACA,SACA,WACA,YACA,OACA,SACA,SACA,UACA,WACA,WACA,UACA,YAGFC,KAAM,CACJ,SACA,OACA,WACA,WACA,YAGFC,MAAO,CACL,MACA,UACA,QACA,YACA,UAGFC,SAAU,CACR,QACA,YACA,0BACA,eACA,mBACA,aACA,eACA,gBACA,eACA,eACA,sBACA,gBACA,UACA,SACA,mBAGFC,QAAS,CACP,SACA,OACA,YACA,UACA,QACA,QACA,WACA,WACA,YACA,SACA,MACA,SACA,WACA,WACA,SACA,OACA,cACA,UACA,SACA,YACA,SACA,QACA,YAGFC,OAAQ,CACN,QACA,WACA,iBACA,OACA,UACA,SACA,SACA,UACA,UACA,SACA,QACA,YACA,SACA,SACA,UACA,UACA,SACA,SACA,OACA,SACA,QACA,YACA,UACA,QACA,UACA,aACA,QACA,SACA,SACA,WACA,UACA,YACA,YACA,UACA,YACA,UACA,QACA,QACA,UACA,WACA,QACA,gBACA,UACA,UACA,OACA,YACA,UACA,QACA,YACA,aACA,WACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,QACA,MACA,WACA,QACA,OACA,WACA,OACA,UACA,SACA,YACA,QACA,QACA,SACA,QACA,WACA,QACA,UACA,UACA,OACA,MACA,SACA,SACA,aAGFC,aAAc,CACZ,OACA,UACA,SACA,WACA,QACA,QAGFC,OAAQ,CACN,WACA,YACA,UACA,SACA,MACA,YACA,aACA,WAGFC,OAAQ,CACN,OACA,WACA,WACA,SACA,QACA,OACA,OACA,SACA,SACA,SACA,UACA,QACA,UACA,aACA,WACA,QACA,WACA,SACA,OACA,QACA,SACA,SACA,WACA,QACA,UACA,SACA,WACA,cACA,YACA,SACA,UACA,SACA,WACA,UACA,YACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,OACA,WACA,OACA,SACA,YACA,UACA,UACA,SACA,UACA,SACA,QACA,UACA,UACA,SACA,OACA,QACA,UACA,SACA,gBACA,WACA,cACA,YACA,QACA,WACA,OACA,QACA,UACA,QACA,YACA,YACA,UACA,SACA,SACA,SACA,SAGFC,QAAS,CACP,WACA,YACA,aACA,iBACA,UACA,kBACA,UACA,UACA,eACA,OACA,aACA,UACA,OACA,WACA,SACA,UACA,QACA,OACA,WACA,YACA,QACA,cACA,aACA,WACA,4BACA,YACA,cAGFC,WAAY,CACV,YACA,QACA,QACA,WACA,iBACA,UACA,iBAGFC,cAAe,CACb,gBACA,gBACA,QACA,0BACA,sBACA,kBACA,kCACA,uBACA,SACA,WACA,+BACA,UACA,UACA,SACA,aACA,wBACA,YACA,gBACA,SACA,cACA,mBACA,WACA,QACA,WACA,oBACA,mBACA,UACA,kBACA,OACA,aACA,aACA,iBACA,SACA,UACA,kBACA,2BACA,uBACA,aACA,gBACA,4BACA,mBACA,QACA,WACA,WACA,UACA,UACA,aACA,eACA,QACA,aACA,qBACA,QACA,YACA,SACA,SACA,wBACA,cACA,gBACA,SACA,gBACA,sBACA,eACA,oBACA,2BACA,cACA,qBACA,cACA,UACA,QACA,UACA,sBACA,OACA,aACA,YACA,eACA,kBACA,YACA,UACA,UACA,SACA,yBACA,YACA,WACA,SACA,aACA,WACA,gBACA,gBACA,WACA,aACA,WACA,aACA,mBACA,gBACA,kBACA,YACA,yBACA,OACA,qBACA,uBACA,WACA,WACA,UACA,aACA,QACA,YACA,iBACA,WACA,eACA,0BACA,YACA,kBACA,QACA,aACA,SACA,iBACA,SACA,sBACA,aACA,gBACA,aACA,gBACA,gBACA,QACA,oBACA,sBACA,SACA,UACA,yBACA,UACA,iBACA,0BACA,oBACA,qBACA,iBACA,iBACA,kBACA,mBACA,iBACA,aACA,kBACA,SACA,iBACA,cACA,gBACA,oBACA,eACA,WACA,QACA,aACA,QACA,UACA,YACA,uBACA,eACA,uBACA,uBACA,WACA,YACA,UACA,aACA,UACA,WACA,wBACA,SACA,YACA,mBACA,aACA,SACA,WACA,WACA,iBACA,wBACA,oBACA,iBACA,cACA,kBACA,YACA,gBACA,WACA,YACA,mBACA,iBACA,UACA,aACA,SACA,SACA,UACA,UACA,WACA,qBACA,WACA,SACA,UACA,gBACA,WACA,yBACA,YACA,UACA,iBACA,aACA,aACA,eACA,iBACA,sBACA,eACA,cACA,cACA,QACA,YACA,yBACA,SACA,YACA,gBACA,iBACA,UACA,QAGFC,SAAU,CACR,SACA,QACA,gBACA,SACA,SACA,SACA,SACA,cACA,QACA,UACA,OACA,QACA,WACA,SACA,SACA,cACA,cACA,QACA,SACA,YACA,UACA,SACA,QACA,iBACA,yBACA,uBAGFC,aAAc,CACZ,UACA,SACA,UACA,WACA,aACA,WACA,cACA,WACA,UACA,UACA,SACA,QACA,WACA,UACA,OACA,SACA,WACA,YACA,QACA,WACA,gBACA,WACA,YACA,cACA,WACA,UACA,WACA,SACA,gBACA,aACA,aACA,WACA,iBACA,eACA,OACA,WACA,SACA,eACA,eACA,iBACA,eACA,YACA,QACA,OACA,UACA,WACA,aACA,gBACA,YACA,WAGFC,QAAS,CACP,UACA,YACA,cACA,UACA,UACA,SACA,UACA,YACA,YACA,aACA,gBACA,eACA,SACA,QACA,QACA,cACA,UACA,gBACA,kBAGFC,WAAY,CACV,kBACA,UACA,SACA,gBACA,SACA,WACA,SACA,uBACA,YACA,sBACA,uBACA,oBACA,mBACA,8CAGFC,QAAS,CACP,UACA,YACA,QACA,WACA,WACA,SAGFC,UAAW,CACT,yBACA,mBACA,WACA,gBACA,QACA,SACA,UACA,aACA,WACA,UACA,gBACA,YACA,aACA,OACA,YACA,UACA,UACA,gBACA,aACA,QACA,aACA,WACA,SACA,UACA,SAGFC,OAAQ,CACN,UACA,aACA,UACA,UACA,SACA,WACA,gBACA,WACA,WAGFC,SAAU,CACR,WACA,SACA,aACA,sBACA,mBACA,mBACA,WACA,qBACA,qBACA,aCh6HSC,EAAkC,CAC7C,CACEhL,MAAO,cAAepK,MAAO,cAAeqV,gBAAiB,IAAKhL,OAAQA,EAAOC,YAAagL,YAAa,CAAC,CAAEtV,MAAO,KAAMoK,MAAO,YAAcmL,cAAepL,GAEjK,CACEC,MAAO,UAAWpK,MAAO,UAAWqV,gBAAiB,IAAKhL,OAAQA,EAAOE,QAAS+K,YAAa,CAAC,CAAEtV,MAAO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","file":"static/js/22.041a7212.chunk.js","sourcesContent":["import { createContext, useState, useMemo, createElement, useContext, useCallback } from 'react';\n\nconst STORE_DEFAULT_NAME = '__STATE_MACHINE__';\r\nconst STORE_ACTION_NAME = '__STATE_MACHINE_ACTION_NAME__';\r\nconst STATE_MACHINE_DEBUG_NAME = '___STATE_MACHINE_DEBUG__';\n\nvar getBrowserStoreData = (storageType, storeName) => {\r\n    const sessionStorageData = storageType.getItem(storeName);\r\n    try {\r\n        return sessionStorageData ? JSON.parse(sessionStorageData) : undefined;\r\n    }\r\n    catch (_a) {\r\n        return undefined;\r\n    }\r\n};\n\nfunction storeFactory(storageType, name) {\r\n    const storeName = name || STORE_DEFAULT_NAME;\r\n    let store = getBrowserStoreData(storageType, storeName);\r\n    const getName = () => storeName;\r\n    const set = (value) => {\r\n        store = value;\r\n    };\r\n    const get = () => store;\r\n    return {\r\n        set,\r\n        get,\r\n        getName,\r\n    };\r\n}\n\nvar isUndefined = (val) => val === undefined;\n\nfunction setUpDevTools(isDevMode, storageType, getName, getStore) {\r\n    if (typeof window === 'undefined' || !isDevMode)\r\n        return;\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_DEBUG = (value) => storageType.setItem(STATE_MACHINE_DEBUG_NAME, value);\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_RESET = () => storageType.clear();\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_GET_STORE = () => storageType.getItem(getName());\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_SAVE_TO = name => window.localStorage.setItem(name, JSON.stringify(getStore()));\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_LOAD = ({ storeName, data, }) => storageType.setItem(getName() || STATE_MACHINE_DEBUG_NAME, data || window.localStorage.getItem(storeName) || '');\r\n}\n\nvar StateMachineContext = createContext({\r\n    store: {},\r\n    updateStore: (payload) => payload,\r\n});\n\nvar transformStore = ({ transform, externalStoreName, storageType, store, }) => transform({\r\n    externalStoreData: getBrowserStoreData(storageType, externalStoreName),\r\n    currentStoreData: store,\r\n});\n\nfunction getSyncStoreData(defaultStoreData, options, storageType) {\r\n    let store = defaultStoreData;\r\n    const syncStoreOption = options.syncStores;\r\n    if (!syncStoreOption)\r\n        return store;\r\n    try {\r\n        if (Array.isArray(syncStoreOption)) {\r\n            syncStoreOption.forEach(option => {\r\n                store = transformStore({\r\n                    transform: option.transform,\r\n                    externalStoreName: option.externalStoreName,\r\n                    storageType,\r\n                    store,\r\n                });\r\n            });\r\n        }\r\n        else if (syncStoreOption.externalStoreName &&\r\n            typeof syncStoreOption.transform === 'function' &&\r\n            typeof syncStoreOption.externalStoreName === 'string') {\r\n            return transformStore({\r\n                transform: syncStoreOption.transform,\r\n                externalStoreName: syncStoreOption.externalStoreName,\r\n                storageType,\r\n                store,\r\n            });\r\n        }\r\n        else {\r\n            Object.entries(syncStoreOption).forEach(([key, values]) => {\r\n                const browserStore = getBrowserStoreData(storageType, key);\r\n                values.forEach((value) => {\r\n                    store = Object.assign(Object.assign({}, store), {\r\n                        [value]: Object.assign(Object.assign({}, store[value]), browserStore[value]),\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n    catch (_a) {\r\n        return store;\r\n    }\r\n    return store;\r\n}\n\nconst isClient = typeof window !== 'undefined';\r\nconst isDevMode = process.env.NODE_ENV !== 'production';\r\nlet storageType = isClient\r\n    ? window.sessionStorage\r\n    : {\r\n        getItem: payload => payload,\r\n        setItem: (payload) => payload,\r\n        clear: () => { },\r\n        length: 0,\r\n        key: (payload) => payload.toString(),\r\n        removeItem: () => { },\r\n    };\r\nlet getStore;\r\nlet setStore;\r\nlet getName;\r\nlet middleWaresArray = [];\r\nconst middleWare = (data = '') => {\r\n    if (data && isClient) {\r\n        // @ts-ignore\r\n        window[STORE_ACTION_NAME] = data;\r\n    }\r\n    return data;\r\n};\r\nfunction setStorageType(type) {\r\n    storageType = type;\r\n}\r\nfunction createStore(defaultStoreData, options = {\r\n    name: STORE_DEFAULT_NAME,\r\n    middleWares: [],\r\n    syncStores: undefined,\r\n}) {\r\n    const storeName = options ? options.name : STORE_DEFAULT_NAME;\r\n    const methods = storeFactory(storageType, storeName);\r\n    if (isDevMode && isClient) {\r\n        // @ts-ignore\r\n        window['STATE_MACHINE_NAME'] = storeName;\r\n    }\r\n    getName = methods.getName;\r\n    getStore = methods.get;\r\n    setStore = methods.set;\r\n    middleWaresArray = options.middleWares;\r\n    setUpDevTools(isDevMode, storageType, getName, getStore);\r\n    setStore(getSyncStoreData(getStore() || defaultStoreData, options, storageType));\r\n}\r\nfunction StateMachineProvider(props) {\r\n    const [globalState, updateStore] = useState(getStore());\r\n    const value = useMemo(() => ({\r\n        store: globalState,\r\n        updateStore,\r\n    }), [globalState]);\r\n    // @ts-ignore\r\n    return createElement(StateMachineContext.Provider, Object.assign({ value: value }, props));\r\n}\r\nconst actionTemplate = ({ options, callback, updateStore, }) => (payload) => {\r\n    let result;\r\n    const debugName = callback ? callback.name : '';\r\n    if (isDevMode) {\r\n        middleWare(debugName);\r\n    }\r\n    if (callback) {\r\n        result = callback(getStore(), payload);\r\n    }\r\n    setStore(isUndefined(result) ? getStore() : result);\r\n    storageType.setItem(getName(), JSON.stringify(getStore()));\r\n    if (isUndefined(options) ||\r\n        (options && options.shouldReRenderApp !== false)) {\r\n        let pipeData = getStore();\r\n        if (Array.isArray(middleWaresArray) && middleWaresArray.length) {\r\n            pipeData = middleWaresArray.reduce((currentValue, currentFunction) => currentFunction(currentValue) || currentValue, pipeData);\r\n        }\r\n        updateStore(pipeData);\r\n    }\r\n};\r\nfunction useStateMachine(updateStoreFunction, options) {\r\n    const { store: globalState, updateStore } = useContext(StateMachineContext);\r\n    if (updateStoreFunction && Object.keys(updateStoreFunction).length) {\r\n        return {\r\n            actions: Object.entries(updateStoreFunction).reduce((previous, [key, callback]) => (Object.assign(Object.assign({}, previous), { [key]: useCallback(actionTemplate({\r\n                    options,\r\n                    callback,\r\n                    updateStore,\r\n                }), []) })), {}),\r\n            action: p => p,\r\n            state: globalState,\r\n        };\r\n    }\r\n    return {\r\n        actions: {},\r\n        action: useCallback(updateStoreFunction\r\n            ? actionTemplate({\r\n                options,\r\n                callback: updateStoreFunction,\r\n                updateStore,\r\n            })\r\n            : () => { }, []),\r\n        state: globalState,\r\n    };\r\n}\n\nexport { StateMachineContext, StateMachineProvider, createStore, setStorageType, useStateMachine };\n","import React from 'react';\nimport { HeaderContext } from 'components/Header';\n\nconst useHeaderContext = () => {\n  const {\n    title, setTitle, subtitle, setSubtitle, type, setType, logoSize, setLogoSize, setDoGoBack, doGoBack,\n  } = React.useContext(HeaderContext);\n\n  return {\n    title,\n    setTitle,\n    subtitle,\n    setSubtitle,\n    type,\n    setType,\n    logoSize,\n    setLogoSize,\n    doGoBack,\n    setDoGoBack,\n  };\n};\n\nexport default useHeaderContext;\n","export const scrollToTop = function scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nexport const scrollToBottom = function scrollToBottom() {\n  window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\n};\n","// TODO: Improve types\nexport function updateAction(storeKey: string): any {\n  return (state: any, payload: any) => ({\n    ...state,\n    [storeKey]: {\n      ...state[storeKey],\n      ...payload,\n    },\n  });\n}\n\nexport function resetStore(): any {\n  return (state: any) => ({ welcome: { language: state.welcome.language } });\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.983,0C6.261,0,0.001,6.259,0.001,13.979c0,7.724,6.26,13.984,13.982,13.984s13.98-6.261,13.98-13.984C27.963,6.259,21.705,0,13.983,0z M13.983,26.531c-6.933,0-12.55-5.62-12.55-12.553c0-6.93,5.617-12.548,12.55-12.548c6.931,0,12.549,5.618,12.549,12.548C26.531,20.911,20.913,26.531,13.983,26.531z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"15.579,17.158 16.191,4.579 11.804,4.579 12.414,17.158\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.998,18.546c-1.471,0-2.5,1.029-2.5,2.526c0,1.443,0.999,2.528,2.444,2.528h0.056c1.499,0,2.469-1.085,2.469-2.528C16.441,19.575,15.468,18.546,13.998,18.546z\"\n});\n\nvar SvgExclamationCircle = function SvgExclamationCircle(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 27.963 27.963\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgExclamationCircle, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/exclamationCircle.2f56fd77.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const ModalBody = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    margin: auto;\n`;\n\nexport const ModalTitle = styled.div`\n  font-family: 'Biko';\n  font-size: 30px;\n  line-height: 30px;\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nexport const ModalContent = styled.div`\n  font-family: 'Source Sans Pro';\n  text-align: center;\n  line-height: 25px;\n  font-size: 18px;\n  margin-top: 10px;\n  margin-bottom: 30px;\n`;\n\nexport const ModalLink = styled.a`\n    display: flex;\n    justify-content: center; \n    align-items: center;\n    width: 100%;\n    max-width: 305px;\n    height: 52px;\n    border-radius: 15px;\n    background-color: #3578DE;\n    padding: 10px 20px;\n\n    color: #FFFFFF;\n    font-family: 'Source Sans Pro';\n    font-weight: 600;\n    line-height: 20px;\n    font-size: 14px;\n    text-align: center;\n    text-decoration: none;\n\n    :hover {\n      text-decoration: none;\n      color: #FFFFFF;\n    }\n`;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { PropsWithChildren } from 'react';\nimport Modal from 'react-modal';\nimport { useTranslation } from 'react-i18next';\n\n// Style\nimport {\n  ModalBody, ModalTitle, ModalContent, ModalLink,\n} from './style';\n\nexport interface ConfirmationModalProps {\n  isOpen: boolean;\n  modalTitle: string;\n}\n\nModal.setAppElement('#root');\n\nconst CountryErrorModal = React.memo(({\n  modalTitle,\n  children,\n  ...props\n}: PropsWithChildren<ConfirmationModalProps>) => {\n  // Handlers\n\n  const { t } = useTranslation();\n\n  const customStyles = {\n    content: {\n      height: '281px',\n      maxWidth: '348px',\n      margin: 'auto',\n      borderRadius: '10px',\n      border: 'none',\n    },\n    overlay: { backgroundColor: 'rgba(0, 0, 0, 0.5)' },\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={customStyles}\n    >\n      <ModalBody className=\"ModalBody\">\n        <ModalTitle>{modalTitle}</ModalTitle>\n        <ModalContent>{children}</ModalContent>\n        <ModalLink href=\"https://virufy.org\">\n          {t('main:visitWebsite', 'Visit our website')}\n        </ModalLink>\n      </ModalBody>\n    </Modal>\n  );\n});\n\nexport default CountryErrorModal;\n","export const languageData = [\n  { value: 'en', label: 'English' },\n  { value: 'es', label: 'Español' },\n  { value: 'pt', label: 'Português' },\n  // { value: 'fr', label: 'Français' },\n  // { value: 'bn', label: 'বাংলা' },\n  // { value: 'el', label: 'ελληνικά' },\n  // { value: 'mn', label: 'монгол хэл' },\n  // { value: 'th', label: 'ภาษาไทย' },\n  { value: 'tr', label: 'Türkçe' },\n  { value: 'ja', label: '日本語' },\n  // { value: 'hi', label: 'हिन्दी' },\n];\n","export const states = {\n  Afghanistan: [\n    'Badakhshan',\n    'Badghis',\n    'Baghlan',\n    'Balkh',\n    'Bamyan',\n    'Daykundi',\n    'Farah',\n    'Faryab',\n    'Ghazni',\n    'Ghor',\n    'Helmand',\n    'Herat',\n    'Jowzjan',\n    'Kabul',\n    'Kandahar',\n    'Kapisa',\n    'Khost',\n    'Kunar',\n    'Kunduz',\n    'Laghman',\n    'Logar',\n    'Maidan Wardak',\n    'Nangarhar',\n    'Nimruz',\n    'Nuristan',\n    'Paktia',\n    'Paktika',\n    'Panjshir',\n    'Parwan',\n    'Samangan',\n    'Sar-e Pol',\n    'Takhar',\n    'Urozgan',\n    'Zabul',\n  ],\n  Albania: [\n    'Brändö',\n    'Eckerö',\n    'Finström',\n    'Föglö',\n    'Geta',\n    'Hammarland',\n    'Jomala',\n    'Kumlinge',\n    'Kökar',\n    'Lemland',\n    'Lumparland',\n    'Mariehamn',\n    'Saltvik',\n    'Sottunga',\n    'Sund',\n    'Vårdö',\n    'Berat',\n    'Dibėr',\n    'Durrės',\n    'Elbasan',\n    'Fier',\n    'Gjirokastėr',\n    'Korēė',\n    'Kukės',\n    'Lezhė',\n    'Shkodėr',\n    'Tirana',\n    'Vlorė',\n  ],\n  Algeria: [\n    'Adrar',\n    'Aļn Defla',\n    'Aļn Témouchent',\n    'Algiers',\n    'Annaba',\n    'Batna',\n    'Béchar',\n    'Béjaļa',\n    'Biskra',\n    'Blida',\n    'Bordj Bou Arréridj',\n    'Bouļra',\n    'Boumerdés',\n    'Chlef',\n    'Constantine',\n    'Djelfa',\n    'El Bayadh',\n    'El Oued',\n    'El Tarf',\n    'Ghardaļa',\n    'Guelma',\n    'Illizi',\n    'Jijel',\n    'Khenchela',\n    'Laghouat',\n    'Mascara',\n    'Médéa',\n    'Mila',\n    'Mostaganem',\n    'Msila',\n    'Naāma',\n    'Oran',\n    'Ouargla',\n    'Oum el Bouaghi',\n    'Relizane',\n    'Saļda',\n    'Sétif',\n    'Sidi Bel Abbés',\n    'Skikda',\n    'Souk Ahras',\n    'Tamanghasset',\n    'Tébessa',\n    'Tiaret',\n    'Tindouf',\n    'Tipaza',\n    'Tissemsilt',\n    'Tizi Ouzou',\n    'Tlemcen',\n  ],\n  Andorra: [\n    'Andorra la Vella',\n    'Canillo',\n    'Encamp',\n    'Escaldes-Engordany',\n    'La Massana',\n    'Ordino',\n    'Sant Julián de Lória',\n  ],\n  Angola: [\n    'Bengo',\n    'Benguela',\n    'Bié',\n    'Cabinda',\n    'Cuando Cubango',\n    'Cuanza Norte',\n    'Cuanza Sul',\n    'Cunene',\n    'Huambo',\n    'Huíla',\n    'Luanda',\n    'Lunda Norte',\n    'Lunda Sul',\n    'Malanje',\n    'Moxico',\n    'Namibe',\n    'Uíge',\n    'Zaire',\n  ],\n  Antigua: [\n    'Antigua Island',\n    'Barbuda Island',\n    'Bird Island',\n    'Bishop Island',\n    'Blake Island',\n    'Crump Island',\n    'Dulcina Island',\n    'Exchange Island',\n    'Five Islands',\n    'Great Bird Island',\n    'Green Island',\n    'Guiana Island',\n    'Hawes Island',\n    'Hells Gate Island',\n    'Henry Island',\n    'Johnson Island',\n    'Kid Island',\n    'Lobster Island',\n    'Maiden Island',\n    'Moor Island',\n    'Nanny Island',\n    'Pelican Island',\n    'Prickly Pear Island',\n    'Rabbit Island',\n    'Red Head Island',\n    'Redonda Island',\n    'Sandy Island',\n    'Smith Island',\n    'The Sisters',\n    'Vernon Island',\n    'Wicked Will Island',\n    'York Island',\n  ],\n  Argentina: [\n    'Ciudad Autónoma de Buenos Aires',\n    'Buenos Aires',\n    'Catamarca',\n    'Chaco',\n    'Chubut',\n    'Córdoba',\n    'Corrientes',\n    'Entre Ríos',\n    'Formosa',\n    'Jujuy',\n    'La Pampa',\n    'La Rioja',\n    'Mendoza',\n    'Misiones',\n    'Neuquén',\n    'Río Negro',\n    'Salta',\n    'San Juan',\n    'San Luis',\n    'Santa Cruz',\n    'Santa Fe',\n    'Santiago del Estero',\n    'Tierra del Fuego',\n    'Tucumán',\n  ],\n  Armenia: [\n    'Aragatsotn',\n    'Ararat',\n    'Armavir',\n    'Gegharkunik',\n    'Kotayk',\n    'Lori',\n    'Shirak',\n    'Syunik',\n    'Tavush',\n    'Vayots Dzor',\n    'Yerevan',\n  ],\n  Australia: [\n    'Australian Capital Territory',\n    'New South Wales',\n    'Northern Territory',\n    'Queensland',\n    'South Australia',\n    'Tasmania',\n    'Victoria',\n    'Western Australia',\n  ],\n  Austria: [\n    'Burgenland',\n    'Kärnten',\n    'Niederösterreich',\n    'Oberösterreich',\n    'Salzburg',\n    'Steiermark',\n    'Tirol',\n    'Vorarlberg',\n    'Wien',\n  ],\n  Bahamas: [\n    'Acklins Island',\n    'Berry Islands',\n    'Bimini',\n    'Black Point',\n    'Cat Island',\n    'Central Abaco',\n    'Crooked Island and Long Cay',\n    'East Grand Bahama',\n    'Exuma',\n    'Freeport',\n    'Fresh Creek',\n    'Governors Harbour',\n    'Green Turtle Cay',\n    'Harbour Island',\n    'High Rock',\n    'Inagua',\n    'Kemps Bay',\n    'Long Island',\n    'Marsh Harbour',\n    'Mayaguana',\n    'Moores Island',\n    'New Providence',\n    'Nichollstown and Berry Islands',\n    'North Abaco',\n    'North Andros',\n    'North Eleuthera',\n    'Ragged Island',\n    'Rock Sound',\n    'San Salvador and Rum Cay',\n    'Sandy Point',\n    'South Abaco',\n    'South Andros',\n    'South Eleuthera',\n    'West Grand Bahama',\n  ],\n  Bahrain: [\n    'Manama',\n    'Muharraq',\n    'Northern Governorate',\n    'Southern Governorate',\n  ],\n  Bangladesh: [\n    'Barisal',\n    'Chittagong',\n    'Dhaka',\n    'Khulna',\n    'Mymensingh',\n    'Rajshahi',\n    'Rangpur',\n    'Sylhet',\n  ],\n  Barbados: [\n    'Christ Church',\n    'Saint Andrew',\n    'Saint George',\n    'Saint James',\n    'Saint John',\n    'Saint Joseph',\n    'Saint Lucy',\n    'Saint Michael',\n    'Saint Peter',\n    'Saint Philip',\n    'Saint Thomas',\n  ],\n  Belarus: [\n    'Brest voblast',\n    'Gorod Minsk',\n    'Homiel voblast',\n    'Hrodna voblast',\n    'Mahilyow voblast',\n    'Minsk voblast',\n    'Vitsebsk voblast',\n  ],\n  Belgium: [\n    'Brussels',\n    'Flanders',\n    'Wallonia',\n  ],\n  Belize: [\n    'Belize District',\n    'Cayo District',\n    'Corozal District',\n    'Orange Walk District',\n    'Stann Creek District',\n    'Toledo District',\n  ],\n  Benin: [\n    'Alibori',\n    'Atakora',\n    'Atlantique',\n    'Borgou',\n    'Collines Department',\n    'Donga',\n    'Kouffo',\n    'Littoral Department',\n    'Mono Department',\n    'Ouémé',\n    'Plateau',\n    'Zou',\n  ],\n  Bhutan: [\n    'Bumthang',\n    'Chhukha',\n    'Dagana',\n    'Gasa',\n    'Haa',\n    'Lhuntse',\n    'Mongar',\n    'Paro',\n    'Pemagatshel',\n    'Punakha',\n    'Samdrup Jongkhar',\n    'Samtse',\n    'Sarpang',\n    'Thimphu',\n    'Trashigang',\n    'Trashiyangtse',\n    'Trongsa',\n    'Tsirang',\n    'Wangdue Phodrang',\n    'Zhemgang',\n  ],\n  Bolivia: [\n    'Beni',\n    'Chuquisaca',\n    'Cochabamba',\n    'La Paz',\n    'Oruro',\n    'Pando',\n    'Potosí',\n    'Santa Cruz',\n    'Tarija',\n  ],\n  Bosnia: [\n    'Bréko Distrikt',\n    'Federacija Bosne i Hercegovine',\n    'Republika Srpska',\n  ],\n  Botswana: [\n    'Central',\n    'Ghanzi',\n    'Kgalagadi',\n    'Kgatleng',\n    'Kweneng',\n    'North West',\n    'North-East',\n    'South East',\n    'Southern',\n  ],\n  Brazil: [\n    'Acre',\n    'Alagoas',\n    'Amapá',\n    'Amazonas',\n    'Bahia',\n    'Ceará',\n    'Distrito Federal',\n    'Espírito Santo',\n    'Goiás',\n    'Maranhão',\n    'Mato Grosso',\n    'Mato Grosso do Sul',\n    'Minas Gerais',\n    'Pará',\n    'Paraíba',\n    'Paraná',\n    'Pernambuco',\n    'Piauí',\n    'Rio de Janeiro',\n    'Rio Grande do Norte',\n    'Rio Grande do Sul',\n    'Rondônia',\n    'Roraima',\n    'Santa Catarina',\n    'São Paulo',\n    'Sergipe',\n    'Tocantins',\n  ],\n  Brunei: [\n    'Belait',\n    'Brunei Muara',\n    'Temburong',\n    'Tutong',\n  ],\n  Bulgaria: [\n    'Blagoevgrad',\n    'Burgas',\n    'Dobrich',\n    'Gabrovo',\n    'Jambol',\n    'Khaskovo',\n    'Kjustendil',\n    'Kurdzhali',\n    'Lovech',\n    'Montana',\n    'Pazardzhik',\n    'Pernik',\n    'Pleven',\n    'Plovdiv',\n    'Razgrad',\n    'Ruse',\n    'Shumen',\n    'Silistra',\n    'Sliven',\n    'Smoljan',\n    'Sofija',\n    'Sofija Grad',\n    'Stara Zagora',\n    'Turgovishhe',\n    'Varna',\n    'Veliko Turnovo',\n    'Vidin',\n    'Vraca',\n  ],\n  Burkina: [\n    'Balé',\n    'Bam Lake Bam',\n    'Banwa Province',\n    'Bazéga',\n    'Bougouriba',\n    'Boulgou Province',\n    'Boulkiemdé',\n    'Comoé Komoe',\n    'Ganzourgou Province',\n    'Gnagna',\n    'Gourma Province',\n    'Houet',\n    'Ioba',\n    'Kadiogo',\n    'Kénédougou',\n    'Komondjari',\n    'Kompienga',\n    'Kossi Province',\n    'Koulpélogo',\n    'Kouritenga',\n    'Kourwéogo',\n    'Léraba',\n    'Loroum',\n    'Mouhoun',\n    'Namentenga',\n    'Naouri Nahouri',\n    'Nayala',\n    'Noumbiel',\n    'Oubritenga',\n    'Oudalan',\n    'Passoré',\n    'Poni',\n    'Sanguié',\n    'Sanmatenga',\n    'Séno',\n    'Sissili',\n    'Soum',\n    'Sourou',\n    'Tapoa',\n    'Tui Tuy',\n    'Yagha',\n    'Yatenga',\n    'Ziro',\n    'Zondoma',\n    'Zoundwéogo',\n  ],\n  Burundi: [\n    'Bubanza',\n    'Bujumbura Mairie',\n    'Bujumbura Rural',\n    'Bururi',\n    'Cankuzo',\n    'Cibitoke',\n    'Gitega',\n    'Karuzi',\n    'Kayanza',\n    'Kirundo',\n    'Makamba',\n    'Muramvya',\n    'Muyinga',\n    'Mwaro',\n    'Ngozi',\n    'Rutana',\n    'Ruyigi',\n  ],\n  Cabo: [\n    'Boa Vista',\n    'Brava',\n    'Maio',\n    'Mosteiros',\n    'Paul',\n    'Porto Novo',\n    'Praia',\n    'Ribeira Brava',\n    'Ribeira Grande',\n    'Ribeira Grande de Santiago',\n    'Sal',\n    'Santa Catarina',\n    'Santa Catarina do Fogo',\n    'Santa Cruz',\n    'Sao Domingos',\n    'Sao Filipe',\n    'Sao Miguel',\n    'Sao Salvador do Mundo',\n    'São Lourenço dos Órgãos',\n    'São Vicente',\n    'Tarrafal',\n    'Tarrafal de São Nicolau',\n  ],\n  Cambodia: [\n    'Baat Dambang',\n    'Banteay Mean Chey',\n    'Kampong Chaam',\n    'Kampong Chhnang',\n    'Kampong Spueu',\n    'Kampong Thum',\n    'Kampot',\n    'Kandaal',\n    'Kaoh Kong',\n    'Kracheh',\n    'Krong Kaeb',\n    'Krong Pailin',\n    'Krong Preah Sihanouk',\n    'Mondol Kiri',\n    'Otdar Mean Chey',\n    'Phnom Penh',\n    'Pousaat',\n    'Preah Vihear',\n    'Prey Veaeng',\n    'Rotanah Kiri',\n    'Siem Reab',\n    'Stueng Treng',\n    'Svaay Rieng',\n    'Taakaev',\n    'Tbong Khmum',\n  ],\n  Cameroon: [\n    'Adamaoua',\n    'Centre',\n    'Est',\n    'Extrźme Nord',\n    'Littoral',\n    'Nord',\n    'Nord Ouest',\n    'Ouest',\n    'Sud',\n    'Sud Ouest',\n  ],\n  Canada: [\n    'Alberta',\n    'British Columbia',\n    'Manitoba',\n    'New Brunswick',\n    'Newfoundland and Labrador',\n    'Northwest Territories',\n    'Nova Scotia',\n    'Nunavut',\n    'Ontario',\n    'Prince Edward Island',\n    'Quebec',\n    'Saskatchewan',\n    'Yukon',\n  ],\n  CentralAfrican: [\n    'Bamingui Bangoran',\n    'Bangui',\n    'Basse Kotto',\n    'Haute Kotto',\n    'Haut Mbomou',\n    'Kémo',\n    'Lobaye',\n    'Mambéré Kadéļ',\n    'Mbomou',\n    'Nana Grebizi',\n    'Nana Mambéré',\n    'Ombella MPoko',\n    'Ouaka',\n    'Ouham',\n    'Ouham Péndé',\n    'Sangha Mbaéré',\n    'Vakaga',\n  ],\n  Chad: [\n    'Bahr el Ghazal',\n    'Batha',\n    'Borkou',\n    'Chari Baguirmi',\n    'EnnediEst',\n    'EnnediOuest',\n    'Guéra',\n    'Hadjer Lamis',\n    'Kanem',\n    'Lac',\n    'Logone Occidental',\n    'Logone Oriental',\n    'Mondoul',\n    'MayoKébbiEst',\n    'MoyenChari',\n    'Ouaddai',\n    'Salamat',\n    'Sila',\n    'Tandjilé',\n    'Tibesti',\n    'Ville de Ndjamena',\n    'Wadi Fira',\n  ],\n\n  Chile: [\n    'Aisén del General Carlos Ibáńez del Campo',\n    'Antofagasta',\n    'Araucanía',\n    'Arica y Parinacota',\n    'Atacama',\n    'Biobío',\n    'Coquimbo',\n    'Libertador General Bernardo OHiggins',\n    'Los Lagos',\n    'Los Ríos',\n    'Magallanes y Antartica Chilena',\n    'Marga Marga',\n    'Maule',\n    'Ńuble',\n    'Región Metropolitana de Santiago',\n    'Tarapacá',\n    'Valparaíso',\n  ],\n\n  China: [\n    'Anhui',\n    'Beijing',\n    'Chongqing',\n    'Fujian',\n    'Gansu',\n    'Guangdong',\n    'Guangxi',\n    'Guizhou',\n    'Hainan',\n    'Hebei',\n    'Heilongjiang',\n    'Henan',\n    'Hong Kong',\n    'Hubei',\n    'Hunan',\n    'Inner Mongolia',\n    'Jiangsu',\n    'Jiangxi',\n    'Jilin',\n    'Liaoning',\n    'Macau',\n    'Ningxia',\n    'Qinghai',\n    'Shaanxi',\n    'Shandong',\n    'Shanghai',\n    'Shanxi',\n    'Sichuan',\n    'Tianjin',\n    'Tibet',\n    'Xinjiang',\n    'Yunnan',\n    'Zhejiang',\n  ],\n\n  Colombia: [\n    'Amazonas',\n    'Antioquia',\n    'Arauca',\n    'Atlántico',\n    'Bogotá',\n    'Bolívar',\n    'Boyacá',\n    'Caldas',\n    'Capital District',\n    'Caquetá',\n    'Casanare',\n    'Cauca',\n    'Cesar',\n    'Chocó',\n    'Córdoba',\n    'Cundinamarca',\n    'Guainía',\n    'Guaviare',\n    'Huila',\n    'La Guajira',\n    'Magdalena',\n    'Meta',\n    'Nariño',\n    'Norte de Santander',\n    'Putumayo',\n    'Quindío',\n    'Risaralda',\n    'San Andrés y Providencia',\n    'Santander',\n    'Sucre',\n    'Tolima',\n    'Valle del Cauca',\n    'Vaupés',\n    'Vichada',\n  ],\n\n  Comoros: [\n    'Andjazīdja',\n    'Andjouān',\n    'Moūhīlī',\n  ],\n\n  Congo: [\n    'Bouenza',\n    'Brazzaville',\n    'Cuvette',\n    'CuvetteOuest',\n    'Kouilou',\n    'Lékoumou',\n    'Likouala',\n    'Niari',\n    'Plateaux',\n    'PointeNoire',\n    'Pool',\n    'Sangha',\n  ],\n\n  Cook: [\n    'Aitutaki',\n    'Atiu',\n    'Avarua',\n    'Mangaia',\n    'Manihiki',\n    'Ma uke',\n    'Mitiaro',\n    'Nassau',\n    'Palmerston',\n    'Penrhyn',\n    'Pukapuka',\n    'Rakahanga',\n  ],\n\n  CostaRica: [\n    'Alajuela',\n    'Cartago',\n    'Guanacaste',\n    'Heredia',\n    'Limón',\n    'Puntarenas',\n    'San José',\n  ],\n\n  Croatia: [\n    'Bjelovarsko bilogorska',\n    'Brodsko posavska',\n    'Dubrovacko neretvanska',\n    'Grad Zagreb',\n    'Istarska',\n    'Karlovacka',\n    'Koprivni Ko Kri Eva Ka',\n    'Krapinsko zagorska ',\n    'Lika Senj',\n    'Međimurje',\n    'Osijek Baranja',\n    'Požega Slavonia',\n    'Primorsko goranska ',\n    'Sisak Moslavina',\n    'Splitsko dalmatinska',\n    'Šibensko Kninska',\n    'Vara˛dinska ',\n    'Virovitica Podravina',\n    'Vukovarsko srijemska ',\n    'Zadarska',\n    'Zagrebaéka',\n  ],\n\n  Cuba: [\n    'Artemisa',\n    'Camagüey',\n    'Ciego de ávila',\n    'Cienfuegos',\n    'Granma',\n    'Guantánamo',\n    'Holguín',\n    'Isla de la Juventud',\n    'La Habana',\n    'Las Tunas',\n    'Matanzas',\n    'Mayabeque',\n    'Pinar del Río',\n    'Sancti Spíritus',\n    'Santiago de Cuba',\n    'Villa Clara',\n  ],\n\n  Cyprus: [\n    'Ammochostos',\n    'Keryneia',\n    'Larnaka',\n    'Lefkosia',\n    'Lemesos',\n    'Pafos',\n  ],\n\n  Czechia: [\n    'Hlavní město Praha',\n    'Jihomoravskż kraj',\n    'Karlovarskż kraj',\n    'Královéhradeckż kraj',\n    'Libereckż kraj',\n    'Moravskoslezskż kraj',\n    'Olomouckż kraj',\n    'Pardubickż kraj',\n    'Plze?skż kraj',\n    'Śsteckż kraj',\n    'Vysoéina',\n    'Zlínskż kraj',\n  ],\n\n  IvoryCoast: [\n    'Agnéby',\n    'Bafing',\n    'Bas Sassandra',\n    'Denguélé',\n    'Dix Huit Montagnes',\n    'Fromager',\n    'Haut Sassandra',\n    'Lacs',\n    'Lagunes',\n    'Marahoué',\n    'Moyen Cavally',\n    'Moyen Comoé',\n    'N zi Comoé',\n    'Savanes',\n    'Sud Bandama',\n    'Sud Comoé',\n    'Vallée du Bandama',\n    'Worodougou',\n    'Zanzan',\n  ],\n\n  /* DemocraticKorea: [\n    'Chagang do',\n    'Hamgyong bukto',\n    'Hamgyong namdo',\n    'Hwanghae bukto',\n    'Hwanghae namdo',\n    'Kangwon do',\n    'Nasín',\n    'Pyongan bukto',\n    'Pyongan namdo',\n    'Pyongyangsi',\n    'Yanggangdo',\n  ], */\n\n  RepublicCongo: [\n    'Bandundu',\n    'Bas Congo',\n    'Équateur',\n    'Kasaļ Occidental',\n    'Kasaļ Oriental',\n    'Katanga',\n    'Kinshasa',\n    'Maniema',\n    'Nord Kivu',\n    'Orientale',\n    'Sud Kivu',\n  ],\n\n  Denmark: [\n    'Hovedstaden',\n    'Kujalleq',\n    'Midtjylland',\n    'Norderųerne',\n    'Nordjylland',\n    'Ųsterų',\n    'Qaasuitsup',\n    'Qeqqata',\n    'Sandų',\n    'Sermersooq',\n    'Sjęlland',\n    'Strųmų',\n    'Suderų',\n    'Syddanmark',\n    'Vågų',\n  ],\n\n  Djibouti: [\n    'Ali Sabieh',\n    'Arta',\n    'Dikhil',\n    'Obock',\n    'Tadjourah',\n  ],\n\n  Dominica: [\n    'Saint Andrew Parish',\n    'Saint David Parish',\n    'Saint George Parish',\n    'Saint John Parish',\n    'Saint Joseph Parish',\n    'Saint Luke Parish',\n    'Saint Mark Parish',\n    'Saint Patrick Parish',\n    'Saint Paul Parish',\n    'Saint Peter Parish',\n  ],\n\n  DominicanRepublic: [\n    'Cibao Central',\n    'Del Valle',\n    'Distrito Nacional',\n    'Enriquillo',\n    'Norcentral',\n    'Nordeste',\n    'Noroeste',\n    'Norte',\n    'Valdesia',\n  ],\n\n  Ecuador: [\n    'Azuay',\n    'Bolívar',\n    'Cańar',\n    'Carchi',\n    'Chimborazo',\n    'Cotopaxi',\n    'El Oro',\n    'Esmeraldas',\n    'Galápagos',\n    'Guayas',\n    'Imbabura',\n    'Loja',\n    'Los Ríos',\n    'Manabí',\n    'Morona Santiago',\n    'Napo',\n    'Orellana',\n    'Pastaza',\n    'Pichincha',\n    'Santa Elena',\n    'Santo Domingo de los Tsáchilas',\n    'Sucumbíos',\n    'Tungurahua',\n    'Zamora Chinchipe',\n  ],\n\n  Egypt: [\n    'Alexandria',\n    'Aswan',\n    'Asyout',\n    'Bani Sueif',\n    'Beheira',\n    'Cairo',\n    'Daqahlia',\n    'Dumiat',\n    'El Bahr El Ahmar',\n    'El Ismailia',\n    'El Suez',\n    'El Wadi El Gedeed',\n    'Fayoum',\n    'Gharbia',\n    'Giza',\n    'Helwan',\n    'Kafr El Sheikh',\n    'Luxor',\n    'Matrouh',\n    'Menia',\n    'Menofia',\n    'North Sinai',\n    'Port Said',\n    'Qalubia',\n    'Qena',\n    'Sharqia',\n    'Sixth of October',\n    'Sohag',\n    'South Sinai',\n  ],\n\n  Salvador: [\n    'Ahuachapán',\n    'Cabańas',\n    'Cuscatlán',\n    'Chalatenango',\n    'La Libertad',\n    'La Paz',\n    'La Unión',\n    'Morazán',\n    'San Miguel',\n    'San Salvador',\n    'Santa Ana',\n    'San Vicente',\n    'Sonsonate',\n    'Usulután',\n  ],\n\n  EquatorialGuinea: [\n    'Annobón',\n    'Bioko Norte',\n    'Bioko Sur',\n    'Centro Sur',\n    'Kié Ntem',\n    'Litoral',\n    'Wele Nzas',\n  ],\n\n  Eritrea: [\n    'Anseba',\n    'Debub',\n    'Debub-Keih-Bahri',\n    'Gash-Barka',\n    'Maekel',\n    'Semien-Keih-Bahri',\n  ],\n\n  Estonia: [\n    'Harjumaa',\n    'Hiiumaa',\n    'Ida-Virumaa',\n    'Järvamaa',\n    'Jõgevamaa',\n    'Läänemaa',\n    'Lääne-Virumaa',\n    'Pärnumaa',\n    'Põlvamaa',\n    'Raplamaa',\n    'Saaremaa',\n    'Tartumaa',\n    'Valgamaa',\n    'Viljandimaa',\n    'Võrumaa',\n  ],\n\n  Ethiopia: [\n    'Addis Ababa',\n    'Afar',\n    'Amhara',\n    'Benshangul Gumaz',\n    'Dire Dawa',\n    'Gambela',\n    'Harari',\n    'Oromia',\n    'Somali',\n    'Southern Nations Nationalities and People Region',\n    'Tigray',\n  ],\n\n  Faroe: [\n    'Bordoy',\n    'Eysturoy',\n    'Mykines',\n    'Sandoy',\n    'Skuvoy',\n    'Streymoy',\n    'Suduroy',\n    'Tvoroyri',\n    'Vagar',\n  ],\n\n  Fiji: [\n    'Ba',\n    'Bua',\n    'Cakaudrove',\n    'Kadavu',\n    'Lau',\n    'Lomaiviti',\n    'Macuata',\n    'Nadroga and Navosa',\n    'Naitasiri',\n    'Namosi',\n    'Ra',\n    'Rewa',\n    'Rotuma',\n    'Serua',\n    'Tailevu',\n  ],\n\n  Finland: [\n    'Ahvenanmaan maakunta',\n    'Etelä Karjala',\n    'Etelä Pohjanmaa',\n    'Etelä Savo',\n    'Kainuu',\n    'Kanta Häme',\n    'Keski Pohjanmaa',\n    'Keski Suomi',\n    'Kymenlaakso',\n    'Lappi',\n    'Pirkanmaa',\n    'Pohjanmaa',\n    'Pohjois Karjala',\n    'Pohjois Pohjanmaa',\n    'Pohjois Savo',\n    'Päijät Häme',\n    'Satakunta',\n    'Uusimaa',\n    'Varsinais-Suomi',\n  ],\n\n  France: [\n    'Auvergne-Rhōne-Alpes',\n    'Bourgogne-Franche-Comté',\n    'Bretagne',\n    'Centre-Val de Loire',\n    'Corse',\n    'Grand Est',\n    'Hauts-de-France',\n    'Īle-de-France',\n    'Normandie',\n    'Nouvelle-Aquitaine',\n    'Occitanie',\n    'Pays de la Loire',\n    'Provence-Alpes-Cote dAzur',\n    'Clipperton',\n    'Guadeloupe',\n    'Guyane',\n    'Martinique',\n    'Mayotte',\n    'Novelle-Calédonie',\n    'Polynésie',\n    'Saint-Pierre-et-Miquelon',\n    'Saint Barthélemy',\n    'Saint Martin',\n    'Réunion',\n    'Terres Australes Franēaises',\n    'Wallis-et-Futuna',\n  ],\n\n  Gabon: [\n    'Estuaire',\n    'Haut-Ogooué',\n    'Moyen-Ogooué',\n    'Ngounié',\n    'Nyanga',\n    'Ogooué-Ivindo',\n    'Ogooué-Lolo',\n    'Ogooué-Maritime',\n    'Woleu-Ntem',\n  ],\n\n  Gambia: [\n    'Banjul',\n    'Central River',\n    'Lower River',\n    'North Bank',\n    'Upper River',\n    'Western',\n  ],\n\n  Georgia: [\n    'Abkhazia (Sokhumi)',\n    'Ajaria (Batumi)',\n    'Guria',\n    'Imereti',\n    'Kakheti',\n    'Kvemo Kartli',\n    'Mtshkheta-Mtianeti',\n    'Racha-Lexhkumi-KvemoSvaneti',\n    'Samegrelo-Zemo Svaneti',\n    'Samtskhe-Javakheti',\n    'Shida Kartli',\n    'Tbilisi',\n  ],\n\n  Germany: [\n    'Baden-Württemberg',\n    'Bayern',\n    'Berlin',\n    'Brandenburg',\n    'Bremen',\n    'Hamburg',\n    'Hessen',\n    'Mecklenburg-Vorpommern',\n    'Niedersachsen',\n    'Nordrhein-Westfalen',\n    'Rheinland-Pfalz',\n    'Saarland',\n    'Sachsen',\n    'Sachsen-Anhalt',\n    'Schleswig-Holstein',\n    'Thüringen',\n  ],\n\n  Ghana: [\n    'Ahafo',\n    'Ashanti',\n    'Bono',\n    'Bono East',\n    'Central',\n    'Eastern',\n    'Greater Accra',\n    'Northern',\n    'North East',\n    'Oti',\n    'Savannah',\n    'Upper East',\n    'Upper West',\n    'Volta',\n    'Western',\n    'Western North',\n  ],\n\n  Greece: [\n    'Anatolikí Makedonía kai Thráki',\n    'Attiki',\n    'Dytikí Elláda',\n    'Dytikí Makedonía',\n    'Ionía Nísia',\n    'Kentrikí Makedonía',\n    'Krítí',\n    'Notío Aigaío',\n    'Peloponnísos',\n    'Stereá Elláda',\n    'Thessalía',\n    'Voreío Aigaío',\n    'ípeiros',\n    'ágion Óros',\n  ],\n\n  Grenada: [\n    'Saint Andrew',\n    'Saint David',\n    'Saint George',\n    'Saint John',\n    'Saint Mark',\n    'Saint Patrick',\n    'Southern Grenadine Islands',\n  ],\n\n  Guatemala: [\n    'Alta Verapaz',\n    'Baja Verapaz',\n    'Chimaltenango',\n    'Chiquimula',\n    'El Progreso',\n    'Escuintla',\n    'Guatemala',\n    'Huehuetenango',\n    'Izabal',\n    'Jalapa',\n    'Jutiapa',\n    'Petén',\n    'Quetzaltenango',\n    'Quiché',\n    'Retalhuleu',\n    'Sacatepéquez',\n    'San Marcos',\n    'Santa Rosa',\n    'Sololá',\n    'Suchitepéquez',\n    'Totonicapán',\n    'Zacapa',\n  ],\n\n  Guinea: [\n    'Boké',\n    'Conakry',\n    'Faranah',\n    'Kankan',\n    'Kindia',\n    'Labé',\n    'Mamou',\n    'Nzérékoré',\n  ],\n\n  GuineaBissau: [\n    'Bafatá',\n    'Biombo',\n    'Bissau',\n    'Bolama-Bijagos',\n    'Cacheu',\n    'Gabś',\n    'Oio',\n    'Quinara',\n    'Tombali',\n  ],\n\n  Guyana: [\n    'Barima-Waini',\n    'Cuyuni-Mazaruni',\n    'Demerara-Mahaica',\n    'East Berbice-Corentyne',\n    'Essequibo Islands-West Demerara',\n    'Mahaica-Berbice',\n    'Pomeroon-Supenaam',\n    'Potaro-Siparuni',\n    'Upper Demerara-Berbice',\n    'Upper Takutu-Upper Essequibo',\n  ],\n\n  Haiti: [\n    'Artibonite',\n    'Centre',\n    'Grand Anse',\n    'Nippes',\n    'Nord',\n    'Nord-Est',\n    'Nord-Ouest',\n    'Ouest',\n    'Sud',\n    'Sud-Est',\n  ],\n\n  Honduras: [\n    'Atlántida',\n    'Choluteca',\n    'Colón',\n    'Comayagua',\n    'Copán',\n    'Cortés',\n    'El Paraíso',\n    'Francisco Morazán',\n    'Gracias a Dios',\n    'Intibucá',\n    'Islas de la Bahía',\n    'La Paz',\n    'Lempira',\n    'Ocotepeque',\n    'Olancho',\n    'Santa Bárbara',\n    'Valle',\n    'Yoro',\n  ],\n\n  Hungary: [\n    'Bács-Kiskun',\n    'Baranya',\n    'Békés',\n    'Békéscsaba',\n    'Borsod-Abauj-Zemplen',\n    'Budapest',\n    'Csongrád',\n    'Debrecen',\n    'Dunaśjváros',\n    'Eger',\n    'Érd',\n    'Fejér',\n    'Győr',\n    'Győr-Moson-Sopron',\n    'Hajdś-Bihar',\n    'Heves',\n    'Hódmez?vásárhely',\n    'Jász-Nagykun-Szolnok',\n    'Kaposvár',\n    'Kecskemét',\n    'Komárom-Esztergom',\n    'Miskolc',\n    'Nagykanizsa',\n    'Nógrád',\n    'Nyíregyháza',\n    'Pécs',\n    'Pest',\n    'Salgótarján',\n    'Somogy',\n    'Sopron',\n    'Szabolcs-á-Bereg',\n    'Szeged',\n    'Székesfehérvár',\n    'Szekszárd',\n    'Szolnok',\n    'Szombathely',\n    'Tatabánya',\n    'Tolna',\n    'Vas',\n    'Veszprém',\n    'Veszprém (City)',\n    'Zala',\n    'Zalaegerszeg',\n  ],\n\n  Iceland: [\n    'Austurland',\n    'Höfušborgarsvęši',\n    'Noršurland eystra',\n    'Noršurland vestra',\n    'Sušurland',\n    'Sušurnes',\n    'Vestfiršir',\n    'Vesturland',\n  ],\n\n  India: [\n    'Andaman and Nicobar Islands',\n    'Andhra Pradesh',\n    'Arunachal Pradesh',\n    'Assam',\n    'Bihar',\n    'Chandigarh',\n    'Chhattisgarh',\n    'Dadra and Nagar Haveli',\n    'Daman and Diu',\n    'Delhi',\n    'Goa',\n    'Gujarat',\n    'Haryana',\n    'Himachal Pradesh',\n    'Jammu and Kashmir',\n    'Jharkhand',\n    'Karnataka',\n    'Kerala',\n    'Lakshadweep',\n    'Madhya Pradesh',\n    'Maharashtra',\n    'Manipur',\n    'Meghalaya',\n    'Mizoram',\n    'Nagaland',\n    'Odisha',\n    'Puducherry',\n    'Punjab',\n    'Rajasthan',\n    'Sikkim',\n    'Tamil Nadu',\n    'Telangana',\n    'Tripura',\n    'Uttarakhand',\n    'Uttar Pradesh',\n    'West Bengal',\n  ],\n\n  Indonesia: [\n    'Aceh',\n    'Bali',\n    'Bangka Belitung',\n    'Banten',\n    'Bengkulu',\n    'Gorontalo',\n    'Jakarta Raya',\n    'Jambi',\n    'Jawa Barat',\n    'Jawa Tengah',\n    'Jawa Timur',\n    'Kalimantan Barat',\n    'Kalimantan Selatan',\n    'Kalimantan Tengah',\n    'Kalimantan Timur',\n    'Kalimantan Utara',\n    'Kepulauan Riau',\n    'Lampung',\n    'Maluku',\n    'Maluku Utara',\n    'Nusa Tenggara Barat',\n    'Nusa Tenggara Timur',\n    'Papua',\n    'Papua Barat',\n    'Riau',\n    'Sulawesi Selatan',\n    'Sulawesi Tengah',\n    'Sulawesi Tenggara',\n    'Sulawesi Utara',\n    'Sumatera Barat',\n    'Sumatera Selatan',\n    'Sumatera Utara',\n    'Yogyakarta',\n  ],\n\n  Ireland: [\n    'Carlow',\n    'Cavan',\n    'Clare',\n    'Cork',\n    'Donegal',\n    'Dublin',\n    'Galway',\n    'Kerry',\n    'Kildare',\n    'Kilkenny',\n    'Laois',\n    'Leitrim',\n    'Limerick',\n    'Longford',\n    'Louth',\n    'Mayo',\n    'Meath',\n    'Monaghan',\n    'Offaly',\n    'Roscommon',\n    'Sligo',\n    'Tipperary',\n    'Waterford',\n    'Westmeath',\n    'Wexford',\n    'Wicklow',\n  ],\n\n  Israel: [\n    'HaDarom',\n    'HaMerkaz',\n    'HaTsafon',\n    'H?efa',\n    'Tel-Aviv',\n    'Yerushalayim',\n  ],\n\n  Italy: [\n    'Abruzzo',\n    'Basilicata',\n    'Calabria',\n    'Campania',\n    'Emilia-Romagna',\n    'Friuli-Venezia Giulia',\n    'Lazio',\n    'Liguria',\n    'Lombardia',\n    'Marche',\n    'Molise',\n    'Piemonte',\n    'Puglia',\n    'Sardegna',\n    'Sicilia',\n    'Toscana',\n    'Trentino-Alto Adige',\n    'Umbria',\n    'Valle d Aosta',\n    'Veneto',\n  ],\n\n  Jamaica: [\n    'Clarendon',\n    'Hanover',\n    'Kingston',\n    'Manchester',\n    'Portland',\n    'Saint Andrew',\n    'Saint Ann',\n    'Saint Catherine',\n    'Saint Elizabeth',\n    'Saint James',\n    'Saint Mary',\n    'Saint Thomas',\n    'Trelawny',\n    'Westmoreland',\n  ],\n\n  Japan: [\n    'Aichi',\n    'Akita',\n    'Aomori',\n    'Chiba',\n    'Ehime',\n    'Fukui',\n    'Fukuoka',\n    'Fukushima',\n    'Gifu',\n    'Gunma',\n    'Hiroshima',\n    'Hokkaido',\n    'Hyogo',\n    'Ibaraki',\n    'Ishikawa',\n    'Iwate',\n    'Kagawa',\n    'Kagoshima',\n    'Kanagawa',\n    'Kochi',\n    'Kumamoto',\n    'Kyoto',\n    'Mie',\n    'Miyagi',\n    'Miyazaki',\n    'Nagano',\n    'Nagasaki',\n    'Nara',\n    'Niigata',\n    'Oita',\n    'Okayama',\n    'Okinawa',\n    'Osaka',\n    'Saga',\n    'Saitama',\n    'Shiga',\n    'Shimane',\n    'Shizuoka',\n    'Tochigi',\n    'Tokushima',\n    'Tokyo',\n    'Tottori',\n    'Toyama',\n    'Wakayama',\n    'Yamagata',\n    'Yamaguchi',\n    'Yamanashi',\n  ],\n\n  Kazakhstan: [\n    'Almaty',\n    'Aqmola',\n    'Aqtobe',\n    'Astana',\n    'Atyrau',\n    'Batys Qazaqstan',\n    'Bayqongyr',\n    'Mangghystau',\n    'Ongtustik Qazaqstan',\n    'Pavlodar',\n    'Qaraghandy',\n    'Qostanay',\n    'Qyzylorda',\n    'Shyghys Qazaqstan',\n    'Soltustik Qazaqstan',\n    'Zhambyl',\n  ],\n\n  Kenya: [\n    'Baringo',\n    'Bomet',\n    'Bungoma',\n    'Busia',\n    'Eleyo/Marakwet',\n    'Embu',\n    'Garissa',\n    'Homa Bay',\n    'Isiolo',\n    'Kajiado',\n    'Kakamega',\n    'Kericho',\n    'Kiambu',\n    'Kilifi',\n    'Kirinyaga',\n    'Kisii',\n    'Kisumu',\n    'Kitui',\n    'Kwale',\n    'Laikipia',\n    'Lamu',\n    'Machakos',\n    'Makueni',\n    'Mandera',\n    'Marsabit',\n    'Meru',\n    'Migori',\n    'Mombasa',\n    'Murang a',\n    'Nairobi City',\n    'Nakuru',\n    'Nandi',\n    'Narok',\n    'Nyamira',\n    'Nyandarua',\n    'Nyeri',\n    'Samburu',\n    'Siaya',\n    'Taita/Taveta',\n    'Tana River',\n    'Tharaka-Nithi',\n    'Trans Nzoia',\n    'Turkana',\n    'Uasin Gishu',\n    'Vihiga',\n    'Wajir',\n    'West Pokot',\n  ],\n\n  Kiribati: [\n    'Abaiang',\n    'Abemama',\n    'Aranuka',\n    'Arorae',\n    'Banaba',\n    'Beru',\n    'Butaritari',\n    'Central Gilberts',\n    'Gilbert Islands',\n    'Kanton',\n    'Kiritimati',\n    'Kuria',\n    'Line Islands',\n    'Maiana',\n    'Makin',\n    'Marakei',\n    'Nikunau',\n    'Nonouti',\n    'Northern Gilberts',\n    'Onotoa',\n    'Phoenix Islands',\n    'Southern Gilberts',\n    'Tabiteuea',\n    'Tabuaeran',\n    'Tamana',\n    'Tarawa',\n    'Teraina',\n  ],\n\n  Kyrgyzstan: [\n    'Batken Oblasty',\n    'Bishkek Shaary',\n    'Chuy Oblasty (Bishkek)',\n    'Jalal-Abad Oblasty',\n    'Naryn Oblasty',\n    'Osh Oblasty',\n    'Talas Oblasty',\n    'Ysyk-Kol Oblasty (Karakol)',\n  ],\n\n  Lao: [\n    'Attapu',\n    'Bokéo',\n    'Bolikhamxai',\n    'Champasak',\n    'Houaphan',\n    'Khammouan',\n    'Louang Namtha',\n    'Louangphabang',\n    'Oudōmxai',\n    'Phōngsali',\n    'Salavan',\n    'Savannakhét',\n    'Vientiane',\n    'Xaignabouli',\n    'Xékong',\n    'Xaisomboun',\n    'Xiangkhouang',\n  ],\n\n  Lebanon: [\n    'Aakkār',\n    'Baalbelk-Hermel',\n    'Béqaa',\n    'Beyrouth',\n    'Liban-Nord',\n    'Liban-Sud',\n    'Mont-Liban',\n    'Nabatīyé',\n  ],\n\n  Lesotho: [\n    'Berea',\n    'Butha-Buthe',\n    'Leribe',\n    'Mafeteng',\n    'Maseru',\n    'Mohales Hoek',\n    'Mokhotlong',\n    'Qacha s Nek',\n    'Quthing',\n    'Thaba-Tseka',\n  ],\n\n  Liberia: [\n    'Bomi',\n    'Bong',\n    'Gbarpolu',\n    'Grand Bassa',\n    'Grand Cape Mount',\n    'Grand Gedeh',\n    'Grand Kru',\n    'Lofa',\n    'Margibi',\n    'Maryland',\n    'Montserrado',\n    'Nimba',\n    'River Cess',\n    'River Geee',\n    'Sinoe',\n  ],\n\n  Luxembourg: [\n    'Capellen',\n    'Clevaux',\n    'Diekirch',\n    'Echternach',\n    'Esch-sur-Alzette',\n    'Grevenmacher',\n    'Luxembourg',\n    'Mersch',\n    'Redange',\n    'Remich',\n    'Vianden',\n    'Wiltz',\n  ],\n\n  Madagascar: [\n    'Antananarivo',\n    'Antsiranana',\n    'Fianarantsoa',\n    'Mahajanga',\n    'Toamasina',\n    'Toliara',\n  ],\n\n  Malawi: [\n    'Balaka',\n    'Blantyre',\n    'Chikwawa',\n    'Chiradzulu',\n    'Chitipa',\n    'Dedza',\n    'Dowa',\n    'Karonga',\n    'Kasungu',\n    'Likoma',\n    'Lilongwe',\n    'Machinga',\n    'Mangochi',\n    'Mchinji',\n    'Mulanje',\n    'Mwanza',\n    'Mzimba',\n    'Nkhata Bay',\n    'Nkhotakota',\n    'Nsanje',\n    'Ntcheu',\n    'Ntchisi',\n    'Phalombe',\n    'Rumphi',\n    'Salima',\n    'Thyolo',\n    'Zomba',\n  ],\n\n  Malaysia: [\n    'Johor',\n    'Kedah',\n    'Kelantan',\n    'Melaka',\n    'Negeri Sembilan',\n    'Pahang',\n    'Perak',\n    'Perlis',\n    'Pulau Pinang',\n    'Sabah',\n    'Sarawak',\n    'Selangor',\n    'Terengganu',\n    'Wilayah Persekutuan (Kuala Lumpur)',\n    'Wilayah Persekutuan (Labuan)',\n    'Wilayah Persekutuan (Putrajaya)',\n  ],\n\n  Maldives: [\n    'Alifu Alifu',\n    'Alifu Dhaalu',\n    'Baa',\n    'Dhaalu',\n    'Faafu',\n    'Gaafu Alifu',\n    'Gaafu Dhaalu',\n    'Gnaviyani',\n    'Haa Alifu',\n    'Haa Dhaalu',\n    'Kaafu',\n    'Laamu',\n    'Lhaviyani',\n    'Malé',\n    'Meemu',\n    'Noonu',\n    'Raa',\n    'Seenu',\n    'Shaviyani',\n    'Thaa',\n    'Vaavu',\n  ],\n\n  Mali: [\n    'Bamako',\n    'Gao',\n    'Kayes',\n    'Kidal',\n    'Koulikoro',\n    'Mopti',\n    'Segou',\n    'Sikasso',\n    'Tombouctou',\n    'Taoudénit',\n    'Ménaka',\n  ],\n\n  Marshall: [\n    'Ailinglaplap',\n    'Ailuk',\n    'Arno',\n    'Aur',\n    'Bikini and Kili',\n    'Ebon',\n    'Jabat',\n    'Jaluit',\n    'Kwajalein',\n    'Lae',\n    'Lib',\n    'Likiep',\n    'Majuro',\n    'Maloelap',\n    'Mejit',\n    'Namdrik',\n    'Namu',\n    'Rongelap',\n    'Ujae',\n    'Utrik',\n    'Wotho',\n    'Wotje',\n  ],\n\n  Mauritania: [\n    'Adrar',\n    'Assaba',\n    'Brakna',\n    'Dakhlet Nouadhibou',\n    'Gorgol',\n    'Guidimaka',\n    'Hodh Ech Chargui',\n    'Hodh El Gharbi',\n    'Inchiri',\n    'Nouakchott Nord',\n    'Nouakchott Ouest',\n    'Nouakchott Sud',\n    'Tagant',\n    'Tiris Zemmour',\n    'Trarza',\n  ],\n\n  Mauritius: [\n    'Agalega Islands',\n    'Beau Bassin-Rose Hill',\n    'Black River',\n    'Cargados Carajos Shoals',\n    'Curepipe',\n    'Flacq',\n    'Grand Port',\n    'Moka',\n    'Pamplemousses',\n    'Plaines Wilhems',\n    'Port Louis (City)',\n    'Port Louis',\n    'Riviere du Rempart',\n    'Rodrigues Island',\n    'Savanne',\n    'Vacoas-Phoenix',\n  ],\n\n  Mexico: [\n    'Aguascalientes',\n    'Baja California',\n    'Baja California Sur',\n    'Campeche',\n    'Ciudad de México',\n    'Chiapas',\n    'Chihuahua',\n    'Coahuila de Zaragoza',\n    'Colima',\n    'Durango',\n    'Estado de México',\n    'Guanajuato',\n    'Guerrero',\n    'Hidalgo',\n    'Jalisco',\n    'Michoacán de Ocampo',\n    'Morelos',\n    'Nayarit',\n    'Nuevo León',\n    'Oaxaca',\n    'Puebla',\n    'Querétaro de Arteaga',\n    'Quintana Roo',\n    'San Luis Potosí',\n    'Sinaloa',\n    'Sonora',\n    'Tabasco',\n    'Tamaulipas',\n    'Tlaxcala',\n    'Veracruz',\n    'Yucatán',\n    'Zacatecas',\n  ],\n\n  Micronesia: [\n    'Chuuk (Truk)',\n    'Kosrae',\n    'Pohnpei',\n    'Yap',\n  ],\n\n  Monaco: [\n    'Colle',\n    'Condamine',\n    'Fontvieille',\n    'Gare',\n    'Jardin Exotique',\n    'Larvotto',\n    'Malbousquet',\n    'Monaco-Ville',\n    'Moneghetti',\n    'Monte-Carlo',\n    'Moulins',\n    'Port-Hercule',\n    'Saint-Roman',\n    'Sainte-Dévote',\n    'Source',\n    'Spélugues',\n    'Vallon de la Rousse',\n  ],\n\n  Mongolia: [\n    'Arhangay',\n    'Bayan-Olgiy',\n    'Bayanhongor',\n    'Bulgan',\n    'Darhan',\n    'Dornod',\n    'Dornogovi',\n    'Dundgovi',\n    'Dzavhan',\n    'Govi-Altay',\n    'Govi-Sumber',\n    'Hovd',\n    'Hovsgol',\n    'Omnogovi',\n    'Ovorhangay',\n    'Selenge',\n    'Suhbaatar',\n    'Tov',\n    'Ulaanbaatar',\n    'Uvs',\n  ],\n\n  Morocco: [\n    'Tanger-Tétouan-Al Hoceļma',\n    'L Oriental',\n    'Fés-Meknés',\n    'Rabat-Salé-Kénitra',\n    'Béni Mellal-Khénifra',\n    'Casablanca-Settat',\n    'Marrakech-Safi',\n    'Drāa-Tafilalet',\n    'Souss-Massa',\n    'Guelmim-Oued Noun',\n    'Laāyoune-Sakia El Hamra',\n    'Dakhla-Oued Ed-Dahab',\n  ],\n\n  Mozambique: [\n    'Cabo Delgado',\n    'Gaza',\n    'Inhambane',\n    'Manica',\n    'Maputo',\n    'Maputo (City)',\n    'Nampula',\n    'Niassa',\n    'Sofala',\n    'Tete',\n    'Zambezia',\n  ],\n\n  Myanmar: [\n    'Ayeyarwady',\n    'Bago',\n    'Chin',\n    'Kachin',\n    'Kayah',\n    'Kayin',\n    'Magway',\n    'Mandalay',\n    'Mon',\n    'Nay Pyi Taw',\n    'Rakhine',\n    'Sagaing',\n    'Shan',\n    'Tanintharyi',\n    'Yangon',\n  ],\n\n  Namibia: [\n    'Erongo',\n    'Hardap',\n    'Kavango East',\n    'Kavango West',\n    'Karas',\n    'Khomas',\n    'Kunene',\n    'Ohangwena',\n    'Omaheke',\n    'Omusati',\n    'Oshana',\n    'Oshikoto',\n    'Otjozondjupa',\n    'Zambezi',\n  ],\n\n  Nauru: [\n    'Aiwo',\n    'Anabar',\n    'Anetan',\n    'Anibare',\n    'Baiti',\n    'Boe',\n    'Buada',\n    'Denigomodu',\n    'Ewa',\n    'Ijuw',\n    'Meneng',\n    'Nibok',\n    'Uaboe',\n    'Yaren',\n  ],\n\n  Nepal: [\n    'Bagmati',\n    'Bheri',\n    'Dhawalagiri',\n    'Gandaki',\n    'Janakpur',\n    'Karnali',\n    'Kosi',\n    'Lumbini',\n    'Mahakali',\n    'Mechi',\n    'Narayani',\n    'Rapti',\n    'Sagarmatha',\n    'Seti',\n  ],\n\n  Netherlands: [\n    'Drenthe',\n    'Flevoland',\n    'Friesland',\n    'Gelderland',\n    'Groningen',\n    'Limburg',\n    'Noord-Brabant',\n    'Noord-Holland',\n    'Overijssel',\n    'Utrecht',\n    'Zeeland',\n    'Zuid-Holland',\n  ],\n\n  NewZealand: [\n    'Auckland',\n    'Bay of Plenty',\n    'Canterbury',\n    'Gisborne',\n    'Hawkes Bay',\n    'Marlborough',\n    'Manawatu-Wanganui',\n    'Northland',\n    'Nelson',\n    'Otago',\n    'Southland',\n    'Taranaki',\n    'Tasman',\n    'Waikato',\n    'Wellington',\n    'West Coast',\n    'Chatham Islands Territory',\n  ],\n\n  Nicaragua: [\n    'Boaco',\n    'Carazo',\n    'Chinandega',\n    'Chontales',\n    'Estelí',\n    'Granada',\n    'Jinotega',\n    'León',\n    'Madriz',\n    'Managua',\n    'Masaya',\n    'Matagalpa',\n    'Nueva Segovia',\n    'Río San Juan',\n    'Rivas',\n    'Atlántico Norte',\n    'Atlántico Sur',\n  ],\n\n  Niger: [\n    'Agadez',\n    'Diffa',\n    'Dosso',\n    'Maradi',\n    'Niamey',\n    'Tahoua',\n    'Tillabéri',\n    'Zinder',\n  ],\n\n  Nigeria: [\n    'Abia',\n    'Abuja Federal Capital Territory',\n    'Adamawa',\n    'Akwa Ibom',\n    'Anambra',\n    'Bauchi',\n    'Bayelsa',\n    'Benue',\n    'Borno',\n    'Cross River',\n    'Delta',\n    'Ebonyi',\n    'Edo',\n    'Ekiti',\n    'Enugu',\n    'Gombe',\n    'Imo',\n    'Jigawa',\n    'Kaduna',\n    'Kano',\n    'Katsina',\n    'Kebbi',\n    'Kogi',\n    'Kwara',\n    'Lagos',\n    'Nassarawa',\n    'Niger',\n    'Ogun',\n    'Ondo',\n    'Osun',\n    'Oyo',\n    'Plateau',\n    'Rivers',\n    'Sokoto',\n    'Taraba',\n    'Yobe',\n    'Zamfara',\n  ],\n\n  Niue: [\n    'Niue',\n  ],\n\n  Norway: [\n    'Akershus',\n    'Aust-Agder',\n    'Buskerud',\n    'Finnmark',\n    'Hedmark',\n    'Hordaland',\n    'Mųre og Romsdal',\n    'Nordland',\n    'Nord-Trųndelag',\n    'Oppland',\n    'Oslo',\n    'Rogaland',\n    'Sogn og Fjordane',\n    'Sųr-Trųndelag',\n    'Telemark',\n    'Troms',\n    'Vest-Agder',\n    'Vestfold',\n    'Ųstfold',\n    'Jan Mayen',\n    'Svalbard',\n  ],\n\n  Oman: [\n    'Ad Dakhiliyah',\n    'Al Buraymi',\n    'Al Wusta',\n    'Az Zahirah',\n    'Janub al Batinah',\n    'Janub ash Sharqiyah',\n    'Masqat',\n    'Musandam',\n    'Shamal al Batinah',\n    'Shamal ash Sharqiyah',\n    'Zufar',\n  ],\n\n  Palau: [\n    'Aimeliik',\n    'Airai',\n    'Angaur',\n    'Hatobohei',\n    'Kayangel',\n    'Koror',\n    'Melekeok',\n    'Ngaraard',\n    'Ngarchelong',\n    'Ngardmau',\n    'Ngatpang',\n    'Ngchesar',\n    'Ngeremlengui',\n    'Ngiwal',\n    'Peleliu',\n    'Sonsoral',\n  ],\n\n  Panama: [\n    'Bocas del Toro',\n    'Chiriquí',\n    'Coclé',\n    'Colón',\n    'Darién',\n    'Emberá',\n    'Herrera',\n    'Kuna Yala',\n    'Los Santos',\n    'Ngäbe-Buglé',\n    'Panamá',\n    'Panamá Oeste',\n    'Veraguas',\n  ],\n\n  Papua: [\n    'Bougainville',\n    'Central',\n    'Chimbu',\n    'East New Britain',\n    'East Sepik',\n    'Eastern Highlands',\n    'Enga',\n    'Gulf',\n    'Hela',\n    'Jiwaka',\n    'Madang',\n    'Manus',\n    'Milne Bay',\n    'Morobe',\n    'Port Moresby',\n    'New Ireland',\n    'Northern',\n    'Southern Highlands',\n    'West New Britain',\n    'West Sepik',\n    'Western',\n    'Western Highlands',\n  ],\n\n  Paraguay: [\n    'Alto Paraguay',\n    'Alto Parana',\n    'Amambay',\n    'Asuncion',\n    'Caaguazu',\n    'Caazapa',\n    'Canindeyu',\n    'Central',\n    'Concepcion',\n    'Cordillera',\n    'Boqueron',\n    'Guaira',\n    'Itapua',\n    'Misiones',\n    'Neembucu',\n    'Paraguari',\n    'Presidente Hayes',\n    'San Pedro',\n  ],\n\n  Peru: [\n    'Amazonas',\n    'Ancash',\n    'Apurímac',\n    'Arequipa',\n    'Ayacucho',\n    'Cajamarca',\n    'Callao',\n    'Cuzco',\n    'Huancavelica',\n    'Huánuco',\n    'Ica',\n    'Junín',\n    'La Libertad',\n    'Lambayeque',\n    'Lima',\n    'Loreto',\n    'Madre de Dios',\n    'Moquegua',\n    'Pasco',\n    'Piura',\n    'Puno',\n    'San Martin',\n    'Tacna',\n    'Tumbes',\n    'Ucayali',\n  ],\n\n  Philippines: [\n    'Abra',\n    'Agusan del Norte',\n    'Agusan del Sur',\n    'Aklan',\n    'Albay',\n    'Antique',\n    'Apayao',\n    'Aurora',\n    'Basilan',\n    'Bataan',\n    'Batanes',\n    'Batangas',\n    'Benguet',\n    'Biliran',\n    'Bohol',\n    'Bukidnon',\n    'Bulacan',\n    'Cagayan',\n    'Camarines Norte',\n    'Camarines Sur',\n    'Camiguin',\n    'Capiz',\n    'Catanduanes',\n    'Cavite',\n    'Cebu',\n    'Compostela',\n    'Cotabato',\n    'Davao del Norte',\n    'Davao del Sur',\n    'Davao Occidental',\n    'Davao Oriental',\n    'Dinagat Islands',\n    'Eastern Samar',\n    'Guimaras',\n    'Ifugao',\n    'Ilocos Norte',\n    'Ilocos Sur',\n    'Iloilo',\n    'Isabela',\n    'Kalinga',\n    'La Union',\n    'Laguna',\n    'Lanao del Norte',\n    'Lanao del Sur',\n    'Leyte',\n    'Maguindanao',\n    'Masbate',\n    'Metro Manila',\n    'Mindoro Occidental',\n    'Mindoro Oriental',\n    'Misamis Occidental',\n    'Misamis Oriental',\n    'Mountain Province',\n    'Negros Occidental',\n    'Negros Oriental',\n    'Northern Samar',\n    'Nueva Ecija',\n    'Nueva Vizcaya',\n    'Palawan',\n    'Pampanga',\n    'Pangasinan',\n    'Quezon',\n    'Quirino',\n    'Rizal',\n    'Romblon',\n    'Samar',\n    'Sarangani',\n    'Siquijor',\n    'Sorsogon',\n    'Southern Leyte',\n    'Sultan Kudarat',\n    'Sulu',\n    'Surigao del Norte',\n    'Surigao del Sur',\n    'Tarlac',\n    'Tawi-Tawi',\n    'Zambales',\n    'Zamboanga del Norte',\n    'Zamboanga del Sur',\n    'Zamboanga Sibugay',\n  ],\n\n  Portugal: [\n    'Aēores',\n    'Aveiro',\n    'Beja',\n    'Braga',\n    'Braganēa',\n    'Castelo Branco',\n    'Coimbra',\n    'Évora',\n    'Faro',\n    'Guarda',\n    'Leiria',\n    'Lisboa',\n    'Madeira',\n    'Portalegre',\n    'Porto',\n    'Santarém',\n    'Setśbal',\n    'Viana do Castelo',\n    'Vila Real',\n    'Viseu',\n  ],\n\n  RepublicKorea: [\n    'Chungch ongbuk-do',\n    'Chungch ongnam-do',\n    'Cheju-do',\n    'Chollabuk-do',\n    'Chollanam-do',\n    'Inchon-Kwangyokhi',\n    'Kang-won-do',\n    'Kwangju-Kwangyokshi',\n    'Kyonggi-do',\n    'Kyongsangbuk-do',\n    'Kyongsangnam-do',\n    'Pusan-Kwangyokshi',\n    'Seoul-Tukpyolshi',\n    'Sejong',\n    'Taegu-Kwangyokshi',\n    'Taejon-Kwangyokshi',\n    'Ulsan-Kwangyokshi',\n  ],\n\n  Romania: [\n    'Alba',\n    'Arad',\n    'Arges',\n    'Bacau',\n    'Bihor',\n    'Bistrita-Nasaud',\n    'Botosani',\n    'Braila',\n    'Brasov',\n    'Bucuresti',\n    'Buzau',\n    'Calarasi',\n    'Caras-Severin',\n    'Cluj',\n    'Constanta',\n    'Covasna',\n    'Dambovita',\n    'Dolj',\n    'Galati',\n    'Giurgiu',\n    'Gorj',\n    'Harghita',\n    'Hunedoara',\n    'Ialomita',\n    'Iasi',\n    'Maramures',\n    'Mehedinti',\n    'Mures',\n    'Neamt',\n    'Olt',\n    'Prahova',\n    'Salaj',\n    'Satu Mare',\n    'Sibiu',\n    'Suceava',\n    'Teleorman',\n    'Timis',\n    'Tulcea',\n    'Valcea',\n    'Vaslui',\n    'Vrancea',\n  ],\n\n  Russian: [\n    'Republic of Adygea',\n    'Republic of Altai (Gorno-Altaysk)',\n    'Altai Krai',\n    'Amur Oblast',\n    'Arkhangelsk Oblast',\n    'Astrakhan Oblast',\n    'Republic of Bashkortostan',\n    'Belgorod Oblast',\n    'Bryansk Oblast',\n    'Republic of Buryatia',\n    'Chechen Republic',\n    'Chelyabinsk Oblast',\n    'Chukotka Autonomous Okrug',\n    'Chuvash Republic',\n    'Republic of Dagestan',\n    'Republic of Ingushetia',\n    'Irkutsk Oblast',\n    'Ivanovo Oblast',\n    'Jewish Autonomous Oblast',\n    'Kabardino-Balkar Republic',\n    'Kaliningrad Oblast',\n    'Republic of Kalmykia',\n    'Kaluga Oblast',\n    'Kamchatka Krai',\n    'Karachay-Cherkess Republic',\n    'Republic of Karelia',\n    'Khabarovsk Krai',\n    'Republic of Khakassia',\n    'Khanty-Mansi Autonomous Okrug - Yugra',\n    'Kemerovo Oblast',\n    'Kirov Oblast',\n    'Komi Republic',\n    'Kostroma Oblast',\n    'Krasnodar Krai',\n    'Krasnoyarsk Krai',\n    'Kurgan Oblast',\n    'Kursk Oblast',\n    'Leningrad Oblast',\n    'Lipetsk Oblast',\n    'Magadan Oblast',\n    'Mari El Republic',\n    'Republic of Mordovia',\n    'Moscow Oblast',\n    'Moscow',\n    'Murmansk Oblast',\n    'Nenets Autonomous Okrug',\n    'Nizhny Novgorod Oblast',\n    'Novgorod Oblast',\n    'Novosibirsk Oblast',\n    'Omsk Oblast',\n    'Orenburg Oblast',\n    'Oryol Oblast',\n    'Penza Oblast',\n    'Perm Krai',\n    'Primorsky Krai',\n    'Pskov Oblast',\n    'Rostov Oblast',\n    'Ryazan Oblast',\n    'Saint Petersburg',\n    'Sakha (Yakutia) Republic',\n    'Sakhalin Oblast',\n    'Samara Oblast',\n    'Saratov Oblast',\n    'Republic of North Ossetia-Alania',\n    'Smolensk Oblast',\n    'Stavropol Krai',\n    'Sverdlovsk Oblast',\n    'Tambov Oblast',\n    'Republic of Tatarstan',\n    'Tomsk Oblast',\n    'Tuva Republic',\n    'Tula Oblast',\n    'Tver Oblast',\n    'Tyumen Oblast',\n    'Udmurt Republic',\n    'Ulyanovsk Oblast',\n    'Vladimir Oblast',\n    'Volgograd Oblast',\n    'Vologda Oblast',\n    'Voronezh Oblast',\n    'Yamalo-Nenets Autonomous Okrug',\n    'Yaroslavl Oblast',\n    'Zabaykalsky Krai',\n  ],\n\n  Rwanda: [\n    'Kigali',\n    'Eastern',\n    'Northern',\n    'Western',\n    'Southern',\n  ],\n\n  SaintKitts: [\n    'Saint Kitts',\n    'Nevis',\n  ],\n\n  SaintLucia: [\n    'Anse-la-Raye',\n    'Canaries',\n    'Castries',\n    'Choiseul',\n    'Dennery',\n    'Gros Islet',\n    'Laborie',\n    'Micoud',\n    'Soufriere',\n    'Vieux Fort',\n  ],\n\n  SaintVincent: [\n    'Charlotte',\n    'Grenadines',\n    'Saint Andrew',\n    'Saint David',\n    'Saint George',\n    'Saint Patrick',\n  ],\n\n  Samoa: [\n    'Aana',\n    'Aiga-i-le-Tai',\n    'Atua',\n    'Faasaleleaga',\n    'Gagaemauga',\n    'Gagaifomauga',\n    'Palauli',\n    'Satupaitea',\n    'Tuamasaga',\n    'Vaa-o-Fonoti',\n    'Vaisigano',\n  ],\n\n  SanMarino: [\n    'Acquaviva',\n    'Borgo Maggiore',\n    'Chiesanuova',\n    'Domagnano',\n    'Faetano',\n    'Fiorentino',\n    'Montegiardino',\n    'San Marino',\n    'Serravalle',\n  ],\n\n  SaoTome: [\n    'Principe',\n    'Sao Tome',\n  ],\n\n  Saudi: [\n    'Asir',\n    'Al Bahah',\n    'Al Hudud ash Shamaliyah',\n    'Al Jawf',\n    'Al Madinah al Munawwarah',\n    'Al Qasim',\n    'Ar Riyad',\n    'Ash Sharqiyah',\n    'Hail',\n    'Jazan',\n    'Makkah al Mukarramah',\n    'Najran',\n    'Tabuk',\n  ],\n\n  Senegal: [\n    'Dakar',\n    'Diourbel',\n    'Fatick',\n    'Kaffrine',\n    'Kaolack',\n    'Kedougou',\n    'Kolda',\n    'Louga',\n    'Matam',\n    'Saint-Louis',\n    'Sedhiou',\n    'Tambacounda',\n    'Thies',\n    'Ziguinchor',\n  ],\n\n  Seychelles: [\n    'Anse aux Pins',\n    'Anse Boileau',\n    'Anse Etoile',\n    'Anse Royale',\n    'Anu Cap',\n    'Baie Lazare',\n    'Baie Sainte Anne',\n    'Beau Vallon',\n    'Bel Air',\n    'Bel Ombre',\n    'Cascade',\n    'Glacis',\n    'Grand Anse Mahe',\n    'Grand Anse Praslin',\n    'La Digue',\n    'La Riviere Anglaise',\n    'Les Mamelles',\n    'Mont Buxton',\n    'Mont Fleuri',\n    'Plaisance',\n    'Pointe La Rue',\n    'Port Glaud',\n    'Roche Caiman',\n    'Saint Louis',\n    'Takamaka',\n  ],\n\n  Sierra: [\n    'Eastern',\n    'Northern',\n    'Southern',\n    'Western',\n  ],\n\n  Singapore: [\n    'Central Singapore',\n    'North East',\n    'North West',\n    'South East',\n    'South West',\n  ],\n\n  Slovakia: [\n    'Banskobystricky',\n    'Bratislavsky',\n    'Kosicky',\n    'Nitriansky',\n    'Presovsky',\n    'Trenciansky',\n    'Trnavsky',\n    'Zilinsky',\n  ],\n\n  Slovenia: [\n    'Ajdovscina',\n    'Apace',\n    'Beltinci',\n    'Benedikt',\n    'Bistrica ob Sotli',\n    'Bled',\n    'Bloke',\n    'Bohinj',\n    'Borovnica',\n    'Bovec',\n    'Braslovce',\n    'Brda',\n    'Brezice',\n    'Brezovica',\n    'Cankova',\n    'Celje',\n    'Cerklje na Gorenjskem',\n    'Cerknica',\n    'Cerkno',\n    'Cerkvenjak',\n    'Cirkulane',\n    'Crensovci',\n    'Crna na Koroskem',\n    'Crnomelj',\n    'Destrnik',\n    'Divaca',\n    'Dobje',\n    'Dobrepolje',\n    'Dobrna',\n    'Dobrova-Polhov Gradec',\n    'Dobrovnik',\n    'Dol pri Ljubljani',\n    'Dolenjske Toplice',\n    'Domzale',\n    'Dornava',\n    'Dravograd',\n    'Duplek',\n    'Gorenja Vas-Poljane',\n    'Gorisnica',\n    'Gorje',\n    'Gornja Radgona',\n    'Gornji Grad',\n    'Gornji Petrovci',\n    'Grad',\n    'Grosuplje',\n    'Hajdina',\n    'Hoce-Slivnica',\n    'Hodos',\n    'Horjul',\n    'Hrastnik',\n    'Hrpelje-Kozina',\n    'Idrija',\n    'Ig',\n    'Ilirska Bistrica',\n    'Ivancna Gorica',\n    'Izola',\n    'Jesenice',\n    'Jursinci',\n    'Kamnik',\n    'Kanal',\n    'Kidricevo',\n    'Kobarid',\n    'Kobilje',\n    'Kocevje',\n    'Komen',\n    'Komenda',\n    'Koper',\n    'Kodanjevica na Krki',\n    'Kostel',\n    'Kozje',\n    'Kranj',\n    'Kranjska Gora',\n    'Krizevci',\n    'Krsko',\n    'Kungota',\n    'Kuzma',\n    'Lasko',\n    'Lenart',\n    'Lendava',\n    'Litija',\n    'Ljubljana',\n    'Ljubno',\n    'Ljutomer',\n    'Log-Dragomer',\n    'Logatec',\n    'Loska Dolina',\n    'Loski Potok',\n    'Lovrenc na Pohorju',\n    'Lukovica',\n    'Luce',\n    'Majsperk',\n    'Makole',\n    'Maribor',\n    'Markovci',\n    'Medvode',\n    'Menges',\n    'Metlika',\n    'Mezica',\n    'Miklavz na Dravskem Polju',\n    'Miren-Kostanjevica',\n    'Mirna',\n    'Mirna Pec',\n    'Mislinja',\n    'Mokronog-Trebelno',\n    'Moravce',\n    'Moravske Toplice',\n    'Mozirje',\n    'Murska Sobota',\n    'Naklo',\n    'Nazarje',\n    'Nova Gorica',\n    'Novo Mesto',\n    'Odranci',\n    'Ormoz',\n    'Osilnica',\n    'Pesnica',\n    'Piran',\n    'Pivka',\n    'Podcetrtek',\n    'Podlehnik',\n    'Podvelka',\n    'Poljcane',\n    'Postojna',\n    'Prebold',\n    'Preddvor',\n    'Prevalje',\n    'Ptuj',\n    'Race-Fram',\n    'Radece',\n    'Radenci',\n    'Radlje ob Dravi',\n    'Radovljica',\n    'Ravne na Koroskem',\n    'Razkrizje',\n    'Recica ob Savinji',\n    'Rence-Vogrsko',\n    'Ribnica',\n    'Ribnica na Poboriu',\n    'Rogaska Slatina',\n    'Rogasovci',\n    'Rogatec',\n    'Ruse',\n    'Salovci',\n    'Selnica ob Dravi',\n    'Semic',\n    'Sempeter-Vrtojba',\n    'Sencur',\n    'Sentilj',\n    'Sentjernej',\n    'Sentjur',\n    'Sentrupert',\n    'Sevnica',\n    'Sezana',\n    'Skocjan',\n    'Skofja Loka',\n    'Skofljica',\n    'Slovenj Gradec',\n    'Slovenska Bistrica',\n    'Slovenske Konjice',\n    'Smarje pri elsah',\n    'Smarjeske Toplice',\n    'Smartno ob Paki',\n    'Smartno pri Litiji',\n    'Sodrazica',\n    'Solcava',\n    'Sostanj',\n    'Sredisce ob Dravi',\n    'Starse',\n    'Store',\n    'Straza',\n    'Sveta Ana',\n    'Sveta Trojica v Slovenskih Goricah',\n    'Sveta Andraz v Slovenskih Goricah',\n    'Sveti Jurij',\n    'Sveti Jurij v Slovenskih Goricah',\n    'Sveti Tomaz',\n    'Tabor',\n    'Tisina',\n    'Tolmin',\n    'Trbovlje',\n    'Trebnje',\n    'Trnovska Vas',\n    'Trzin',\n    'Trzic',\n    'Turnisce',\n    'Velenje',\n    'Velika Polana',\n    'Velike Lasce',\n    'Verzej',\n    'Videm',\n    'Vipava',\n    'Vitanje',\n    'Vodice',\n    'Vojnik',\n    'Vransko',\n    'Vrhnika',\n    'Vuzenica',\n    'Zagorje ob Savi',\n    'Zavrc',\n    'Zrece',\n    'Zalec',\n    'Zelezniki',\n    'Zetale',\n    'Ziri',\n    'Zirovnica',\n    'Zuzemberk',\n  ],\n\n  Solomon: [\n    'Central',\n    'Choiseul',\n    'Guadalcanal',\n    'Honiara',\n    'Isabel',\n    'Makira-Ulawa',\n    'Malaita',\n    'Rennell and Bellona',\n    'Temotu',\n    'Western',\n  ],\n\n  SouthAfrica: [\n    'Eastern Cape',\n    'Free State',\n    'Gauteng',\n    'KwaZulu-Natal',\n    'Limpopo',\n    'Mpumalanga',\n    'Northern Cape',\n    'North West',\n    'Western Cape',\n  ],\n\n  SouthSudan: [\n    'Central Equatoria',\n    'Eastern Equatoria',\n    'Jonglei',\n    'Lakes',\n    'Northern Bahr el Ghazal',\n    'Unity',\n    'Upper Nile',\n    'Warrap',\n    'Western Bahr el Ghazal',\n    'Western Equatoria',\n  ],\n\n  Spain: [\n    'Albacete',\n    'Alicante',\n    'Almería',\n    'Araba/álava',\n    'Asturias',\n    'ávila',\n    'Badajoz',\n    'Barcelona',\n    'Bizkaia',\n    'Burgos',\n    'Cáceres',\n    'Cádiz',\n    'Cantabria',\n    'Castellón/Castelló',\n    'Ceuta',\n    'Ciudad Real',\n    'Córdoba',\n    'A Coruńa',\n    'Cuenca',\n    'Gipuzkoa',\n    'Girona',\n    'Granada',\n    'Guadalajara',\n    'Huelva',\n    'Huesca',\n    'Illes Balears',\n    'Jaén',\n    'León',\n    'Lleida',\n    'Lugo',\n    'Madrid',\n    'Málaga',\n    'Melilla',\n    'Murcia',\n    'Navarra/Nafarroa',\n    'Ourense',\n    'Palencia',\n    'Las Palmas',\n    'Pontevedra',\n    'La Rioja',\n    'Salamanca',\n    'Santa Cruz de Tenerife',\n    'Segovia',\n    'Sevilla',\n    'Soria',\n    'Tarragona',\n    'Teruel',\n    'Toledo',\n    'Valencia/Valéncia',\n    'Valladolid',\n    'Zamora',\n    'Zaragoza',\n  ],\n\n  Sri: [\n    'Basnahira',\n    'Dakunu',\n    'Madhyama',\n    'Naegenahira',\n    'Sabaragamuwa',\n    'Uturu',\n    'Uturumaeda',\n    'Vayamba',\n    'Uva',\n  ],\n\n  Sudan: [\n    'Al Bahr al Ahmar',\n    'Al Jazirah',\n    'Al Khartum',\n    'Al Qadarif',\n    'An Nil al Abyad',\n    'An Nil al Azraq',\n    'Ash Shamaliyah',\n    'Gharb Darfur',\n    'Gharb Kurdufan',\n    'Janub Darfur',\n    'Janub Kurdufan',\n    'Kassala',\n    'Nahr an Nil',\n    'Shamal Darfur',\n    'Sharq Darfur',\n    'Shiamal Kurdufan',\n    'Sinnar',\n    'Wasat Darfur Zalinjay',\n  ],\n\n  Suriname: [\n    'Brokopondo',\n    'Commewijne',\n    'Coronie',\n    'Marowijne',\n    'Nickerie',\n    'Para',\n    'Paramaribo',\n    'Saramacca',\n    'Sipaliwini',\n    'Wanica',\n  ],\n\n  Sweden: [\n    'Blekinge',\n    'Dalarna',\n    'Gävleborg',\n    'Gotland',\n    'Halland',\n    'Jämtland',\n    'Jönköping',\n    'Kalmar',\n    'Kronoberg',\n    'Norrbotten',\n    'Örebro',\n    'Östergötland',\n    'Skåne',\n    'Södermanland',\n    'Stockholm',\n    'Uppsala',\n    'Värmland',\n    'Västerbotten',\n    'Västernorrland',\n    'Västmanland',\n    'Västra Götaland',\n  ],\n\n  Switzerland: [\n    'Aargau',\n    'Appenzell Ausserrhoden',\n    'Appenzell Innerhoden',\n    'Basel-Landschaft',\n    'Basel-Stadt',\n    'Bern',\n    'Fribourg',\n    'Genéve',\n    'Glarus',\n    'Graubünden',\n    'Jura',\n    'Luzern',\n    'Neuchātel',\n    'Nidwalden',\n    'Obwalden',\n    'Sankt Gallen',\n    'Schaffhausen',\n    'Schwyz',\n    'Solothurn',\n    'Thurgau',\n    'Ticino',\n    'Uri',\n    'Valais',\n    'Vaud',\n    'Zug',\n    'Zürich',\n  ],\n\n  Syrian: [\n    'Al Hasakah',\n    'Al Ladhiqiyah',\n    'Al Qunaytirah',\n    'Ar Raqqah',\n    'As Suwayda',\n    'Dar a',\n    'Dayr az Zawr',\n    'Dimashq',\n    'Halab',\n    'Hamah',\n    'Hims',\n    'Idlib',\n    'Rif Dimashq',\n    'Tartus',\n  ],\n\n  Tajikistan: [\n    'Dushanbe',\n    'Kohistoni Badakhshon',\n    'Khatlon',\n    'Sughd',\n  ],\n\n  Thailand: [\n    'Amnat Charoen',\n    'Ang Thong',\n    'Bueng Kan',\n    'Buri Ram',\n    'Chachoengsao',\n    'Chai Nat',\n    'Chaiyaphum',\n    'Chanthaburi',\n    'Chiang Mai',\n    'Chiang Rai',\n    'Chon Buri',\n    'Chumphon',\n    'Kalasin',\n    'Kamphaeng Phet',\n    'Kanchanaburi',\n    'Khon Kaen',\n    'Krabi',\n    'Krung Thep Mahanakhon (Bangkok)',\n    'Lampang',\n    'Lamphun',\n    'Loei',\n    'Lop Buri',\n    'Mae Hong Son',\n    'Maha Sarakham',\n    'Mukdahan',\n    'Nakhon Nayok',\n    'Nakhon Phathom',\n    'Nakhon Phanom',\n    'Nakhon Ratchasima',\n    'Nakhon Sawan',\n    'Nakhon Si Thammarat',\n    'Nan',\n    'Narathiwat',\n    'Nong Bua Lam Phu',\n    'Nong Khai',\n    'Nonthaburi',\n    'Pathum Thani',\n    'Pattani',\n    'Phangnga',\n    'Phatthalung',\n    'Phayao',\n    'Phetchabun',\n    'Phetchaburi',\n    'Phichit',\n    'Phitsanulok',\n    'Phra Nakhon Si Ayutthaya',\n    'Phrae',\n    'Phuket',\n    'Prachin Buri',\n    'Prachuap Khiri Khan',\n    'Ranong',\n    'Ratchaburi',\n    'Rayong',\n    'Roi Et',\n    'Sa Kaeo',\n    'Sakon Nakhon',\n    'Samut Prakan',\n    'Samut Sakhon',\n    'Samut Songkhram',\n    'Saraburi',\n    'Satun',\n    'Sing Buri',\n    'Si Sa ket',\n    'Songkhla',\n    'Sukhothai',\n    'Suphan Buri',\n    'Surat Thani',\n    'Surin',\n    'Tak',\n    'Trang',\n    'Trat',\n    'Ubon Ratchathani',\n    'Udon Thani',\n    'Uthai Thani',\n    'Uttaradit',\n    'Yala',\n    'Yasothon',\n  ],\n\n  Timor: [\n    'Aileu',\n    'Ainaro',\n    'Baucau',\n    'Bobonaro',\n    'Cova Lima',\n    'Dili',\n    'Ermera',\n    'Lautem',\n    'Liquica',\n    'Manatuto',\n    'Manufahi',\n    'Oecussi',\n    'Viqueque',\n  ],\n\n  Togo: [\n    'Centre',\n    'Kara',\n    'Maritime',\n    'Plateaux',\n    'Savannes',\n  ],\n\n  Tonga: [\n    'Eua',\n    'Ha apai',\n    'Niuas',\n    'Tongatapu',\n    'Vava u',\n  ],\n\n  Trinidad: [\n    'Arima',\n    'Chaguanas',\n    'Couva-Tabaquite-Talparo',\n    'Diefo Martin',\n    'Mayaro-Rio Claro',\n    'Penal-Debe',\n    'Point Fortin',\n    'Port-of-Spain',\n    'Princes Town',\n    'San Fernando',\n    'San Juan-Laventille',\n    'Sangre Grande',\n    'Siparia',\n    'Tobago',\n    'Tunapuna-Piarco',\n  ],\n\n  Tunisia: [\n    'Ariana',\n    'Beja',\n    'Ben Arous',\n    'Bizerte',\n    'Gabes',\n    'Gafsa',\n    'Jendouba',\n    'Kairouan',\n    'Kasserine',\n    'Kebili',\n    'Kef',\n    'Mahdia',\n    'Medenine',\n    'Monastir',\n    'Nabeul',\n    'Sfax',\n    'Sidi Bouzid',\n    'Siliana',\n    'Sousse',\n    'Tataouine',\n    'Tozeur',\n    'Tunis',\n    'Zaghouan',\n  ],\n\n  Turkey: [\n    'Adana',\n    'Adiyaman',\n    'Afyonkarahisar',\n    'Agri',\n    'Aksaray',\n    'Amasya',\n    'Ankara',\n    'Antalya',\n    'Ardahan',\n    'Artvin',\n    'Aydin',\n    'Balikesir',\n    'Bartin',\n    'Batman',\n    'Bayburt',\n    'Bilecik',\n    'Bingol',\n    'Bitlis',\n    'Bolu',\n    'Burdur',\n    'Bursa',\n    'Canakkale',\n    'Cankiri',\n    'Corum',\n    'Denizli',\n    'Diyarbakir',\n    'Duzce',\n    'Edirne',\n    'Elazig',\n    'Erzincan',\n    'Erzurum',\n    'Eskisehir',\n    'Gaziantep',\n    'Giresun',\n    'Gumushane',\n    'Hakkari',\n    'Hatay',\n    'Igdir',\n    'Isparta',\n    'Istanbul',\n    'Izmir',\n    'Kahramanmaras',\n    'Karabuk',\n    'Karaman',\n    'Kars',\n    'Kastamonu',\n    'Kayseri',\n    'Kilis',\n    'Kirikkale',\n    'Kirklareli',\n    'Kirsehir',\n    'Kocaeli',\n    'Konya',\n    'Kutahya',\n    'Malatya',\n    'Manisa',\n    'Mardin',\n    'Mersin',\n    'Mugla',\n    'Mus',\n    'Nevsehir',\n    'Nigde',\n    'Ordu',\n    'Osmaniye',\n    'Rize',\n    'Sakarya',\n    'Samsun',\n    'Sanliurfa',\n    'Siirt',\n    'Sinop',\n    'Sirnak',\n    'Sivas',\n    'Tekirdag',\n    'Tokat',\n    'Trabzon',\n    'Tunceli',\n    'Usak',\n    'Van',\n    'Yalova',\n    'Yozgat',\n    'Zonguldak',\n  ],\n\n  Turkmenistan: [\n    'Ahal',\n    'Asgabat',\n    'Balkan',\n    'Dashoguz',\n    'Lebap',\n    'Mary',\n  ],\n\n  Tuvalu: [\n    'Funafuti',\n    'Nanumanga',\n    'Nanumea',\n    'Niutao',\n    'Nui',\n    'Nukufetau',\n    'Nukulaelae',\n    'Vaitupu',\n  ],\n\n  Uganda: [\n    'Abim',\n    'Adjumani',\n    'Amolatar',\n    'Amuria',\n    'Amuru',\n    'Apac',\n    'Arua',\n    'Budaka',\n    'Bududa',\n    'Bugiri',\n    'Bukedea',\n    'Bukwa',\n    'Buliisa',\n    'Bundibugyo',\n    'Bushenyi',\n    'Busia',\n    'Butaleja',\n    'Dokolo',\n    'Gulu',\n    'Hoima',\n    'Ibanda',\n    'Iganga',\n    'Isingiro',\n    'Jinja',\n    'Kaabong',\n    'Kabale',\n    'Kabarole',\n    'Kaberamaido',\n    'Kalangala',\n    'Kaliro',\n    'Kampala',\n    'Kamuli',\n    'Kamwenge',\n    'Kanungu',\n    'Kapchorwa',\n    'Kasese',\n    'Katakwi',\n    'Kayunga',\n    'Kibaale',\n    'Kiboga',\n    'Kiruhura',\n    'Kisoro',\n    'Kitgum',\n    'Koboko',\n    'Kotido',\n    'Kumi',\n    'Kyenjojo',\n    'Lira',\n    'Luwero',\n    'Lyantonde',\n    'Manafwa',\n    'Maracha',\n    'Masaka',\n    'Masindi',\n    'Mayuge',\n    'Mbale',\n    'Mbarara',\n    'Mityana',\n    'Moroto',\n    'Moyo',\n    'Mpigi',\n    'Mubende',\n    'Mukono',\n    'Nakapiripirit',\n    'Nakaseke',\n    'Nakasongola',\n    'Namutumba',\n    'Nebbi',\n    'Ntungamo',\n    'Oyam',\n    'Pader',\n    'Pallisa',\n    'Rakai',\n    'Rukungiri',\n    'Sembabule',\n    'Sironko',\n    'Soroti',\n    'Tororo',\n    'Wakiso',\n    'Yumbe',\n  ],\n\n  Ukraine: [\n    'Cherkasy',\n    'Chernihiv',\n    'Chernivtsi',\n    'Dnipropetrovsk',\n    'Donetsk',\n    'Ivano-Frankivsk',\n    'Kharkiv',\n    'Kherson',\n    'Khmelnytskyi',\n    'Kiev',\n    'Kirovohrad',\n    'Luhansk',\n    'Lviv',\n    'Mykolaiv',\n    'Odessa',\n    'Poltava',\n    'Rivne',\n    'Sumy',\n    'Ternopil',\n    'Vinnytsia',\n    'Volyn',\n    'Zakarpattia',\n    'Zaporizhia',\n    'Zhytomyr',\n    'Avtonomna Respublika Krym',\n    'Kyļv',\n    'Sevastopol',\n  ],\n\n  UnitedArab: [\n    'Abu Dhabi',\n    'Ajman',\n    'Dubai',\n    'Fujairah',\n    'Ras al Khaimah',\n    'Sharjah',\n    'Umm Al Quwain',\n  ],\n\n  UnitedKingdom: [\n    'Aberdeen City',\n    'Aberdeenshire',\n    'Angus',\n    'Antrim and Newtownabbey',\n    'Ards and North Down',\n    'Argyll and Bute',\n    'Armagh, Banbridge and Craigavon',\n    'Barking and Dagenham',\n    'Barnet',\n    'Barnsley',\n    'Bath and North East Somerset',\n    'Bedford',\n    'Belfast',\n    'Bexley',\n    'Birmingham',\n    'Blackburn with Darwen',\n    'Blackpool',\n    'Blaenau Gwent',\n    'Bolton',\n    'Bournemouth',\n    'Bracknell Forest',\n    'Bradford',\n    'Brent',\n    'Bridgend',\n    'Brighton and Hove',\n    'Bristol, City of',\n    'Bromley',\n    'Buckinghamshire',\n    'Bury',\n    'Caerphilly',\n    'Calderdale',\n    'Cambridgeshire',\n    'Camden',\n    'Cardiff',\n    'Carmarthenshire',\n    'Causeway Coast and Glens',\n    'Central Bedfordshire',\n    'Ceredigion',\n    'Cheshire East',\n    'Cheshire West and Chester',\n    'Clackmannanshire',\n    'Conwy',\n    'Cornwall',\n    'Coventry',\n    'Croydon',\n    'Cumbria',\n    'Darlington',\n    'Denbighshire',\n    'Derby',\n    'Derbyshire',\n    'Derry and Strabane',\n    'Devon',\n    'Doncaster',\n    'Dorset',\n    'Dudley',\n    'Dumfries and Galloway',\n    'Dundee City',\n    'Durham County',\n    'Ealing',\n    'East Ayrshire',\n    'East Dunbartonshire',\n    'East Lothian',\n    'East Renfrewshire',\n    'East Riding of Yorkshire',\n    'East Sussex',\n    'Edinburgh, City of',\n    'Eilean Siar',\n    'Enfield',\n    'Essex',\n    'Falkirk',\n    'Fermanagh and Omagh',\n    'Fife',\n    'Flintshire',\n    'Gateshead',\n    'Glasgow City',\n    'Gloucestershire',\n    'Greenwich',\n    'Gwynedd',\n    'Hackney',\n    'Halton',\n    'Hammersmith and Fulham',\n    'Hampshire',\n    'Haringey',\n    'Harrow',\n    'Hartlepool',\n    'Havering',\n    'Herefordshire',\n    'Hertfordshire',\n    'Highland',\n    'Hillingdon',\n    'Hounslow',\n    'Inverclyde',\n    'Isle of Anglesey',\n    'Isle of Wight',\n    'Isles of Scilly',\n    'Islington',\n    'Kensington and Chelsea',\n    'Kent',\n    'Kingston upon Hull',\n    'Kingston upon Thames',\n    'Kirklees',\n    'Knowsley',\n    'Lambeth',\n    'Lancashire',\n    'Leeds',\n    'Leicester',\n    'Leicestershire',\n    'Lewisham',\n    'Lincolnshire',\n    'Lisburn and Castlereagh',\n    'Liverpool',\n    'London, City of',\n    'Luton',\n    'Manchester',\n    'Medway',\n    'Merthyr Tydfil',\n    'Merton',\n    'Mid and East Antrim',\n    'Mid Ulster',\n    'Middlesbrough',\n    'Midlothian',\n    'Milton Keynes',\n    'Monmouthshire',\n    'Moray',\n    'Neath Port Talbot',\n    'Newcastle upon Tyne',\n    'Newham',\n    'Newport',\n    'Newry, Mourne and Down',\n    'Norfolk',\n    'North Ayrshire',\n    'North East Lincolnshire',\n    'North Lanarkshire',\n    'North Lincolnshire',\n    'North Somerset',\n    'North Tyneside',\n    'North Yorkshire',\n    'Northamptonshire',\n    'Northumberland',\n    'Nottingham',\n    'Nottinghamshire',\n    'Oldham',\n    'Orkney Islands',\n    'Oxfordshire',\n    'Pembrokeshire',\n    'Perth and Kinross',\n    'Peterborough',\n    'Plymouth',\n    'Poole',\n    'Portsmouth',\n    'Powys',\n    'Reading',\n    'Redbridge',\n    'Redcar and Cleveland',\n    'Renfrewshire',\n    'Rhondda, Cynon, Taff',\n    'Richmond upon Thames',\n    'Rochdale',\n    'Rotherham',\n    'Rutland',\n    'St. Helens',\n    'Salford',\n    'Sandwell',\n    'Scottish Borders, The',\n    'Sefton',\n    'Sheffield',\n    'Shetland Islands',\n    'Shropshire',\n    'Slough',\n    'Solihull',\n    'Somerset',\n    'South Ayrshire',\n    'South Gloucestershire',\n    'South Lanarkshire',\n    'South Tyneside',\n    'Southampton',\n    'Southend-on-Sea',\n    'Southwark',\n    'Staffordshire',\n    'Stirling',\n    'Stockport',\n    'Stockton-on-Tees',\n    'Stoke-on-Trent',\n    'Suffolk',\n    'Sunderland',\n    'Surrey',\n    'Sutton',\n    'Swansea',\n    'Swindon',\n    'Tameside',\n    'Telford and Wrekin',\n    'Thurrock',\n    'Torbay',\n    'Torfaen',\n    'Tower Hamlets',\n    'Trafford',\n    'Vale of Glamorgan, The',\n    'Wakefield',\n    'Walsall',\n    'Waltham Forest',\n    'Wandsworth',\n    'Warrington',\n    'Warwickshire',\n    'West Berkshire',\n    'West Dunbartonshire',\n    'West Lothian',\n    'West Sussex',\n    'Westminster',\n    'Wigan',\n    'Wiltshire',\n    'Windsor and Maidenhead',\n    'Wirral',\n    'Wokingham',\n    'Wolverhampton',\n    'Worcestershire',\n    'Wrexham',\n    'York',\n  ],\n\n  Tanzania: [\n    'Arusha',\n    'Coast',\n    'Dar es Salaam',\n    'Dodoma',\n    'Iringa',\n    'Kagera',\n    'Kigoma',\n    'Kilimanjaro',\n    'Lindi',\n    'Manyara',\n    'Mara',\n    'Mbeya',\n    'Morogoro',\n    'Mtwara',\n    'Mwanza',\n    'Pemba North',\n    'Pemba South',\n    'Rukwa',\n    'Ruvuma',\n    'Shinyanga',\n    'Singida',\n    'Tabora',\n    'Tanga',\n    'Zanzibar North',\n    'Zanzibar Central/South',\n    'Zanzibar Urban/West',\n  ],\n\n  UnitedStates: [\n    'Alabama',\n    'Alaska',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'Florida',\n    'Georgia',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Carolina',\n    'North Dakota',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Pennsylvania',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming',\n  ],\n\n  Uruguay: [\n    'Artigas',\n    'Canelones',\n    'Cerro Largo',\n    'Colonia',\n    'Durazno',\n    'Flores',\n    'Florida',\n    'Lavalleja',\n    'Maldonado',\n    'Montevideo',\n    'Paysandś',\n    'Río Negro',\n    'Rivera',\n    'Rocha',\n    'Salto',\n    'San José',\n    'Soriano',\n    'Tacuarembó',\n    'Treinta y Tres',\n  ],\n\n  Uzbekistan: [\n    'Toshkent shahri',\n    'Andijon',\n    'Buxoro',\n    'Farg‘ona',\n    'Jizzax',\n    'Namangan',\n    'Navoiy',\n    'Qashqadaryo (Qarshi)',\n    'Samarqand',\n    'Sirdaryo (Guliston)',\n    'Surxondaryo (Termiz)',\n    'Toshkent wiloyati',\n    'Xorazm (Urganch)',\n    'Qoraqalpog‘iston Respublikasi (Nukus)',\n  ],\n\n  Vanuatu: [\n    'Malampa',\n    'Pénama',\n    'Sanma',\n    'Shéfa',\n    'Taféa',\n    'Torba',\n  ],\n\n  Venezuela: [\n    'Dependencias Federales',\n    'Distrito Federal',\n    'Amazonas',\n    'Anzoátegui',\n    'Apure',\n    'Aragua',\n    'Barinas',\n    'Bolívar',\n    'Carabobo',\n    'Cojedes',\n    'Delta Amacuro',\n    'Falcón',\n    'Guárico',\n    'Lara',\n    'Mérida',\n    'Miranda',\n    'Monagas',\n    'Nueva Esparta',\n    'Portuguesa',\n    'Sucre',\n    'Táchira',\n    'Trujillo',\n    'Vargas',\n    'Yaracuy',\n    'Zulia',\n  ],\n\n  Zambia: [\n    'Central',\n    'Copperbelt',\n    'Eastern',\n    'Luapula',\n    'Lusaka',\n    'Northern',\n    'North-Western',\n    'Southern',\n    'Western',\n  ],\n\n  Zimbabwe: [\n    'Bulawayo',\n    'Harare',\n    'Manicaland',\n    'Mashonaland Central',\n    'Mashonaland East',\n    'Mashonaland West',\n    'Masvingo',\n    'Matabeleland North',\n    'Matabeleland South',\n    'Midlands',\n  ],\n};\n","import { languageData } from './lang';\nimport { states } from './states/states';\n\nexport interface LangProps {\n  value: string;\n  label: string;\n}\nexport interface CountryDataProps {\n  label: string;\n  value: string;\n  telephonePrefix: string;\n  states: string[];\n  defaultLang: LangProps[];\n  supportedLang: LangProps[];\n}\n\nexport const countryData: CountryDataProps[] = [\n  {\n    label: 'Afghanistan', value: 'Afghanistan', telephonePrefix: ' ', states: states.Afghanistan, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Albania', value: 'Albania', telephonePrefix: ' ', states: states.Albania, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Algeria', value: 'Algeria', telephonePrefix: ' ', states: states.Algeria, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Andorra', value: 'Andorra', telephonePrefix: ' ', states: states.Andorra, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Angola', value: 'Angola', telephonePrefix: ' ', states: states.Angola, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Antigua and barbuda', value: 'Antigua and barbuda', telephonePrefix: ' ', states: states.Antigua, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Argentina', value: 'Argentina', telephonePrefix: '+54', states: states.Argentina, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Armenia', value: 'Armenia', telephonePrefix: ' ', states: states.Armenia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Australia', value: 'Australia', telephonePrefix: ' ', states: states.Australia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Austria', value: 'Austria', telephonePrefix: ' ', states: states.Austria, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Azerbaijan', value: 'Azerbaijan', telephonePrefix: ' ', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Bahamas', value: 'Bahamas', telephonePrefix: ' ', states: states.Bahamas, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Bahrain', value: 'Bahrain', telephonePrefix: ' ', states: states.Bahrain, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Bangladesh', value: 'Bangladesh', telephonePrefix: ' ', states: states.Bangladesh, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Barbados', value: 'Barbados', telephonePrefix: ' ', states: states.Barbados, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Belarus', value: 'Belarus', telephonePrefix: ' ', states: states.Belarus, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Belgium', value: 'Belgium', telephonePrefix: ' ', states: states.Belgium, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Belize', value: 'Belize', telephonePrefix: ' ', states: states.Belize, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Benin', value: 'Benin', telephonePrefix: ' ', states: states.Benin, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Bhutan', value: 'Bhutan', telephonePrefix: ' ', states: states.Bhutan, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Bolivia', value: 'Bolivia', telephonePrefix: '+591', states: states.Bolivia, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Bosnia and herzegovina', value: 'Bosnia and herzegovina', telephonePrefix: '', states: states.Bosnia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Botswana', value: 'Botswana', telephonePrefix: '', states: states.Botswana, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Brazil', value: 'Brazil', telephonePrefix: '+55', states: states.Brazil, defaultLang: [{ value: 'pt', label: 'Português' }], supportedLang: languageData,\n  },\n  {\n    label: 'Brunei darussalam', value: 'Brunei darussalam', telephonePrefix: '', states: states.Brunei, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Bulgaria', value: 'Bulgaria', telephonePrefix: '', states: states.Bulgaria, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Burkina faso', value: 'Burkina faso', telephonePrefix: '', states: states.Burkina, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Burundi', value: 'Burundi', telephonePrefix: '', states: states.Burundi, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Cabo verde', value: 'Cabo verde', telephonePrefix: '', states: states.Cabo, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Cambodia', value: 'Cambodia', telephonePrefix: '', states: states.Cambodia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Cameroon', value: 'Cameroon', telephonePrefix: '', states: states.Cameroon, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Canada', value: 'Canada', telephonePrefix: '', states: states.Canada, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Central african republic', value: 'Central african republic', telephonePrefix: '', states: states.CentralAfrican, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Chad', value: 'Chad', telephonePrefix: '', states: states.Chad, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Chile', value: 'Chile', telephonePrefix: '', states: states.Chile, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'China', value: 'China', telephonePrefix: '', states: states.China, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Colombia', value: 'Colombia', telephonePrefix: '+57', states: [], defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Comoros', value: 'Comoros', telephonePrefix: '', states: states.Comoros, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Congo', value: 'Congo', telephonePrefix: '', states: states.Congo, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Cook islands', value: 'Cook islands', telephonePrefix: '', states: states.Cook, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Costa rica', value: 'Costa rica', telephonePrefix: '', states: states.CostaRica, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Croatia', value: 'Croatia', telephonePrefix: '', states: states.Croatia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Cuba', value: 'Cuba', telephonePrefix: '', states: states.Cuba, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Cyprus', value: 'Cyprus', telephonePrefix: '', states: states.Cyprus, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Czechia', value: 'Czechia', telephonePrefix: '', states: states.Czechia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Ivory Coast', value: 'Ivory Coast', telephonePrefix: '', states: states.IvoryCoast, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  // {\n  // label: 'Democratic republic of korea', value: 'Democratic republic of korea', telephonePrefix: '',\n  // states: states.DemocraticKorea defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  // },\n  {\n    label: 'Democratic republic of the congo', value: 'Democratic republic of the congo', telephonePrefix: '', states: states.Congo, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Denmark', value: 'Denmark', telephonePrefix: '', states: states.Denmark, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Djibouti', value: 'Djibouti', telephonePrefix: '', states: states.Djibouti, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Dominica', value: 'Dominica', telephonePrefix: '', states: states.Dominica, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Dominican republic', value: 'Dominican republic', telephonePrefix: '', states: states.DominicanRepublic, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Ecuador', value: 'Ecuador', telephonePrefix: '', states: states.Ecuador, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Egypt', value: 'Egypt', telephonePrefix: '', states: states.Egypt, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'El Salvador', value: 'El salvador', telephonePrefix: '', states: states.Salvador, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Equatorial guinea', value: 'Equatorial guinea', telephonePrefix: '', states: states.EquatorialGuinea, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Eritrea', value: 'Eritrea', telephonePrefix: '', states: states.Eritrea, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Estonia', value: 'Estonia', telephonePrefix: '', states: states.Estonia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Ethiopia', value: 'Ethiopia', telephonePrefix: '', states: states.Ethiopia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Faroe islands', value: 'Faroe islands', telephonePrefix: '', states: states.Faroe, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Fiji', value: 'Fiji', telephonePrefix: '', states: states.Fiji, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Finland', value: 'Finland', telephonePrefix: '', states: states.Finland, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'France', value: 'France', telephonePrefix: '', states: states.France, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Gabon', value: 'Gabon', telephonePrefix: '', states: states.Gabon, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Gambia', value: 'Gambia', telephonePrefix: '', states: states.Gambia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Georgia', value: 'Georgia', telephonePrefix: '', states: states.Georgia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Germany', value: 'Germany', telephonePrefix: '', states: states.Germany, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Ghana', value: 'Ghana', telephonePrefix: '', states: states.Ghana, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Greece', value: 'Greece', telephonePrefix: '', states: states.Greece, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Grenada', value: 'Grenada', telephonePrefix: '', states: states.Grenada, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Guatemala', value: 'Guatemala', telephonePrefix: '', states: states.Guatemala, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Guinea', value: 'Guinea', telephonePrefix: '', states: states.Guinea, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Guinea-bissau', value: 'Guinea-bissau', telephonePrefix: '', states: states.GuineaBissau, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Guyana', value: 'Guyana', telephonePrefix: '', states: states.Guyana, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Haiti', value: 'Haiti', telephonePrefix: '', states: states.Haiti, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Honduras', value: 'Honduras', telephonePrefix: '', states: states.Honduras, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Hungary', value: 'Hungary', telephonePrefix: '', states: states.Hungary, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Iceland', value: 'Iceland', telephonePrefix: '', states: states.Iceland, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'India', value: 'India', telephonePrefix: '', states: states.India, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Indonesia', value: 'Indonesia', telephonePrefix: '', states: states.Indonesia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Iran', value: 'Iran', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Iraq', value: 'Iraq', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Ireland', value: 'Ireland', telephonePrefix: '', states: states.Ireland, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Israel', value: 'Israel', telephonePrefix: '', states: states.Israel, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Italy', value: 'Italy', telephonePrefix: '', states: states.Italy, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Jamaica', value: 'Jamaica', telephonePrefix: '', states: states.Jamaica, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Japan', value: 'Japan', telephonePrefix: '', states: states.Japan, defaultLang: [{ value: 'ja', label: '日本語' }], supportedLang: [{ value: 'ja', label: '日本語' }],\n  },\n  {\n    label: 'Jordan', value: 'Jordan', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Kazakhstan', value: 'Kazakhstan', telephonePrefix: '', states: states.Kazakhstan, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Kenya', value: 'Kenya', telephonePrefix: '', states: states.Kenya, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Kiribati', value: 'Kiribati', telephonePrefix: '', states: states.Kiribati, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Kuwait', value: 'Kuwait', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Kyrgyzstan', value: 'Kyrgyzstan', telephonePrefix: '', states: states.Kyrgyzstan, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Lao democratic republic', value: 'Lao democratic republic', telephonePrefix: '', states: states.Lao, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Latvia', value: 'Latvia', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Lebanon', value: 'Lebanon', telephonePrefix: '', states: states.Lebanon, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Lesotho', value: 'Lesotho', telephonePrefix: '', states: states.Lesotho, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Liberia', value: 'Liberia', telephonePrefix: '', states: states.Liberia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Libya', value: 'Libya', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Lithuania', value: 'Lithuania', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Luxembourg', value: 'Luxembourg', telephonePrefix: '', states: states.Luxembourg, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Madagascar', value: 'Madagascar', telephonePrefix: '', states: states.Madagascar, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Malawi', value: 'Malawi', telephonePrefix: '', states: states.Malawi, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Malaysia', value: 'Malaysia', telephonePrefix: '', states: states.Malaysia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Maldives', value: 'Maldives', telephonePrefix: '', states: states.Maldives, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Mali', value: 'Mali', telephonePrefix: '', states: states.Mali, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Malta', value: 'Malta', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Marshall islands', value: 'Marshall islands', telephonePrefix: '', states: states.Marshall, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Mauritania', value: 'Mauritania', telephonePrefix: '', states: states.Mauritania, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Mauritius', value: 'Mauritius', telephonePrefix: '', states: states.Mauritius, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Mexico', value: 'Mexico', telephonePrefix: '+52', states: states.Mexico, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Micronesia', value: 'Micronesia', telephonePrefix: '', states: states.Micronesia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Monaco', value: 'Monaco', telephonePrefix: '', states: states.Monaco, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Mongolia', value: 'Mongolia', telephonePrefix: '', states: states.Mongolia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Montenegro', value: 'Montenegro', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Morocco', value: 'Morocco', telephonePrefix: '', states: states.Morocco, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Mozambique', value: 'Mozambique', telephonePrefix: '', states: states.Mozambique, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Myanmar', value: 'Myanmar', telephonePrefix: '', states: states.Myanmar, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Namibia', value: 'Namibia', telephonePrefix: '', states: states.Namibia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Nauru', value: 'Nauru', telephonePrefix: '', states: states.Nauru, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Nepal', value: 'Nepal', telephonePrefix: '', states: states.Nepal, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Netherlands', value: 'Netherlands', telephonePrefix: '', states: states.Netherlands, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'New zealand', value: 'New zealand', telephonePrefix: '', states: states.NewZealand, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Nicaragua', value: 'Nicaragua', telephonePrefix: '', states: states.Nicaragua, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Niger', value: 'Niger', telephonePrefix: '', states: states.Niger, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Niigeria', value: 'Nigeria', telephonePrefix: '', states: states.Nigeria, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Niue', value: 'Niue', telephonePrefix: '', states: states.Niue, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'North macedonia', value: 'North macedonia', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Norway', value: 'Norway', telephonePrefix: '', states: states.Norway, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Oman', value: 'Oman', telephonePrefix: '', states: states.Oman, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Pakistan', value: 'Pakistan', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Palau', value: 'Palau', telephonePrefix: '', states: states.Palau, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Palestine', value: 'Palestine', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Panama', value: 'Panama', telephonePrefix: '', states: states.Panama, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Papua new guinea', value: 'Papua new guinea', telephonePrefix: '', states: states.Papua, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Paraguay', value: 'Paraguay', telephonePrefix: '', states: states.Paraguay, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Peru', value: 'Peru', telephonePrefix: '+51', states: states.Peru, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Philippines', value: 'Philippines', telephonePrefix: '', states: states.Philippines, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Poland', value: 'Poland', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Portugal', value: 'Portugal', telephonePrefix: '', states: states.Portugal, defaultLang: [{ value: 'pt', label: 'Português' }], supportedLang: languageData,\n  },\n  {\n    label: 'Qatar', value: 'Qatar', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Republic of korea', value: 'Republic of korea', telephonePrefix: '', states: states.RepublicKorea, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Republic of moldova', value: 'Republic of moldova', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Romania', value: 'Romania', telephonePrefix: '', states: states.Romania, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Russian federation', value: 'Russian federation', telephonePrefix: '', states: states.Russian, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Rwanda', value: 'Rwanda', telephonePrefix: '', states: states.Rwanda, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Saint kitts and nevis', value: 'Saint kitts and nevis', telephonePrefix: '', states: states.SaintKitts, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Saint lucia', value: 'Saint lucia', telephonePrefix: '', states: states.SaintLucia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Saint vincent and the grenadines', value: 'Saint vincent and the grenadines', telephonePrefix: '', states: states.SaintVincent, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Samoa', value: 'Samoa', telephonePrefix: '', states: states.Samoa, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'San marino', value: 'San marino', telephonePrefix: '', states: states.SanMarino, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Sao tome and principe', value: 'Sao tome and principe', telephonePrefix: '', states: states.SaoTome, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Saudi arabia', value: 'Saudi arabia', telephonePrefix: '', states: states.Saudi, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Senegal', value: 'Senegal', telephonePrefix: '', states: states.Senegal, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Serbia', value: 'Serbia', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Switzerland', value: 'Seychelles', telephonePrefix: '', states: states.Seychelles, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Sierra leone', value: 'Sierra leone', telephonePrefix: '', states: states.Sierra, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Sigapore', value: 'Singapore', telephonePrefix: '', states: states.Singapore, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Slovakia', value: 'Slovakia', telephonePrefix: '', states: states.Slovakia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Slovenia', value: 'Slovenia', telephonePrefix: '', states: states.Slovenia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Solomon islands', value: 'Solomon islands', telephonePrefix: '', states: states.Solomon, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Soomalia', value: 'Somalia', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'South Africa', value: 'South africa', telephonePrefix: '', states: states.SouthAfrica, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'South sudan', value: 'South sudan', telephonePrefix: '', states: states.SouthSudan, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Spain', value: 'Spain', telephonePrefix: '', states: states.Spain, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Sri lanka', value: 'Sri lanka', telephonePrefix: '', states: states.Sri, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Sudan', value: 'Sudan', telephonePrefix: '', states: states.Sudan, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Suriname', value: 'Suriname', telephonePrefix: '', states: states.Suriname, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Sweden', value: 'Sweden', telephonePrefix: '', states: states.Sweden, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Switzerland', value: 'Switzerland', telephonePrefix: '', states: states.Switzerland, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Syrian arab republic', value: 'Syrian arab republic', telephonePrefix: '', states: states.Syrian, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Tajikistan', value: 'Tajikistan', telephonePrefix: '', states: states.Tajikistan, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Thailand', value: 'Thailand', telephonePrefix: '', states: states.Thailand, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Timor-leste', value: 'Timor-leste', telephonePrefix: '', states: states.Timor, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Togo', value: 'Togo', telephonePrefix: '', states: states.Togo, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Tokelau', value: 'Tokelau', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Tonga', value: 'Tonga', telephonePrefix: '', states: states.Tonga, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Trinidad and tobago', value: 'Trinidad and tobago', telephonePrefix: '', states: states.Trinidad, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Tunisia', value: 'Tunisia', telephonePrefix: '', states: states.Tunisia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Turkey', value: 'Turkey', telephonePrefix: '', states: states.Turkey, defaultLang: [{ value: 'tr', label: 'Türkçe' }], supportedLang: languageData,\n  },\n  {\n    label: 'Turkmenistan', value: 'Turkmenistan', telephonePrefix: '', states: states.Turkmenistan, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Tuvalu', value: 'Tuvalu', telephonePrefix: '', states: states.Tuvalu, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Uganda', value: 'Uganda', telephonePrefix: '', states: states.Uganda, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Ukraine', value: 'Ukraine', telephonePrefix: '', states: states.Ukraine, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'United arab emirates', value: 'United arab emirates', telephonePrefix: '', states: states.UnitedArab, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'United kingdom', value: 'United kingdom', telephonePrefix: '', states: states.UnitedKingdom, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'United republic of tanzania', value: 'United republic of tanzania', telephonePrefix: '', states: states.Tanzania, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'United States', value: 'United States', telephonePrefix: '+51', states: states.UnitedStates, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Uruguay', value: 'Uruguay', telephonePrefix: '', states: states.Uruguay, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Uzbekistan', value: 'Uzbekistan', telephonePrefix: '', states: states.Uzbekistan, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Vanuatu', value: 'Vanuatu', telephonePrefix: '', states: states.Vanuatu, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Venezuela', value: 'Venezuela', telephonePrefix: '', states: states.Venezuela, defaultLang: [{ value: 'es', label: 'Español' }], supportedLang: languageData,\n  },\n  {\n    label: 'Vietnam', value: 'Vietnam', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Yemen', value: 'Yemen', telephonePrefix: '', states: [], defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Zambia', value: 'Zambia', telephonePrefix: '', states: states.Zambia, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n  {\n    label: 'Zimbabwe', value: 'Zimbabwe', telephonePrefix: '', states: states.Zimbabwe, defaultLang: [{ value: 'en', label: 'English' }], supportedLang: languageData,\n  },\n\n];\n\nexport const countriesWithStates: string[] = countryData.filter(c => c.states.length > 0).map(c => c.value);\n","export const timeZones: any = {\n  Andorra: 'Andorra',\n  Dubai: 'United Arab Emirates',\n  Kabul: 'Afghanistan',\n  Tirane: 'Albania',\n  Yerevan: 'Armenia',\n  Casey: 'Antarctica',\n  Davis: 'Antarctica',\n  Mawson: 'Antarctica',\n  Palmer: 'Antarctica',\n  Rothera: 'Antarctica',\n  Troll: 'Antarctica',\n  Vostok: 'Antarctica',\n  Buenos_Aires: 'Argentina',\n  Cordoba: 'Argentina',\n  Salta: 'Argentina',\n  Jujuy: 'Argentina',\n  Tucuman: 'Argentina',\n  Catamarca: 'Argentina',\n  La_Rioja: 'Argentina',\n  San_Juan: 'Argentina',\n  Mendoza: 'Argentina',\n  San_Luis: 'Argentina',\n  Rio_Gallegos: 'Argentina',\n  Ushuaia: 'Argentina',\n  Pago_Pago: 'Samoa (American)',\n  Vienna: 'Austria',\n  Lord_Howe: 'Australia',\n  Macquarie: 'Australia',\n  Hobart: 'Australia',\n  Melbourne: 'Australia',\n  Sydney: 'Australia',\n  Broken_Hill: 'Australia',\n  Brisbane: 'Australia',\n  Lindeman: 'Australia',\n  Adelaide: 'Australia',\n  Darwin: 'Australia',\n  Perth: 'Australia',\n  Eucla: 'Australia',\n  Baku: 'Azerbaijan',\n  Barbados: 'Barbados',\n  Dhaka: 'Bangladesh',\n  Brussels: 'Belgium',\n  Sofia: 'Bulgaria',\n  Bermuda: 'Bermuda',\n  Brunei: 'Brunei',\n  La_Paz: 'Bolivia',\n  Noronha: 'Brazil',\n  Belem: 'Brazil',\n  Fortaleza: 'Brazil',\n  Recife: 'Brazil',\n  Araguaina: 'Brazil',\n  Maceio: 'Brazil',\n  Bahia: 'Brazil',\n  Sao_Paulo: 'Brazil',\n  Campo_Grande: 'Brazil',\n  Cuiaba: 'Brazil',\n  Santarem: 'Brazil',\n  Porto_Velho: 'Brazil',\n  Boa_Vista: 'Brazil',\n  Manaus: 'Brazil',\n  Eirunepe: 'Brazil',\n  Rio_Branco: 'Brazil',\n  Thimphu: 'Bhutan',\n  Minsk: 'Belarus',\n  Belize: 'Belize',\n  St_Johns: 'Canada',\n  Halifax: 'Canada',\n  Glace_Bay: 'Canada',\n  Moncton: 'Canada',\n  Goose_Bay: 'Canada',\n  Toronto: 'Canada',\n  Nipigon: 'Canada',\n  Thunder_Bay: 'Canada',\n  Iqaluit: 'Canada',\n  Pangnirtung: 'Canada',\n  Winnipeg: 'Canada',\n  Rainy_River: 'Canada',\n  Resolute: 'Canada',\n  Rankin_Inlet: 'Canada',\n  Regina: 'Canada',\n  Swift_Current: 'Canada',\n  Edmonton: 'Canada',\n  Cambridge_Bay: 'Canada',\n  Yellowknife: 'Canada',\n  Inuvik: 'Canada',\n  Dawson_Creek: 'Canada',\n  Fort_Nelson: 'Canada',\n  Whitehorse: 'Canada',\n  Dawson: 'Canada',\n  Vancouver: 'Canada',\n  Cocos: 'Cocos (Keeling) Islands',\n  Zurich: 'Switzerland',\n  Abidjan: \"Côte d'Ivoire\",\n  Rarotonga: 'Cook Islands',\n  Santiago: 'Chile',\n  Punta_Arenas: 'Chile',\n  Easter: 'Chile',\n  Shanghai: 'China',\n  Urumqi: 'China',\n  Bogota: 'Colombia',\n  Costa_Rica: 'Costa Rica',\n  Havana: 'Cuba',\n  Cape_Verde: 'Cape Verde',\n  Christmas: 'Christmas Island',\n  Nicosia: 'Cyprus',\n  Famagusta: 'Cyprus',\n  Prague: 'Czech Republic',\n  Berlin: 'Germany',\n  Copenhagen: 'Denmark',\n  Santo_Domingo: 'Dominican Republic',\n  Algiers: 'Algeria',\n  Guayaquil: 'Ecuador',\n  Galapagos: 'Ecuador',\n  Tallinn: 'Estonia',\n  Cairo: 'Egypt',\n  El_Aaiun: 'Western Sahara',\n  Madrid: 'Spain',\n  Ceuta: 'Spain',\n  Canary: 'Spain',\n  Helsinki: 'Finland',\n  Fiji: 'Fiji',\n  Stanley: 'Falkland Islands',\n  Chuuk: 'Micronesia',\n  Pohnpei: 'Micronesia',\n  Kosrae: 'Micronesia',\n  Faroe: 'Faroe Islands',\n  Paris: 'France',\n  London: 'Britain (UK)',\n  Tbilisi: 'Georgia',\n  Cayenne: 'French Guiana',\n  Gibraltar: 'Gibraltar',\n  Nuuk: 'Greenland',\n  Danmarkshavn: 'Greenland',\n  Scoresbysund: 'Greenland',\n  Thule: 'Greenland',\n  Athens: 'Greece',\n  South_Georgia: 'South Georgia & the South Sandwich Islands',\n  Guatemala: 'Guatemala',\n  Guam: 'Guam',\n  Bissau: 'Guinea-Bissau',\n  Guyana: 'Guyana',\n  Hong_Kong: 'Hong Kong',\n  Tegucigalpa: 'Honduras',\n  'Port-au-Prince': 'Haiti',\n  Budapest: 'Hungary',\n  Jakarta: 'Indonesia',\n  Pontianak: 'Indonesia',\n  Makassar: 'Indonesia',\n  Jayapura: 'Indonesia',\n  Dublin: 'Ireland',\n  Jerusalem: 'Israel',\n  Kolkata: 'India',\n  Calcutta: 'India',\n  Chagos: 'British Indian Ocean Territory',\n  Baghdad: 'Iraq',\n  Tehran: 'Iran',\n  Reykjavik: 'Iceland',\n  Rome: 'Italy',\n  Jamaica: 'Jamaica',\n  Amman: 'Jordan',\n  Tokyo: 'Japan',\n  Nairobi: 'Kenya',\n  Bishkek: 'Kyrgyzstan',\n  Tarawa: 'Kiribati',\n  Kanton: 'Kiribati',\n  Kiritimati: 'Kiribati',\n  Pyongyang: 'Korea (North)',\n  Seoul: 'Korea (South)',\n  Almaty: 'Kazakhstan',\n  Qyzylorda: 'Kazakhstan',\n  Qostanay: 'Kazakhstan',\n  Aqtobe: 'Kazakhstan',\n  Aqtau: 'Kazakhstan',\n  Atyrau: 'Kazakhstan',\n  Oral: 'Kazakhstan',\n  Beirut: 'Lebanon',\n  Colombo: 'Sri Lanka',\n  Monrovia: 'Liberia',\n  Vilnius: 'Lithuania',\n  Luxembourg: 'Luxembourg',\n  Riga: 'Latvia',\n  Tripoli: 'Libya',\n  Casablanca: 'Morocco',\n  Monaco: 'Monaco',\n  Chisinau: 'Moldova',\n  Majuro: 'Marshall Islands',\n  Kwajalein: 'Marshall Islands',\n  Yangon: 'Myanmar (Burma)',\n  Ulaanbaatar: 'Mongolia',\n  Hovd: 'Mongolia',\n  Choibalsan: 'Mongolia',\n  Macau: 'Macau',\n  Martinique: 'Martinique',\n  Malta: 'Malta',\n  Mauritius: 'Mauritius',\n  Maldives: 'Maldives',\n  Mexico_City: 'Mexico',\n  Cancun: 'Mexico',\n  Merida: 'Mexico',\n  Monterrey: 'Mexico',\n  Matamoros: 'Mexico',\n  Mazatlan: 'Mexico',\n  Chihuahua: 'Mexico',\n  Ojinaga: 'Mexico',\n  Hermosillo: 'Mexico',\n  Tijuana: 'Mexico',\n  Bahia_Banderas: 'Mexico',\n  Kuala_Lumpur: 'Malaysia',\n  Kuching: 'Malaysia',\n  Maputo: 'Mozambique',\n  Windhoek: 'Namibia',\n  Noumea: 'New Caledonia',\n  Norfolk: 'Norfolk Island',\n  Lagos: 'Nigeria',\n  Managua: 'Nicaragua',\n  Amsterdam: 'Netherlands',\n  Oslo: 'Norway',\n  Kathmandu: 'Nepal',\n  Nauru: 'Nauru',\n  Niue: 'Niue',\n  Auckland: 'New Zealand',\n  Chatham: 'New Zealand',\n  Panama: 'Panama',\n  Lima: 'Peru',\n  Tahiti: 'French Polynesia',\n  Marquesas: 'French Polynesia',\n  Gambier: 'French Polynesia',\n  Port_Moresby: 'Papua New Guinea',\n  Bougainville: 'Papua New Guinea',\n  Manila: 'Philippines',\n  Karachi: 'Pakistan',\n  Warsaw: 'Poland',\n  Miquelon: 'St Pierre & Miquelon',\n  Pitcairn: 'Pitcairn',\n  Puerto_Rico: 'Puerto Rico',\n  Gaza: 'Palestine',\n  Hebron: 'Palestine',\n  Lisbon: 'Portugal',\n  Madeira: 'Portugal',\n  Azores: 'Portugal',\n  Palau: 'Palau',\n  Asuncion: 'Paraguay',\n  Qatar: 'Qatar',\n  Reunion: 'Réunion',\n  Bucharest: 'Romania',\n  Belgrade: 'Serbia',\n  Kaliningrad: 'Russia',\n  Moscow: 'Russia',\n  Simferopol: 'Russia',\n  Kirov: 'Russia',\n  Volgograd: 'Russia',\n  Astrakhan: 'Russia',\n  Saratov: 'Russia',\n  Ulyanovsk: 'Russia',\n  Samara: 'Russia',\n  Yekaterinburg: 'Russia',\n  Omsk: 'Russia',\n  Novosibirsk: 'Russia',\n  Barnaul: 'Russia',\n  Tomsk: 'Russia',\n  Novokuznetsk: 'Russia',\n  Krasnoyarsk: 'Russia',\n  Irkutsk: 'Russia',\n  Chita: 'Russia',\n  Yakutsk: 'Russia',\n  Khandyga: 'Russia',\n  Vladivostok: 'Russia',\n  'Ust-Nera': 'Russia',\n  Magadan: 'Russia',\n  Sakhalin: 'Russia',\n  Srednekolymsk: 'Russia',\n  Kamchatka: 'Russia',\n  Anadyr: 'Russia',\n  Riyadh: 'Saudi Arabia',\n  Guadalcanal: 'Solomon Islands',\n  Mahe: 'Seychelles',\n  Khartoum: 'Sudan',\n  Stockholm: 'Sweden',\n  Singapore: 'Singapore',\n  Paramaribo: 'Suriname',\n  Juba: 'South Sudan',\n  Sao_Tome: 'Sao Tome & Principe',\n  El_Salvador: 'El Salvador',\n  Damascus: 'Syria',\n  Grand_Turk: 'Turks & Caicos Is',\n  Ndjamena: 'Chad',\n  Kerguelen: 'French Southern & Antarctic Lands',\n  Bangkok: 'Thailand',\n  Dushanbe: 'Tajikistan',\n  Fakaofo: 'Tokelau',\n  Dili: 'East Timor',\n  Ashgabat: 'Turkmenistan',\n  Tunis: 'Tunisia',\n  Tongatapu: 'Tonga',\n  Istanbul: 'Turkey',\n  Funafuti: 'Tuvalu',\n  Taipei: 'Taiwan',\n  Kiev: 'Ukraine',\n  Uzhgorod: 'Ukraine',\n  Zaporozhye: 'Ukraine',\n  Wake: 'US minor outlying islands',\n  New_York: 'United States',\n  Detroit: 'United States',\n  Louisville: 'United States',\n  Monticello: 'United States',\n  Indianapolis: 'United States',\n  Vincennes: 'United States',\n  Winamac: 'United States',\n  Marengo: 'United States',\n  Petersburg: 'United States',\n  Vevay: 'United States',\n  Chicago: 'United States',\n  Tell_City: 'United States',\n  Knox: 'United States',\n  Menominee: 'United States',\n  Center: 'United States',\n  New_Salem: 'United States',\n  Beulah: 'United States',\n  Denver: 'United States',\n  Boise: 'United States',\n  Phoenix: 'United States',\n  Los_Angeles: 'United States',\n  Anchorage: 'United States',\n  Juneau: 'United States',\n  Sitka: 'United States',\n  Metlakatla: 'United States',\n  Yakutat: 'United States',\n  Nome: 'United States',\n  Adak: 'United States',\n  Honolulu: 'United States',\n  Montevideo: 'Uruguay',\n  Samarkand: 'Uzbekistan',\n  Tashkent: 'Uzbekistan',\n  Caracas: 'Venezuela',\n  Ho_Chi_Minh: 'Vietnam',\n  Efate: 'Vanuatu',\n  Wallis: 'Wallis & Futuna',\n  Apia: 'Samoa (western)',\n  Johannesburg: 'South Africa',\n  Antigua: 'Antigua & Barbuda',\n  Anguilla: 'Anguilla',\n  Luanda: 'Angola',\n  McMurdo: 'Antarctica',\n  DumontDUrville: 'Antarctica',\n  Syowa: 'Antarctica',\n  Aruba: 'Aruba',\n  Mariehamn: 'Åland Islands',\n  Sarajevo: 'Bosnia & Herzegovina',\n  Ouagadougou: 'Burkina Faso',\n  Bahrain: 'Bahrain',\n  Bujumbura: 'Burundi',\n  'Porto-Novo': 'Benin',\n  St_Barthelemy: 'St Barthelemy',\n  Kralendijk: 'Caribbean NL',\n  Nassau: 'Bahamas',\n  Gaborone: 'Botswana',\n  'Blanc-Sablon': 'Canada',\n  Atikokan: 'Canada',\n  Creston: 'Canada',\n  Kinshasa: 'Congo (Dem. Rep.)',\n  Lubumbashi: 'Congo (Dem. Rep.)',\n  Bangui: 'Central African Rep.',\n  Brazzaville: 'Congo (Rep.)',\n  Douala: 'Cameroon',\n  Curacao: 'Curaçao',\n  Busingen: 'Germany',\n  Djibouti: 'Djibouti',\n  Dominica: 'Dominica',\n  Asmara: 'Eritrea',\n  Addis_Ababa: 'Ethiopia',\n  Libreville: 'Gabon',\n  Grenada: 'Grenada',\n  Guernsey: 'Guernsey',\n  Accra: 'Ghana',\n  Banjul: 'Gambia',\n  Conakry: 'Guinea',\n  Guadeloupe: 'Guadeloupe',\n  Malabo: 'Equatorial Guinea',\n  Zagreb: 'Croatia',\n  Isle_of_Man: 'Isle of Man',\n  Jersey: 'Jersey',\n  Phnom_Penh: 'Cambodia',\n  Comoro: 'Comoros',\n  St_Kitts: 'St Kitts & Nevis',\n  Kuwait: 'Kuwait',\n  Cayman: 'Cayman Islands',\n  Vientiane: 'Laos',\n  St_Lucia: 'St Lucia',\n  Vaduz: 'Liechtenstein',\n  Maseru: 'Lesotho',\n  Podgorica: 'Montenegro',\n  Marigot: 'St Martin (French)',\n  Antananarivo: 'Madagascar',\n  Skopje: 'North Macedonia',\n  Bamako: 'Mali',\n  Saipan: 'Northern Mariana Islands',\n  Nouakchott: 'Mauritania',\n  Montserrat: 'Montserrat',\n  Blantyre: 'Malawi',\n  Niamey: 'Niger',\n  Muscat: 'Oman',\n  Kigali: 'Rwanda',\n  St_Helena: 'St Helena',\n  Ljubljana: 'Slovenia',\n  Longyearbyen: 'Svalbard & Jan Mayen',\n  Bratislava: 'Slovakia',\n  Freetown: 'Sierra Leone',\n  San_Marino: 'San Marino',\n  Dakar: 'Senegal',\n  Mogadishu: 'Somalia',\n  Lower_Princes: 'St Maarten (Dutch)',\n  Mbabane: 'Eswatini (Swaziland)',\n  Lome: 'Togo',\n  Port_of_Spain: 'Trinidad & Tobago',\n  Dar_es_Salaam: 'Tanzania',\n  Kampala: 'Uganda',\n  Midway: 'US minor outlying islands',\n  Vatican: 'Vatican City',\n  St_Vincent: 'St Vincent',\n  Tortola: 'Virgin Islands (UK)',\n  St_Thomas: 'Virgin Islands (US)',\n  Aden: 'Yemen',\n  Mayotte: 'Mayotte',\n  Lusaka: 'Zambia',\n  Harare: 'Zimbabwe',\n};\n","import React, { useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useStateMachine } from 'little-state-machine';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as Yup from 'yup';\n\n// Icons\nimport { ReactComponent as ExclamationSVG } from 'assets/icons/exclamationCircle.svg';\n\n// Components\nimport CreatedBy from 'components/CreatedBy';\n\n// Modals\nimport CountryErrorModal from 'modals/CountryErrorModal';\n\n// Update Action\nimport { updateAction, resetStore } from 'utils/wizard';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Data\nimport { languageData } from 'data/lang';\nimport { countryData, countriesWithStates, CountryDataProps } from 'data/country';\nimport { timeZones } from 'data/timeZones';\n\n// Helper\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Styles\nimport {\n  WelcomeContent, WelcomeStyledForm, LogoSubtitle,\n  RegionContainer, ContainerNextButton, NextButton, ArrowRightSVG,\n  BoldBlackText, CustomPurpleText, WelcomeSelect, TextErrorContainer,\n} from '../style';\n\ndeclare interface OptionsProps {\n  label: string;\n  value: string;\n}\n\nconst invalidCountries = ['India', 'France', 'Italy', 'Netherlands', 'Belgium', 'Luxembourg', 'Germany', 'Pakistan'];\n\nconst schema = Yup.object().shape({\n  country: Yup.string().required().notOneOf(invalidCountries),\n  language: Yup.string().required(),\n  region: Yup.string().when('country', {\n    is: (val: string) => countriesWithStates.includes(val),\n    then: Yup.string().required('regionRequired'),\n    else: Yup.string(),\n  }),\n  patientId: Yup.string().when('$isClinical', {\n    is: true,\n    then: Yup.string().required(),\n    else: Yup.string().notRequired(),\n  }),\n  hospitalId: Yup.string().when('$isClinical', {\n    is: true,\n    then: Yup.string().required(),\n    else: Yup.string().notRequired(),\n  }),\n}).defined();\n\ntype Step1Type = Yup.InferType<typeof schema>;\n\nconst getCountry = async () => {\n  const res = await fetch('https://ipwho.is/');\n  const data = await res.json();\n\n  return data.country;\n};\n\nconst getCountryInfo = (countryName: string) => {\n  const countrySelected = countryData.find(country => country.label === countryName);\n\n  return countrySelected;\n};\n\nconst Step1 = (p: Wizard.StepProps) => {\n  const [activeStep, setActiveStep] = React.useState(true);\n  const [supportedLang, setSupportedLang] = React.useState<{ value: string; label: string; }[]>([]);\n  const [ipLimit, setIpLimit] = React.useState(false);\n\n  const {\n    setType, setDoGoBack, setLogoSize,\n  } = useHeaderContext();\n  const resetExecuted = React.useRef(false);\n\n  const { state, actions } = useStateMachine({ update: updateAction(p.storeKey), reset: resetStore() });\n\n  const store = state?.[p.storeKey];\n\n  const {\n    control,\n    formState,\n    handleSubmit,\n    watch,\n    setValue,\n    reset,\n  } = useForm({\n    defaultValues: store,\n    resolver: yupResolver(schema),\n    mode: 'onChange',\n  });\n\n  const history = useHistory();\n  const { isValid, errors } = formState;\n\n  useEffect(() => {\n    if (resetExecuted.current) {\n      resetExecuted.current = false;\n      reset(store);\n    }\n  }, [store, reset]);\n\n  const onSubmit = async (values: Step1Type) => {\n    if (values) {\n      actions.update(values);\n      if (p.nextStep) {\n        setActiveStep(false);\n        history.push(p.nextStep);\n      }\n    }\n  };\n\n  const resetRegion = () => {\n    setValue('region', '');\n  };\n\n  useEffect(() => {\n    scrollToTop();\n    // Hide back arrow in header if neccesary\n    setDoGoBack(null);\n    setType('tertiary');\n    setLogoSize('big');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const { t, i18n } = useTranslation();\n\n  const lang = watch('language');\n  const country = watch('country');\n\n  useEffect(() => {\n    i18n.changeLanguage(lang);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [i18n, lang]);\n\n  const invalidCountryModal = React.useMemo(() => invalidCountries.includes(country),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n    [country]);\n\n  const regionSelectOptions = useMemo(() => {\n    const output = [\n      { label: t('main:selectRegion'), value: '' },\n    ];\n    if (country) {\n      const elem = countryData.find(a => a.value === country);\n      if (elem) {\n        elem.states.forEach(s => {\n          output.push({ label: s, value: s });\n        });\n      }\n    }\n    return output;\n  }, [t, country]);\n\n  const getOptionsCountry = () => {\n    const options = countryData;\n    const formattedOptions = options.reduce((acc: CountryDataProps[], current) => {\n      acc.push({ ...current, label: t(`main:countries.${current.value}`) });\n      return acc;\n    }, []);\n    return formattedOptions;\n  };\n\n  useEffect(() => {\n    const localStorageCountry = localStorage.getItem('countryResult');\n    const virufyWizard = localStorage.getItem('compensar-app-wizard');\n    if (virufyWizard) {\n      const parsedVirufyWizard = JSON.parse(virufyWizard);\n      setValue('country', parsedVirufyWizard.welcome.country);\n      setValue('language', parsedVirufyWizard.welcome.language);\n      if (localStorageCountry) {\n        setSupportedLang(JSON.parse(localStorageCountry)?.supported);\n      }\n    } else if (localStorageCountry) {\n      const parsedLocalStorageCountry = JSON.parse(localStorageCountry);\n      setValue('country', parsedLocalStorageCountry.country);\n      setValue('language', parsedLocalStorageCountry.lang[0].value);\n      setSupportedLang(parsedLocalStorageCountry.supported);\n    } else {\n      getCountry()\n        .then(countryName => {\n          const cInfo = getCountryInfo(countryName);\n          const countryDataLS = {\n            country: countryName,\n            lang: cInfo?.defaultLang,\n            supported: cInfo?.supportedLang,\n          };\n          localStorage.setItem('countryResult', JSON.stringify(countryDataLS));\n          setValue('country', countryName);\n          if (cInfo) {\n            setValue('language', cInfo.defaultLang[0].value);\n            setSupportedLang(cInfo.supportedLang);\n          }\n          setIpLimit(false);\n        })\n        .catch(error => {\n          console.error(error);\n          setIpLimit(true);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (ipLimit && Intl) {\n      const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      const tzArr = userTimeZone.split('/');\n      const userCity = tzArr[tzArr.length - 1];\n      const userCountry = timeZones[userCity];\n      const cInfo = getCountryInfo(userCountry);\n      setValue('country', userCountry);\n      if (cInfo) {\n        setValue('language', cInfo.defaultLang[0].value);\n        setSupportedLang(cInfo.supportedLang);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ipLimit]);\n\n  return (\n    <>\n      <WelcomeStyledForm>\n        <LogoSubtitle>\n          {t('main:logoIntro', 'An Independent Nonprofit Research Organization')}\n        </LogoSubtitle>\n        <WelcomeContent mt={4}>\n          <CustomPurpleText mb={8}>\n            {t('main:paragraph2', 'Covid-19 Cough Data Collection Study')}\n          </CustomPurpleText>\n          <BoldBlackText>\n            {t('main:selectYourLanguage', 'Language')}\n          </BoldBlackText>\n\n          {/* Language */}\n          <Controller\n            control={control}\n            name=\"language\"\n            defaultValue={languageData[0].value}\n            render={({ onChange, value: valueController }) => (\n              <WelcomeSelect\n                placeholder={t('main.selectYourLanguage', 'Language')}\n                options={supportedLang}\n                onChange={(e: any) => { onChange(e?.value); }}\n                value={languageData.filter(({ value }) => value === valueController)}\n                className=\"custom-select\"\n                classNamePrefix=\"custom-select\"\n                isDisabled={supportedLang?.length <= 1}\n              />\n            )}\n          />\n\n          <BoldBlackText>\n            {t('main:selectLocation', 'Location')}\n          </BoldBlackText>\n\n          <Controller\n            control={control}\n            name=\"country\"\n            defaultValue=\"\"\n            render={({ onChange, value: valueController }) => (\n              <WelcomeSelect\n                placeholder={t('main:selectCountry', 'Select country')}\n                options={getOptionsCountry()}\n                onChange={(e: any) => {\n                  onChange(e?.value);\n                  resetRegion();\n                  const cInfo = getCountryInfo(e.value);\n                  if (cInfo) {\n                    setSupportedLang(cInfo.supportedLang);\n                    setValue('language', cInfo.defaultLang[0].value);\n                  }\n                }}\n                value={getOptionsCountry().filter(({ value }) => value === valueController)}\n                className=\"custom-select\"\n                classNamePrefix=\"custom-select\"\n                noOptionsMessage={({ inputValue }) => (\n                  !inputValue ? `${t('main:noOptionsError')}` : `${t('main:noValueError')}`\n                )}\n              />\n            )}\n          />\n\n          <Controller\n            control={control}\n            name=\"region\"\n            defaultValue=\"\"\n            render={({ onChange, value: valueController }) => (regionSelectOptions.length > 1 ? (\n              <>\n                <BoldBlackText>\n                  {t('main:region', 'Region')}\n                </BoldBlackText>\n\n                <RegionContainer>\n                  <WelcomeSelect\n                    options={regionSelectOptions}\n                    onChange={(e: any) => { onChange(e?.value); }}\n                    value={regionSelectOptions.filter(({ value }) => value === valueController) || ''}\n                    className=\"custom-select\"\n                    classNamePrefix=\"custom-select\"\n                    error={errors.region}\n                  />\n                  {errors.region && (\n                    <TextErrorContainer>\n                      <ExclamationSVG />\n                      {t(errors.region.message, 'Please select a region')}\n                    </TextErrorContainer>\n                  )}\n                </RegionContainer>\n              </>\n            ) : <></>)}\n          />\n          {\n            activeStep && (\n              <>\n                <ContainerNextButton>\n                  <NextButton\n                    onClick={handleSubmit(onSubmit)}\n                    isDisable={!isValid}\n                  >\n                    <ArrowRightSVG />\n                  </NextButton>\n                </ContainerNextButton>\n                <CreatedBy inline />\n              </>\n            )\n          }\n        </WelcomeContent>\n      </WelcomeStyledForm>\n      <CountryErrorModal\n        isOpen={invalidCountryModal}\n        modalTitle=\"Oops.\"\n      >\n        {t('main:errorCountry', 'We are unable to collect coughs from your region at this time. Check back with us soon!')}\n      </CountryErrorModal>\n    </>\n  );\n};\n\nexport default React.memo(Step1);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M33.1126 23.4949C33.5678 23.0481 34.0222 22.7015 34.4259 22.4046C34.8292 22.1578 35.2325 21.911 35.5847 21.7639C35.9876 21.5672 36.3908 21.3204 36.6433 21.1223C36.9965 20.875 37.3005 20.5271 37.5558 20.0283C37.9118 19.4803 38.5656 19.2358 39.3675 19.2434C40.1192 19.2505 40.9192 19.4585 41.8671 19.9185C42.8652 20.3789 43.7115 20.9883 44.5559 21.7982C45.4004 22.6081 46.0434 23.5163 46.5838 24.6742C47.1748 25.7824 47.4637 27.0381 47.3995 28.5411C47.3362 29.9439 46.9211 31.4436 46.1543 33.0402C45.3368 34.6865 44.0178 36.3782 42.1966 38.1653C41.287 38.9587 40.3282 39.6514 39.2209 40.1422C38.1643 40.5833 37.0097 40.7729 36.0074 40.7635C34.955 40.7536 33.9545 40.5437 33.0567 40.0841C32.1588 39.6246 31.4638 38.9164 30.8208 38.0082C30.2279 37.1004 29.8374 35.9941 29.5475 34.8386C29.3083 33.6335 29.2695 32.4302 29.4321 31.1286C29.5947 29.827 29.9582 28.4772 30.5213 27.2295C31.1354 25.882 32.0493 24.6376 33.1126 23.4949ZM34.2055 35.1832C34.7468 36.2408 35.4437 36.7486 36.3458 36.757C37.0474 36.7636 37.7022 36.419 38.4109 35.6738C39.2705 34.88 39.9305 33.984 40.5909 33.038C41.2509 32.142 41.6608 31.1936 41.9203 30.2437C42.23 29.2944 42.239 28.3422 41.9969 27.4377C41.7552 26.4832 41.2626 25.5764 40.4683 24.767C39.7231 24.0583 39.0749 23.7013 38.4234 23.6952C37.822 23.6895 37.2684 23.9349 36.7119 24.481C36.2061 24.9775 35.6988 25.6243 35.1896 26.4715C34.7315 27.219 34.3736 27.9674 34.1651 28.8175C33.9571 29.6175 33.8484 30.5186 33.7907 31.32C33.7331 32.1214 33.7761 32.8736 33.8192 33.6258C33.8631 34.2778 34.0589 34.7808 34.2055 35.1832Z\",\n  fill: \"url(#paint0_linear_1027_869)\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M53.2578 23.6845C53.7131 23.2377 54.1674 22.8912 54.5712 22.5943C54.9745 22.3475 55.3778 22.1006 55.73 21.9536C56.1328 21.7569 56.5361 21.5101 56.8387 21.3125C57.1417 21.0647 57.4457 20.7167 57.7511 20.2184C58.1071 19.6704 58.7109 19.4255 59.5628 19.4335C60.3146 19.4406 61.1145 19.6486 62.0124 20.1081C62.9603 20.5681 63.8568 21.178 64.6511 21.9874C65.4454 22.7968 66.1385 23.7055 66.6789 24.8634C67.27 25.9716 67.5087 27.2268 67.4445 28.7298C67.3812 30.1326 66.9661 31.6323 66.1491 33.2285C65.3317 34.8747 64.0628 36.5669 62.1915 38.3536C61.332 39.1475 60.3231 39.8396 59.2158 40.3304C58.109 40.7711 57.0547 40.9617 56.0023 40.9518C54.9499 40.9418 53.9494 40.732 53.0516 40.2724C52.2039 39.8134 51.4587 39.1047 50.8157 38.1964C50.2228 37.2887 49.7821 36.1819 49.5424 35.0269C49.3031 33.8217 49.3145 32.619 49.427 31.3169C49.5896 30.0153 49.9531 28.6655 50.5663 27.4182C51.2806 26.0717 52.1945 24.8273 53.2578 23.6845ZM54.3507 35.3729C54.8921 36.4305 55.589 36.9382 56.4409 36.9463C57.1426 36.9529 57.7974 36.6082 58.5061 35.863C59.3155 35.0687 60.0757 34.1737 60.6359 33.2267C61.2959 32.3308 61.7058 31.3823 61.9654 30.4325C62.2249 29.4826 62.284 28.5309 62.0419 27.6265C61.8003 26.6719 61.3076 25.7651 60.5133 24.9557C59.7681 24.247 59.1199 23.8901 58.4684 23.8839C57.867 23.8783 57.3134 24.1237 56.757 24.6698C56.2511 25.1662 55.7438 25.813 55.2346 26.6602C54.7765 27.4077 54.4186 28.1562 54.16 29.0058C53.952 29.8058 53.8433 30.7069 53.7856 31.5083C53.728 32.3097 53.771 33.0619 53.814 33.8141C54.0084 34.4675 54.154 34.97 54.3507 35.3729Z\",\n  fill: \"url(#paint1_linear_1027_869)\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M86.9972 36.9012C86.9496 36.5424 86.8506 36.2344 86.7012 35.8746C86.4519 35.3092 85.7951 34.7399 84.8318 34.2701C83.8689 33.7492 82.8038 33.2784 81.6867 32.9096C80.5701 32.4895 79.5039 32.1212 78.4882 31.8045C77.524 31.4371 76.9152 31.1754 76.6625 30.9682C76.8158 30.9185 77.2246 30.7688 77.8387 30.4674C78.4532 30.1149 79.1696 29.7633 79.9379 29.3098C80.7061 28.8563 81.4235 28.4023 82.1922 27.8977C82.961 27.393 83.5251 26.9888 83.9354 26.6855C84.8598 25.8752 85.3259 25.0605 85.3331 24.2927C85.3404 23.5249 84.9901 22.8561 84.3343 22.1845C83.6785 21.5128 82.818 20.9417 81.7523 20.5221C80.6871 20.0514 79.5186 19.7332 78.2978 19.5682C77.5348 19.4586 76.7713 19.4002 76.0583 19.3935C75.0907 19.3844 74.3757 19.5824 73.9145 19.8853C73.5042 20.1885 73.2447 20.698 73.0856 21.362C72.9266 22.026 72.8166 22.8952 72.7555 23.9696C72.6945 25.044 72.5296 26.3222 72.2101 27.8037C72.1563 28.1104 72.1025 28.417 71.9473 28.6715C71.8939 28.9269 71.6883 29.1298 71.3808 29.3316C70.4583 29.9372 70.2468 30.7543 70.6965 31.68C71.0972 32.4004 71.1909 33.2715 71.0294 34.1914C70.8675 35.1625 70.706 36.0824 70.4437 36.899C70.3884 37.3592 70.2298 37.972 70.1741 38.4834C70.1693 38.9952 70.164 39.5583 70.1592 40.0701C70.1558 40.4284 70.2038 40.736 70.3028 41.0441C70.4018 41.3522 70.6545 41.5593 71.0605 41.7167C71.5683 41.8751 71.9763 41.8277 72.2833 41.677C72.6417 41.4756 72.8997 41.1197 73.1083 40.6098C73.3168 40.0999 73.5273 39.3852 73.6368 38.5672C73.7973 37.7496 73.9593 36.7785 74.1736 35.6543C74.2274 35.3477 74.2807 35.0923 74.2817 34.9899C74.3341 34.8368 74.4873 34.7871 74.742 34.7895C75.098 34.844 75.7577 35.1062 76.7215 35.5248C77.6853 35.9433 79.2578 36.6236 81.4401 37.4632C82.4553 37.8311 83.5724 38.1999 84.6895 38.5688C85.5533 38.7817 86.2678 38.6348 86.7314 38.0761C86.9909 37.5666 87.0961 37.2093 86.9972 36.9012ZM75.3303 26.3998C75.3932 25.1206 75.4533 24.1485 75.4596 23.4831C75.5168 22.8182 75.5725 22.3068 75.6259 22.0514C75.7306 21.7452 75.8844 21.6443 76.0881 21.6462C76.1899 21.6471 76.2918 21.6481 76.4446 21.6495C76.4955 21.65 78.2242 21.9734 79.3379 22.7006C80.0461 23.2191 80.5491 23.8893 79.9803 24.8054C79.9803 24.8054 79.4671 25.2101 78.6983 25.7148C78.4937 25.8152 78.3394 25.9674 78.1348 26.0678C77.6226 26.3701 77.1104 26.6725 76.5987 26.9236C76.5478 26.9231 76.5473 26.9743 76.4963 26.9738C76.0361 27.1743 75.7295 27.2738 75.5263 27.2207C75.373 27.2704 75.274 26.9623 75.3303 26.3998Z\",\n  fill: \"url(#paint2_linear_1027_869)\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M28.9673 6.8334C28.0149 7.85317 25.2552 10.8081 23.1809 13.2762C23.1809 13.2762 20.1225 17.3175 17.3239 21.017C16.9667 19.7875 16.6209 18.5513 16.2836 17.3014C16.2101 17.0293 16.1368 16.7569 16.0636 16.4847C14.1092 9.223 12.1863 2.07815 8.6046 3.1064C5.61461 3.96477 6.67727 10.0345 7.43236 14.3475C7.56501 15.1052 7.68816 15.8086 7.77818 16.4201C8.24334 19.5793 9.22788 24.3864 10.9285 29.9935C10.0207 31.4187 9.14125 32.8654 8.16381 34.4733C8.00705 34.7312 7.84777 34.9932 7.68544 35.26C6.81814 36.6852 6.01677 37.9512 5.29607 39.0897C3.81201 41.4341 2.67002 43.2382 1.99884 44.7798C1.90249 45.0011 1.77892 45.2628 1.64085 45.5552C0.537883 47.8907 -1.49088 52.1867 2.02869 53.5302C4.8906 54.6245 6.2506 52.0192 7.6237 49.3888C7.8432 48.9683 8.06304 48.5471 8.2894 48.1403C9.47248 46.0127 10.5171 43.9675 11.5482 41.9488C12.2042 40.6645 12.8548 39.3908 13.532 38.1135C13.5694 38.043 13.608 37.9703 13.6478 37.8955C14.0599 38.9616 14.4962 40.0403 14.9576 41.1273C18.1056 48.5432 21.6415 53.9852 23.8377 55.4081C26.034 56.8311 28.4369 56.2783 29.3506 54.9848C30.0434 54.0039 28.5139 50.4676 26.282 45.3076C25.5708 43.6633 24.7882 41.8541 23.9836 39.9101C22.1947 35.5884 20.6921 31.5586 19.3694 27.5865C20.1183 26.2966 20.7619 25.2279 21.1792 24.6076C22.6765 22.3821 25.2729 18.7406 26.6599 16.9628C27.6127 15.7414 28.7935 14.3178 29.6916 13.235C30.1007 12.7418 30.4512 12.3193 30.6948 12.0187C31.1603 11.4427 32.2882 10.1607 33.543 8.73467C35.3803 6.64645 37.4894 4.24926 38.1887 3.30715C39.3655 1.72165 38.4523 -0.650755 35.9126 0.795712C34.3497 1.68646 30.9177 4.72712 29.0315 6.76468L28.9673 6.8334Z\",\n  fill: \"url(#paint3_linear_1027_869)\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"paint0_linear_1027_869\",\n  x1: 33.7939,\n  y1: 34.2876,\n  x2: 43.1238,\n  y2: 17.7842,\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#30D4C6\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.643486,\n  stopColor: \"#00A8E0\"\n})), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"paint1_linear_1027_869\",\n  x1: 53.818,\n  y1: 34.4762,\n  x2: 63.1401,\n  y2: 17.9602,\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#30D4C6\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.643486,\n  stopColor: \"#00A8E0\"\n})), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"paint2_linear_1027_869\",\n  x1: 74.3877,\n  y1: 35.1128,\n  x2: 84.6309,\n  y2: 18.8536,\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#30D4C6\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.643486,\n  stopColor: \"#00A8E0\"\n})), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"paint3_linear_1027_869\",\n  x1: 9.63575,\n  y1: 39.3147,\n  x2: 36.1524,\n  y2: 1.01724,\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#30D4C6\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0.643486,\n  stopColor: \"#00A8E0\"\n})));\n\nvar SvgLogoXoor = function SvgLogoXoor(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 88,\n    height: 57,\n    viewBox: \"0 0 88 57\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogoXoor, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo-xoor.311fc725.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nimport { ReactComponent as LogoXoorSVG } from 'assets/images/logo-xoor.svg';\n\nexport const Container = styled.div<{ inline: boolean; mt?: string; }>`\n  display: flex;\n  justify-content: ${({ inline }) => (inline ? 'center' : 'flex-end')};\n  align-items: center;\n  flex-direction: ${({ inline }) => (inline ? 'row' : 'column')};\n  margin-top: ${({ mt }) => mt || '22px'};\n  > * {\n    margin: ${({ inline }) => (inline ? '0px 5px' : '5px 0px')};\n  }\n`;\n\nexport const Label = styled.div<{ color?: string; }>`\n  font-family: \"Open Sans\";\n  font-size: 0.875rem;\n  font-weight: 700;\n  color: ${({ color }) => color || '#393939'};\n`;\n\nexport const Image = styled(LogoXoorSVG)`\n  width: 60px;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// Style\nimport { Container, Label, Image } from './style';\n\ninterface CreatedByProps {\n  inline?: boolean;\n  mt?: string;\n  color?: string;\n}\n\nconst CreatedBy = ({ inline = false, mt, color }: CreatedByProps) => {\n  const { t } = useTranslation();\n  return (\n    <Container inline={inline} mt={mt}>\n      <Label color={color}>{t('main:createdBy', 'Created By')}</Label>\n      <a href=\"https://xoor.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <Image />\n      </a>\n    </Container>\n  );\n};\n\nexport default CreatedBy;\n","export { default } from './Step1';\n"],"sourceRoot":""}