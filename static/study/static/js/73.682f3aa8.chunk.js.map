{"version":3,"sources":["../node_modules/little-state-machine/dist/little-state-machine.es.js","components/OptionList/style.ts","components/OptionList/OptionList.tsx","containers/SubmitSteps/Questionary/Step1f/Step1f.tsx"],"names":["getBrowserStoreData","storageType","storeName","sessionStorageData","getItem","JSON","parse","undefined","_a","storeFactory","name","store","set","value","get","getName","isUndefined","val","setUpDevTools","isDevMode","getStore","window","STATE_MACHINE_DEBUG","setItem","STATE_MACHINE_RESET","clear","STATE_MACHINE_GET_STORE","STATE_MACHINE_SAVE_TO","localStorage","stringify","STATE_MACHINE_LOAD","data","StateMachineContext","createContext","updateStore","payload","transformStore","transform","externalStoreName","externalStoreData","currentStoreData","getSyncStoreData","defaultStoreData","options","syncStoreOption","syncStores","Array","isArray","forEach","option","Object","entries","key","values","browserStore","assign","setStore","isClient","sessionStorage","length","toString","removeItem","middleWaresArray","setStorageType","type","createStore","middleWares","methods","process","StateMachineProvider","props","useState","globalState","useMemo","createElement","Provider","actionTemplate","callback","result","shouldReRenderApp","pipeData","reduce","currentValue","currentFunction","useStateMachine","updateStoreFunction","useContext","keys","actions","previous","useCallback","action","p","state","OptionListItem","styled","button","theme","colors","darkBlack","isSelected","purple_10","mercury","breakpoints","tablet","OptionListItemLabel","span","OptionListAddOtherButton","OptionListCheck","div","checkbox","purple","OptionListInputContainer","OptionListInput","input","green_25","darkBlack_04","midDarkGray","defaultValue","selected","other","OptionList","items","excludableValues","singleSelection","isCheckbox","onChange","allowAddOther","addOtherLabel","enableOther","otherPlaceholder","showOtherInput","setShowOtherInput","useEffect","otherChangeHandler","newOtherVaue","newSelected","some","item","includes","map","index","lastItem","onClick","selectedItem","newOtherValue","indexOf","slice","selectItem","label","placeholder","e","target","defaultProps","React","memo","schemaWithoutPatient","Yup","typeCovidFlu","required","defined","previousStep","nextStep","storeKey","metadata","otherSteps","Portal","usePortal","bindTo","document","getElementById","useHeaderContext","setDoGoBack","setTitle","setSubtitle","setType","history","useHistory","t","useTranslation","updateAction","patientId","getPatientId","country","getCountry","activeStep","setActiveStep","useForm","mode","defaultValues","context","resolver","yupResolver","control","handleSubmit","formState","watch","errors","isValid","handleDoBack","push","goBack","watchedtypeCovidFlu","customTotalSteps","every","i","scrollToTop","onSubmit","a","antigenTaken","PCRTaken","fluTaken","antigenTakenStep","PCRTakenStep","fluTakenStep","extraSpace","first","currentStep","current","totalSteps","progressBar","render","v","message","leftLabel","leftHandler","leftDisabled","invert"],"mappings":"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","file":"static/js/73.682f3aa8.chunk.js","sourcesContent":["import { createContext, useState, useMemo, createElement, useContext, useCallback } from 'react';\n\nconst STORE_DEFAULT_NAME = '__STATE_MACHINE__';\r\nconst STORE_ACTION_NAME = '__STATE_MACHINE_ACTION_NAME__';\r\nconst STATE_MACHINE_DEBUG_NAME = '___STATE_MACHINE_DEBUG__';\n\nvar getBrowserStoreData = (storageType, storeName) => {\r\n    const sessionStorageData = storageType.getItem(storeName);\r\n    try {\r\n        return sessionStorageData ? JSON.parse(sessionStorageData) : undefined;\r\n    }\r\n    catch (_a) {\r\n        return undefined;\r\n    }\r\n};\n\nfunction storeFactory(storageType, name) {\r\n    const storeName = name || STORE_DEFAULT_NAME;\r\n    let store = getBrowserStoreData(storageType, storeName);\r\n    const getName = () => storeName;\r\n    const set = (value) => {\r\n        store = value;\r\n    };\r\n    const get = () => store;\r\n    return {\r\n        set,\r\n        get,\r\n        getName,\r\n    };\r\n}\n\nvar isUndefined = (val) => val === undefined;\n\nfunction setUpDevTools(isDevMode, storageType, getName, getStore) {\r\n    if (typeof window === 'undefined' || !isDevMode)\r\n        return;\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_DEBUG = (value) => storageType.setItem(STATE_MACHINE_DEBUG_NAME, value);\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_RESET = () => storageType.clear();\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_GET_STORE = () => storageType.getItem(getName());\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_SAVE_TO = name => window.localStorage.setItem(name, JSON.stringify(getStore()));\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_LOAD = ({ storeName, data, }) => storageType.setItem(getName() || STATE_MACHINE_DEBUG_NAME, data || window.localStorage.getItem(storeName) || '');\r\n}\n\nvar StateMachineContext = createContext({\r\n    store: {},\r\n    updateStore: (payload) => payload,\r\n});\n\nvar transformStore = ({ transform, externalStoreName, storageType, store, }) => transform({\r\n    externalStoreData: getBrowserStoreData(storageType, externalStoreName),\r\n    currentStoreData: store,\r\n});\n\nfunction getSyncStoreData(defaultStoreData, options, storageType) {\r\n    let store = defaultStoreData;\r\n    const syncStoreOption = options.syncStores;\r\n    if (!syncStoreOption)\r\n        return store;\r\n    try {\r\n        if (Array.isArray(syncStoreOption)) {\r\n            syncStoreOption.forEach(option => {\r\n                store = transformStore({\r\n                    transform: option.transform,\r\n                    externalStoreName: option.externalStoreName,\r\n                    storageType,\r\n                    store,\r\n                });\r\n            });\r\n        }\r\n        else if (syncStoreOption.externalStoreName &&\r\n            typeof syncStoreOption.transform === 'function' &&\r\n            typeof syncStoreOption.externalStoreName === 'string') {\r\n            return transformStore({\r\n                transform: syncStoreOption.transform,\r\n                externalStoreName: syncStoreOption.externalStoreName,\r\n                storageType,\r\n                store,\r\n            });\r\n        }\r\n        else {\r\n            Object.entries(syncStoreOption).forEach(([key, values]) => {\r\n                const browserStore = getBrowserStoreData(storageType, key);\r\n                values.forEach((value) => {\r\n                    store = Object.assign(Object.assign({}, store), {\r\n                        [value]: Object.assign(Object.assign({}, store[value]), browserStore[value]),\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n    catch (_a) {\r\n        return store;\r\n    }\r\n    return store;\r\n}\n\nconst isClient = typeof window !== 'undefined';\r\nconst isDevMode = process.env.NODE_ENV !== 'production';\r\nlet storageType = isClient\r\n    ? window.sessionStorage\r\n    : {\r\n        getItem: payload => payload,\r\n        setItem: (payload) => payload,\r\n        clear: () => { },\r\n        length: 0,\r\n        key: (payload) => payload.toString(),\r\n        removeItem: () => { },\r\n    };\r\nlet getStore;\r\nlet setStore;\r\nlet getName;\r\nlet middleWaresArray = [];\r\nconst middleWare = (data = '') => {\r\n    if (data && isClient) {\r\n        // @ts-ignore\r\n        window[STORE_ACTION_NAME] = data;\r\n    }\r\n    return data;\r\n};\r\nfunction setStorageType(type) {\r\n    storageType = type;\r\n}\r\nfunction createStore(defaultStoreData, options = {\r\n    name: STORE_DEFAULT_NAME,\r\n    middleWares: [],\r\n    syncStores: undefined,\r\n}) {\r\n    const storeName = options ? options.name : STORE_DEFAULT_NAME;\r\n    const methods = storeFactory(storageType, storeName);\r\n    if (isDevMode && isClient) {\r\n        // @ts-ignore\r\n        window['STATE_MACHINE_NAME'] = storeName;\r\n    }\r\n    getName = methods.getName;\r\n    getStore = methods.get;\r\n    setStore = methods.set;\r\n    middleWaresArray = options.middleWares;\r\n    setUpDevTools(isDevMode, storageType, getName, getStore);\r\n    setStore(getSyncStoreData(getStore() || defaultStoreData, options, storageType));\r\n}\r\nfunction StateMachineProvider(props) {\r\n    const [globalState, updateStore] = useState(getStore());\r\n    const value = useMemo(() => ({\r\n        store: globalState,\r\n        updateStore,\r\n    }), [globalState]);\r\n    // @ts-ignore\r\n    return createElement(StateMachineContext.Provider, Object.assign({ value: value }, props));\r\n}\r\nconst actionTemplate = ({ options, callback, updateStore, }) => (payload) => {\r\n    let result;\r\n    const debugName = callback ? callback.name : '';\r\n    if (isDevMode) {\r\n        middleWare(debugName);\r\n    }\r\n    if (callback) {\r\n        result = callback(getStore(), payload);\r\n    }\r\n    setStore(isUndefined(result) ? getStore() : result);\r\n    storageType.setItem(getName(), JSON.stringify(getStore()));\r\n    if (isUndefined(options) ||\r\n        (options && options.shouldReRenderApp !== false)) {\r\n        let pipeData = getStore();\r\n        if (Array.isArray(middleWaresArray) && middleWaresArray.length) {\r\n            pipeData = middleWaresArray.reduce((currentValue, currentFunction) => currentFunction(currentValue) || currentValue, pipeData);\r\n        }\r\n        updateStore(pipeData);\r\n    }\r\n};\r\nfunction useStateMachine(updateStoreFunction, options) {\r\n    const { store: globalState, updateStore } = useContext(StateMachineContext);\r\n    if (updateStoreFunction && Object.keys(updateStoreFunction).length) {\r\n        return {\r\n            actions: Object.entries(updateStoreFunction).reduce((previous, [key, callback]) => (Object.assign(Object.assign({}, previous), { [key]: useCallback(actionTemplate({\r\n                    options,\r\n                    callback,\r\n                    updateStore,\r\n                }), []) })), {}),\r\n            action: p => p,\r\n            state: globalState,\r\n        };\r\n    }\r\n    return {\r\n        actions: {},\r\n        action: useCallback(updateStoreFunction\r\n            ? actionTemplate({\r\n                options,\r\n                callback: updateStoreFunction,\r\n                updateStore,\r\n            })\r\n            : () => { }, []),\r\n        state: globalState,\r\n    };\r\n}\n\nexport { StateMachineContext, StateMachineProvider, createStore, setStorageType, useStateMachine };\n","import styled from 'styled-components';\n\nexport const OptionListItem = styled.button<{lastItem: boolean; isSelected?: boolean}>`\n  width: 100%;\n  height: 50px;\n  position: relative;\n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  color: ${props => props.theme.colors.darkBlack};\n  font-size: 14px;\n  text-align: left;\n  padding: 0 20px;\n  margin: 3px auto;\n  border: none;\n  border-radius: 10px;\n  background-color: ${props => (props.isSelected ? props.theme.colors.purple_10 : props.theme.colors.mercury)};\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n    text-align: left;\n  }\n`;\n\nexport const OptionListItemLabel = styled.span`\n  display: block;\n  width: 250px;\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    width: auto;\n    text-align: left;\n    margin: auto;\n  }\n`;\n\nexport const OptionListAddOtherButton = styled(OptionListItem)`\n  font-weight: bold;\n`;\n\nexport const OptionListCheck = styled.div<{ isSelected?: boolean; checkbox?: boolean }>`\n  width: 22px;\n  height: 22px; \n  border-radius: ${props => (props.checkbox ? '10%' : '50%')};\n  border: 3px solid ${props => (props.isSelected ? props.theme.colors.purple : '#C1C1C1')};\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin-top: 14px;\n  margin-right: 29px;\n  \n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    margin-right: 31px;\n  }\n\n  &:after{\n    content: '';\n    position: absolute; \n    left: ${props => (props.checkbox ? '0%' : '2px')}; \n    top: ${props => (props.checkbox ? '0%' : '2px')};\n    height: ${props => (props.checkbox ? '16px' : '12px')};\n    width: ${props => (props.checkbox ? '16px' : '12px')};\n    border-radius: ${props => (props.checkbox ? '0%' : '50%')};\n    background-color: ${props => (props.checkbox ? props.theme.colors.purple_10 : props.theme.colors.purple)}; \n    display: ${props => (props.isSelected ? 'block' : 'none')};\n    background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 16 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14.0005 2L6.00018 10L2 6.00018' stroke='%233578DE' stroke-width='2.18192' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E\");\n    background-repeat: no-repeat;\n    background-size: 16px 16px;\n  }\n`;\n\nexport const OptionListInputContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  width: calc(100% + 40px);\n  margin: 0 -20px;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n\nexport const OptionListInput = styled.input<{isSelected: boolean}>`\n  height: 50px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  color: ${props => props.theme.colors.darkBlack};\n  width: 100%;\n  padding: 0 20px;\n  border: none;\n  background-color: ${props => (props.isSelected ? props.theme.colors.green_25 : 'transparent')};\n  border-top: 1px ${props => props.theme.colors.darkBlack_04} solid;\n  border-bottom: 1px ${props => props.theme.colors.darkBlack_04} solid;\n  ::placeholder {\n    color: ${props => props.theme.colors.midDarkGray};\n  }\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    text-align: center;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  OptionListAddOtherButton,\n  OptionListCheck, OptionListInput,\n  OptionListInputContainer,\n  OptionListItem,\n  OptionListItemLabel,\n} from './style';\n\ninterface OptionListItemProps {\n  value: string;\n  label: string;\n  excludable?: boolean;\n}\ninterface OptionListValue {\n  selected: string[];\n  other?: string;\n}\n\ninterface OptionListProps {\n  value?: OptionListValue;\n  items: OptionListItemProps[];\n  excludableValues?: string[];\n  singleSelection?: boolean;\n  onChange?: (value: OptionListValue) => void;\n  allowAddOther?: boolean;\n  addOtherLabel?: string;\n  enableOther?: boolean;\n  otherPlaceholder?: string;\n  isCheckbox?: boolean;\n}\nconst defaultValue = { selected: [], other: '' };\nconst OptionList = ({\n  value = defaultValue, items, excludableValues, singleSelection, isCheckbox,\n  onChange, allowAddOther, addOtherLabel, enableOther, otherPlaceholder,\n}: OptionListProps) => {\n  const [showOtherInput, setShowOtherInput] = useState(false);\n\n  useEffect(() => {\n    setShowOtherInput(!!enableOther || !!value?.other);\n  }, [value, enableOther]);\n\n  const selectItem = (selectedItem: OptionListItemProps) => {\n    const { selected, other } = value;\n    let newSelected: string[];\n    let newOtherValue: string | undefined;\n\n    const index = selected.indexOf(selectedItem.value);\n\n    if (index >= 0) {\n      newSelected = [...selected.slice(0, index), ...selected.slice(index + 1)];\n      newOtherValue = other;\n    } else if (singleSelection) {\n      newSelected = [selectedItem.value];\n      newOtherValue = undefined;\n    } else if (excludableValues?.includes(selectedItem.value)\n    || (excludableValues && selected.some(item => excludableValues.includes(item)))) {\n      newSelected = [selectedItem.value];\n      newOtherValue = undefined;\n    } else {\n      newSelected = [...selected, selectedItem.value];\n      newOtherValue = other;\n    }\n\n    if (onChange) {\n      onChange({\n        selected: newSelected,\n        other: newOtherValue,\n      });\n    }\n  };\n\n  const otherChangeHandler = (newOtherVaue: string) => {\n    const { selected } = value;\n    let newSelected: string[];\n\n    if (singleSelection || (excludableValues && selected.some(item => excludableValues.includes(item)))) {\n      newSelected = [];\n    } else {\n      newSelected = selected;\n    }\n\n    if (onChange) {\n      onChange({\n        selected: newSelected,\n        other: newOtherVaue,\n      });\n    }\n\n    if (!newOtherVaue) {\n      setShowOtherInput(false);\n    }\n  };\n\n  const addOtherClickHandler = () => {\n    setShowOtherInput(true);\n  };\n\n  return (\n    <>\n      {items.map((item, index) => {\n        const isSelected = value?.selected?.includes(item.value);\n        return (\n          <OptionListItem\n            key={item.value}\n            lastItem={items.length === index + 1 && !allowAddOther && !enableOther}\n            onClick={() => selectItem(item)}\n            isSelected={isSelected}\n          >\n            <OptionListItemLabel>\n              {item.label}\n            </OptionListItemLabel>\n            <OptionListCheck isSelected={isSelected} checkbox={isCheckbox} />\n          </OptionListItem>\n        );\n      })}\n      {allowAddOther && !showOtherInput && (\n      <OptionListAddOtherButton onClick={addOtherClickHandler} lastItem>\n        {addOtherLabel}\n      </OptionListAddOtherButton>\n      )}\n      {showOtherInput && (\n        <OptionListInputContainer>\n          <OptionListInput\n            placeholder={otherPlaceholder}\n            value={value?.other || ''}\n            isSelected={!!(value?.other)}\n            onChange={e => otherChangeHandler(e.target.value)}\n          />\n          {!!(value?.other) && (\n            <OptionListCheck />\n          )}\n        </OptionListInputContainer>\n      )}\n    </>\n  );\n};\n\nOptionList.defaultProps = {\n  value: defaultValue,\n  excludableValues: undefined,\n  singleSelection: false,\n  onChange: undefined,\n  allowAddOther: false,\n  addOtherLabel: '',\n  enableOther: false,\n  otherPlaceholder: '',\n};\n\nexport default React.memo(OptionList);\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport usePortal from 'react-useportal';\nimport { useTranslation } from 'react-i18next';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers';\nimport { ErrorMessage } from '@hookform/error-message';\nimport * as Yup from 'yup';\n\n// Helper\nimport { getPatientId, getCountry } from 'helper/stepsDefinitions';\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Utils\nimport { updateAction } from 'utils/wizard';\n\n// Hooks\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Components\nimport WizardButtons from 'components/WizardButtons';\nimport ProgressIndicator from 'components/ProgressIndicator';\nimport OptionList from 'components/OptionList';\n\n// Styles\nimport {\n  QuestionText, MainContainer, QuestionAllApply, WomanWithPhone,\n} from '../style';\n\nconst schemaWithoutPatient = Yup.object({\n  typeCovidFlu: Yup.object({\n    selected: Yup.array().required(),\n  }),\n}).defined();\n\ntype Step1fType = Yup.InferType<typeof schemaWithoutPatient>;\n\nconst Step1f = ({\n  previousStep,\n  nextStep,\n  storeKey,\n  metadata,\n  otherSteps,\n}: Wizard.StepProps) => {\n  // Hooks\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const {\n    setDoGoBack, setTitle, setSubtitle, setType,\n  } = useHeaderContext();\n  const history = useHistory();\n  const { t } = useTranslation();\n  const { state, action } = useStateMachine(updateAction(storeKey));\n  const patientId = getPatientId();\n  const country = getCountry();\n\n  // States\n  const [activeStep, setActiveStep] = React.useState(true);\n\n  // Form\n  const {\n    control, handleSubmit, formState, watch,\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: state?.[storeKey],\n    context: {\n      country,\n    },\n    resolver: yupResolver(schemaWithoutPatient),\n  });\n  const { errors, isValid } = formState;\n\n  // Callbacks\n  const handleDoBack = React.useCallback(() => {\n    setActiveStep(false);\n    if (previousStep) {\n      history.push(previousStep);\n    } else {\n      history.goBack();\n    }\n  }, [history, previousStep]);\n\n  // Memos\n  const watchedtypeCovidFlu = watch('typeCovidFlu');\n\n  const customTotalSteps = React.useMemo(() => {\n    if (!watchedtypeCovidFlu) return 9;\n\n    const { selected } = watchedtypeCovidFlu;\n\n    switch (true) {\n      case ['antigenTaken', 'PCRTaken', 'fluTaken'].every((i: string) => selected.includes(i)):\n        return 14;\n\n      case ['PCRTaken', 'fluTaken'].every((i: string) => selected.includes(i)):\n        return 13;\n\n      case ['antigenTaken', 'PCRTaken'].every((i: string) => selected.includes(i))\n      || ['antigenTaken', 'fluTaken'].every((i: string) => selected.includes(i)):\n        return 12;\n\n      case ['fluTaken', 'PCRTaken'].some((i: string) => selected.includes(i)):\n        return 11;\n\n      case ['antigenTaken'].every((i: string) => selected.includes(i)):\n        return 10;\n\n      case ['none'].every((i: string) => selected.includes(i)):\n        return 9;\n\n      default:\n        return 9;\n    }\n  }, [watchedtypeCovidFlu]);\n\n  // Effects\n  useEffect(() => {\n    scrollToTop();\n    if (patientId) {\n      setTitle('');\n      setType('tertiary');\n    } else {\n      setTitle(t('typeCovidFlu:title'));\n      setType('primary');\n    }\n    setSubtitle('');\n    setDoGoBack(() => handleDoBack);\n  }, [handleDoBack, setDoGoBack, setTitle, setType, setSubtitle, patientId, t]);\n\n  // Handlers\n  const onSubmit = async (values: Step1fType) => {\n    if (values) {\n      const { typeCovidFlu }: CommonJSON = values;\n      const antigenTaken = typeCovidFlu?.selected.includes('antigenTaken');\n      const PCRTaken = typeCovidFlu?.selected.includes('PCRTaken');\n      const fluTaken = typeCovidFlu?.selected.includes('fluTaken');\n      action(values);\n      if (antigenTaken && otherSteps) {\n        setActiveStep(false);\n        history.push(otherSteps.antigenTakenStep);\n      } else if (PCRTaken && otherSteps) {\n        setActiveStep(false);\n        history.push(otherSteps.PCRTakenStep);\n      } else if (fluTaken && otherSteps) {\n        setActiveStep(false);\n        history.push(otherSteps.fluTakenStep);\n      } else if (nextStep) {\n        setActiveStep(false);\n        history.push(nextStep);\n      }\n    }\n  };\n\n  return (\n    <MainContainer>\n      <QuestionText extraSpace first>\n        {t('questionary:typeCovidFlu.title')}\n      </QuestionText>\n      <WomanWithPhone />\n      <ProgressIndicator\n        currentStep={metadata?.current}\n        totalSteps={customTotalSteps}\n        progressBar\n      />\n\n      <QuestionText extraSpace>\n        {t('questionary:typeCovidFlu.question')}\n        <QuestionAllApply>{t('questionary:allThatApply')}</QuestionAllApply>\n      </QuestionText>\n      <Controller\n        control={control}\n        name=\"typeCovidFlu\"\n        defaultValue={{ selected: [], other: '' }}\n        render={({ onChange, value }) => (\n          <OptionList\n            isCheckbox\n            value={value}\n            onChange={v => onChange(v)}\n            items={[\n              {\n                value: 'antigenTaken',\n                label: t('questionary:typeCovidFlu.options.antigenTaken'),\n              },\n              {\n                value: 'PCRTaken',\n                label: t('questionary:typeCovidFlu.options.PCRTaken'),\n              },\n              {\n                value: 'fluTaken',\n                label: t('questionary:typeCovidFlu.options.fluTaken'),\n              },\n              {\n                value: 'none',\n                label: t('questionary:typeCovidFlu.options.none'),\n              },\n            ]}\n            excludableValues={['none']}\n          />\n        )}\n      />\n      <ErrorMessage\n        errors={errors}\n        name=\"lastTimeCovidMonths\"\n        render={({ message }) => (\n          <p>{message}</p>\n        )}\n      />\n\n      {/* Bottom Buttons */}\n      {activeStep && (\n        <Portal>\n          <WizardButtons\n            leftLabel={t('questionary:nextButton')}\n            leftHandler={handleSubmit(onSubmit)}\n            leftDisabled={!isValid}\n            invert\n          />\n        </Portal>\n      )}\n    </MainContainer>\n  );\n};\n\nexport default React.memo(Step1f);\n"],"sourceRoot":""}