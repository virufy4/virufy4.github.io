{"version":3,"sources":["components/Layout/Layout.ts","components/Wizard/style.ts","components/Wizard/Wizard.tsx","components/DotIndicators/style.ts","components/DotIndicators/DotIndicators.tsx","containers/Welcome/Welcome.tsx","containers/Welcome/index.ts"],"names":["Layout","styled","div","props","theme","breakpoints","tablet","WizardContainer","StepContainer","WizardNavControlPortal","AsyncLoad","loadable","container","fallback","React","memo","steps","children","match","useRouteMatch","location","useLocation","useState","loadSteps","setLoadSteps","pathList","useMemo","base","url","replace","map","step","path","useEffect","timing","duration","key","componentPath","exact","Array","isArray","s","render","id","WelcomeWizardStepIndicators","ul","WelcomeWizardStepIndicator","li","colors","gray","darkBlack","className","current","total","stepButtons","stepButtonsElements","push","setStorageType","window","localStorage","createStore","name","localstoragePrefix","country","getCountry","pathname","stepsWithoutDots","getWelcomeStepsWithoutDots","currentSteps","welcomeStepsDefinitions","active","findIndex","Wizard","DotIndicators","length"],"mappings":"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","file":"static/js/39.7480bc35.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Layout = styled.div`\n  padding-bottom: 40px; \n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    margin: auto;\n\n    max-width: 768px;\n    width: 100%;\n  }\n`;\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const WizardContainer = styled.div`\n  display: flex;\n  flex-direction:column;\n\n  height:100%;\n`;\n\nexport const StepContainer = styled.div`\n  height: 100%;\n`;\n\nexport const WizardNavControlPortal = styled.div`\n  margin-bottom: 24px;\n`;\n","import React from 'react';\nimport loadable from '@loadable/component';\nimport SlideRoutes from 'react-slide-routes';\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { StateMachineProvider } from 'little-state-machine';\nimport Layout from 'components/Layout/';\nimport { WizardContainer, StepContainer, WizardNavControlPortal } from './style';\n\ninterface WizardProps {\n  steps: Wizard.Step[];\n}\n\ninterface AsyncLoadProps extends Partial<Wizard.StepProps> {\n  container: string;\n}\n\nconst AsyncLoad = loadable(({ container }: AsyncLoadProps) => import(`containers/${container}`), {\n  fallback: <div>Loading ...</div>,\n});\n\nfunction clearPath(path: string) {\n  return path.replace(/\\/$/, '');\n}\n\nconst Wizard = ({ steps, children }: React.PropsWithChildren<WizardProps>) => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const [loadSteps, setLoadSteps] = React.useState(false);\n\n  const pathList = React.useMemo(() => {\n    const base = clearPath(match.url);\n    return steps.map(step => base + step.path);\n  }, [match.url, steps]);\n\n  React.useEffect(() => {\n    setLoadSteps(true);\n  }, []);\n\n  return (\n    <StateMachineProvider>\n      <WizardContainer>\n        <StepContainer>\n          {loadSteps && (\n            <SlideRoutes location={location} timing=\"ease-in-out\" duration={500} pathList={pathList}>\n              {steps.map(step => (\n                <Route\n                  key={step.componentPath}\n                  exact\n                  path={Array.isArray(step.path)\n                    ? step.path.map(s => (match.path + s))\n                    : match.path + step.path}\n                  render={() => (\n                    <Layout>\n                      <AsyncLoad\n                        container={step.componentPath}\n                        {...step.props}\n                      />\n                    </Layout>\n\n                  )}\n                />\n              ))}\n            </SlideRoutes>\n          )}\n        </StepContainer>\n        <WizardNavControlPortal id=\"wizard-buttons\">\n          {children}\n        </WizardNavControlPortal>\n      </WizardContainer>\n    </StateMachineProvider>\n  );\n};\n\nexport default React.memo(Wizard);\n","import styled from 'styled-components';\n\nexport const WelcomeWizardStepIndicators = styled.ul`\n  display: flex;\n  justify-content:center;\n  padding: 0;\n  margin-bottom: 22px;\n\n @media screen and (${props => props.theme.breakpoints.tablet}){\n    margin-bottom: 40px;\n  }\n`;\n\nexport const WelcomeWizardStepIndicator = styled.li`\n  background-color: ${props => props.theme.colors.gray};\n  border-radius: 50%;\n  display: inline-block;\n\n  height: 7px;\n  width: 7px;\n\n  &:not(:first-of-type){\n    margin-left: 6px;\n  };\n\n  &.active {\n    background-color: ${props => props.theme.colors.darkBlack};\n  };\n\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Styles\nimport {\n  WelcomeWizardStepIndicators,\n  WelcomeWizardStepIndicator,\n} from './style';\n\ninterface ProgressIndicatorProps {\n  className?: string;\n  current: number;\n  total: number;\n}\n\nconst ProgressIndicator = ({\n  className = '',\n  current,\n  total,\n}: ProgressIndicatorProps) => {\n  // Memos\n  const stepButtons = React.useMemo(() => {\n    const stepButtonsElements: React.ReactElement[] = [];\n\n    for (let step = 0; step < total; step += 1) {\n      stepButtonsElements.push((\n        <WelcomeWizardStepIndicator\n          className={step === current ? 'active' : ''}\n          id={`WelcomeStepButton-${step}`}\n          key={`WelcomeStepButton-${step}`}\n        />\n      ));\n    }\n\n    return stepButtonsElements;\n  }, [current, total]);\n\n  return (\n    <WelcomeWizardStepIndicators className={className}>\n      {stepButtons}\n    </WelcomeWizardStepIndicators>\n  );\n};\n\nexport default React.memo(ProgressIndicator);\n","import React, { useMemo } from 'react';\nimport { useRouteMatch, useLocation } from 'react-router-dom';\nimport { createStore, setStorageType } from 'little-state-machine';\n\n// Helper\nimport { localstoragePrefix } from 'helper/basePathHelper';\n\n// Wizard\nimport Wizard from 'components/Wizard';\n\n// Components\nimport DotIndicators from 'components/DotIndicators';\nimport {\n  getCountry, getWelcomeStepsWithoutDots, welcomeStepsDefinitions,\n} from 'helper/stepsDefinitions';\n\nsetStorageType(window.localStorage);\n\nconst StoreKey = 'welcome';\n\ncreateStore({\n  [StoreKey]: {},\n}, {\n  name: `${localstoragePrefix}_VirufyWizard`,\n});\n\nconst Welcome = () => {\n  // Hooks\n  const location = useLocation();\n  const match = useRouteMatch();\n  const country = getCountry();\n\n  const url = location.pathname.replace(match.url, '');\n\n  const stepsWithoutDots = useMemo(() => getWelcomeStepsWithoutDots(StoreKey, country), [country]);\n\n  const currentSteps = useMemo(() => welcomeStepsDefinitions(StoreKey, country), [country]);\n\n  const active = currentSteps.findIndex(step => step.path === url);\n\n  return (\n    <Wizard\n      steps={[...stepsWithoutDots, ...currentSteps]}\n    >\n      {active >= 0 && (\n        <DotIndicators\n          current={active}\n          total={currentSteps.length}\n        />\n      )}\n    </Wizard>\n  );\n};\n\nexport default React.memo(Welcome);\n","export { default } from './Welcome';\n"],"sourceRoot":""}