{"version":3,"sources":["hooks/useHeaderContext.ts","helper/scrollHelper.ts","components/WizardButtons/style.ts","components/WizardButtons/WizardButtons.tsx","utils/wizard.ts","components/Button/style.ts","components/Button/Button.tsx","components/Checkbox/style.ts","components/Checkbox/Checkbox.tsx","hooks/useEmbeddedFile.ts","utils/mapOfConsentFiles.ts","data/consentPdf.ts","containers/Welcome/Step4/Step4.tsx","helper/consentPathHelper.ts","containers/Welcome/Step4/index.ts"],"names":["useHeaderContext","React","useContext","HeaderContext","title","setTitle","subtitle","setSubtitle","type","setType","logoSize","setLogoSize","setDoGoBack","doGoBack","scrollToTop","window","scrollTo","top","behavior","WizardButtonsContainer","styled","div","props","theme","layout","generalPaddingAmount","breakpoints","tablet","WizardButtons","memo","invert","leftLabel","leftDisabled","leftHandler","rightLabel","rightDisabled","rightHandler","Button","dark","disabled","onClick","updateAction","storeKey","state","payload","resetStore","output","welcome","language","isClinic","country","region","hospitalId","StyledButton","button","color","colors","purple_50","purple","white","children","StyledCheckboxContainer","FullWidthDiv","fontWeight","css","StyledCheckboxInput","input","attrs","checkboxLeftOffsetPosition","StyledCheckboxInputLabel","label","Checkbox","id","name","value","margin","onChange","isChecked","checked","htmlFor","DOMPurify","createDOMPurify","useEmbeddedFile","filePath","useState","isLoadingFile","setIsLoadingFile","file","setFile","useEffect","fetch","mode","then","fetchedFile","text","result","sanitize","ADD_ATTR","mapOfConsentFiles","Argentina","consentLang","Bolivia","Brazil","Colombia","Global","Greece","Japan","Mexico","Pakistan","Peru","consentPdf","schema","Yup","shape","agreedConsentTerms","required","default","oneOf","agreedPolicyTerms","agreedCovidCollection","when","is","notRequired","otherwise","agreedCovidDetection","agreedTrainingArtificial","includes","agreedBiometric","p","Portal","usePortal","bindTo","document","getElementById","activeStep","setActiveStep","useStateMachine","action","store","currentCountry","useMemo","useForm","defaultValues","resolver","yupResolver","context","control","handleSubmit","formState","errors","isValid","history","useHistory","lang","basePath","process","indexOfLang","indexOf","indexOfDefaultDoc","buildConsentFilePath","consentFormContent","onSubmit","values","a","nextStep","push","doBack","useCallback","previousStep","goBack","t","useTranslation","getCurrentCountryCheckbox","isMobile","Trans","i18nKey","dangerouslySetInnerHTML","__html","Link","to","target","defaultValue","render","tOptions","lng","e"],"mappings":"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","file":"static/js/34.8a83dcf6.chunk.js","sourcesContent":["import React from 'react';\nimport { HeaderContext } from 'components/Header';\n\nconst useHeaderContext = () => {\n  const {\n    title, setTitle, subtitle, setSubtitle, type, setType, logoSize, setLogoSize, setDoGoBack, doGoBack,\n  } = React.useContext(HeaderContext);\n\n  return {\n    title,\n    setTitle,\n    subtitle,\n    setSubtitle,\n    type,\n    setType,\n    logoSize,\n    setLogoSize,\n    doGoBack,\n    setDoGoBack,\n  };\n};\n\nexport default useHeaderContext;\n","export const scrollToTop = function scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nexport const scrollToBottom = function scrollToBottom() {\n  window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\n};\n","import styled from 'styled-components';\n\nexport const WizardButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: ${props => `calc(100% - ${props.theme.layout.generalPaddingAmount * 2}px)`};\n  margin: 0 auto;\n\n  button {\n    flex: 1;\n    min-height: 50px;\n    margin-bottom: 8px;\n\n    &:first-of-type {\n      margin-left: 0px !important;\n    }\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Components\nimport Button from 'components/Button';\n\n// Styles\nimport {\n  WizardButtonsContainer,\n} from './style';\n\ninterface WizardButtonsProps {\n  invert?: boolean;\n  leftLabel: string;\n  leftDisabled?: boolean;\n  leftHandler: () => void;\n  rightLabel?: string;\n  rightDisabled?: boolean;\n  rightHandler?: () => void;\n}\n\nconst WizardButtons = React.memo(({\n  invert = false,\n  leftLabel,\n  leftDisabled,\n  leftHandler,\n  rightLabel,\n  rightDisabled,\n  rightHandler,\n}: WizardButtonsProps) => (\n  <WizardButtonsContainer>\n    <Button\n      dark={invert}\n      disabled={leftDisabled}\n      onClick={leftHandler}\n    >\n      {leftLabel}\n    </Button>\n    {\n        rightLabel && rightHandler && (\n          <Button\n            dark={!invert}\n            disabled={rightDisabled}\n            onClick={rightHandler}\n          >\n            {rightLabel}\n          </Button>\n        )\n      }\n  </WizardButtonsContainer>\n));\nexport default React.memo(WizardButtons);\n","import { isClinic } from 'helper/basePathHelper';\n\n// TODO: Improve types\nexport function updateAction(storeKey: string): any {\n  return (state: any, payload: any) => ({\n    ...state,\n    [storeKey]: {\n      ...state[storeKey],\n      ...payload,\n    },\n  });\n}\n\nexport function resetStore(): any {\n  return (state: any) => {\n    const output: CommonJSON = { welcome: { language: state.welcome.language } };\n    if (isClinic) {\n      output.welcome.country = state.welcome.country;\n      output.welcome.region = state.welcome.region;\n      output.welcome.hospitalId = state.welcome.hospitalId;\n    }\n    return output;\n  };\n}\n","import styled from 'styled-components';\nimport { colors } from '../../theme';\n\nexport interface StyledButtonProps {\n  disabled?: boolean;\n  dark?: boolean;\n  id?: string;\n}\n\nexport const StyledButton = styled.button<StyledButtonProps>`\n  height: 50px;\n  border-radius: 15px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  font-weight: bold;\n  font-size: 14px;\n  font-weight: bold;\n  width: 100%;\n\n  ${({ dark, disabled }) => {\n    const color = disabled ? colors.purple_50 : colors.purple;\n    return dark ? `\n    background-color: ${color};\n    color: ${colors.white};\n    border: none;\n  ` : `\n    background-color: ${colors.white};\n    color: ${color};\n    border: 1px solid ${color};\n  `;\n  }}\n`;\n","import React, { PropsWithChildren } from 'react';\n\n// Styles\nimport {\n  StyledButton,\n  StyledButtonProps,\n} from './style';\n\nexport interface ButtonProps extends PropsWithChildren<StyledButtonProps> {\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void);\n}\n\nconst Button = React.memo(({ children, ...props }: ButtonProps) => ((\n  <StyledButton\n    type=\"button\"\n    {...props}\n  >\n    {children}\n  </StyledButton>\n)));\n\nexport default Button;\n","import styled, { css } from 'styled-components';\nimport FullWidthDiv from 'components/FullWidthDiv';\n\ninterface StyledCheckboxContainerProps {\n  isChecked: boolean | undefined;\n  fontWeight?: number;\n  margin: string;\n\n}\n\ninterface StyledCheckboxLabelProps {\n  htmlFor: string;\n  checkboxLeftOffsetPosition: number;\n}\n\ninterface StyledCheckboxInputProps {\n  checkboxLeftOffsetPosition: number;\n}\n\nexport const StyledCheckboxContainer = styled(FullWidthDiv)<StyledCheckboxContainerProps>`\n  display: flex;\n  font-family: \"Source Sans Pro\";\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  ${({ fontWeight }) => fontWeight && css`font-weight: ${fontWeight};`}\n  padding: 0 0 16px 0;\n  position: relative;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n    margin: auto;\n    width: 100%;\n  }\n`;\n\nexport const StyledCheckboxInput = styled.input.attrs(() => ({\n  type: 'checkbox',\n}))<StyledCheckboxInputProps>`\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M16 2V16H2V2H16ZM16 0H2C0.9 0 0 0.9 0 2V16C0 17.1 0.9 18 2 18H16C17.1 18 18 17.1 18 16V2C18 0.9 17.1 0 16 0Z' fill='%2321242C'/%3E%3C/svg%3E%0A\");\n  background-repeat: no-repeat;\n  color: black;\n  cursor: pointer;\n  display: inline-block;\n  height: 18px;\n  left: ${props => props.checkboxLeftOffsetPosition}px;\n  outline: 0;\n  position:absolute;\n  width: 18px;\n  border: 0;\n  border-radius: 0;\n  transform: translateY(4px);\n\n  &:checked{\n    height: 18px;\n    width: 28px;\n    background-image: url(\"data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M16 0H2C0.9 0 0 0.9 0 2V16C0 17.1 0.9 18 2 18H16C17.1 18 18 17.1 18 16V2C18 0.9 17.1 0 16 0ZM16 16H2V2H16V16ZM14.99 6L13.58 4.58L6.99 11.17L4.41 8.6L2.99 10.01L6.99 14L14.99 6Z' fill='%2321242C'/%3E%3C/svg%3E%0A\");\n  }\n`;\n\nexport const StyledCheckboxInputLabel = styled.label<StyledCheckboxLabelProps>`\n  margin: auto;\n  margin-left:  ${({ checkboxLeftOffsetPosition }) => checkboxLeftOffsetPosition + 32}px;\n  margin-right: 20px;\n`;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/require-default-props */\nimport React, { FunctionComponent } from 'react';\n\nimport { StyledCheckboxContainer, StyledCheckboxInput, StyledCheckboxInputLabel } from './style';\n\ninterface CheckboxProps {\n  checkboxLeftOffsetPosition?: number;\n  fontWeight?: number;\n  id: string;\n  label: string | React.ReactElement;\n  margin?: string;\n  name: string;\n  onChange: (...event: any[]) => void;\n  value: boolean | undefined;\n}\n\nconst Checkbox: FunctionComponent<CheckboxProps> = ({\n  label, id, name, value, fontWeight = 400, margin = 'auto', checkboxLeftOffsetPosition = 20, onChange,\n}: CheckboxProps) => (\n  <StyledCheckboxContainer isChecked={value} fontWeight={fontWeight} margin={margin}>\n    <StyledCheckboxInput\n      onChange={onChange}\n      checkboxLeftOffsetPosition={checkboxLeftOffsetPosition}\n      id={id}\n      name={name}\n      checked={value}\n    />\n    <StyledCheckboxInputLabel\n      htmlFor={id}\n      checkboxLeftOffsetPosition={checkboxLeftOffsetPosition}\n    >\n      {label}\n    </StyledCheckboxInputLabel>\n  </StyledCheckboxContainer>\n);\n\nexport default Checkbox;\n","import { useState, useEffect } from 'react';\nimport createDOMPurify from 'dompurify';\n\nconst DOMPurify = createDOMPurify(window);\n\nconst useEmbeddedFile = (filePath = '') => {\n  const [isLoadingFile, setIsLoadingFile] = useState(false);\n  const [file, setFile] = useState('');\n\n  useEffect(() => {\n    setIsLoadingFile(true);\n    fetch(filePath, { mode: 'no-cors' }).then(fetchedFile => fetchedFile.text()).then(result => { setIsLoadingFile(false); setFile(result); });\n  }, [filePath]);\n\n  return { file: DOMPurify.sanitize(file, { ADD_ATTR: ['target'] }), isLoadingFile };\n};\n\nexport default useEmbeddedFile;\n","export const mapOfConsentFiles = {\n  Argentina: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Bolivia: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Brazil: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Colombia: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Global: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Greece: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Japan: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Mexico: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Pakistan: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Peru: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  'United States': {\n    consentLang: [\n      'default.html',\n    ],\n  },\n};\n","export const consentPdf = {\n  Argentina: 'https://drive.google.com/file/d/1slccHiR-vCc5mUHZgklTynejddO_IoCT/view',\n  Bolivia: 'https://drive.google.com/file/d/1nTzfJAOHQwefCdqwNBBEqzeRc66RYbYf/view',\n  Brazil: 'https://drive.google.com/file/d/1YMtfTiFdpg9tXhdWlQF8kh8Vu4q5RL1U/view',\n  Colombia: 'https://drive.google.com/file/d/1YMtfTiFdpg9tXhdWlQF8kh8Vu4q5RL1U/view',\n  Greece: 'https://drive.google.com/file/d/1lMVygBx3pV_lZBhFtZe5go4UM4mFt0qP/view',\n  Peru: 'https://drive.google.com/file/d/1nb9CbF4l6RF2IJQbzWY9YDnomQWMixbT/view',\n  Mexico: 'https://drive.google.com/file/d/16_0GEMA5uApVuf9K9YlYD7ukPAS2_8wn/view',\n  Japan: 'https://drive.google.com/file/d/11RTMmnHW4SqHNf7htr3xuSi-o2v2vWlp/view',\n  'United States': 'https://drive.google.com/file/d/166Fu8RKluJdkRaxPDfWPyCpM7BUIzmnE/view',\n  Global: 'https://drive.google.com/file/d/1hnxvDJ5qHBnUi7cnkNdyD4PuWMz8Ntss/view',\n};\n\ndeclare global {\n  type ConsentPDFCountry = keyof typeof consentPdf;\n}\n","import React, { useEffect, useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation, Trans } from 'react-i18next';\nimport usePortal from 'react-useportal';\nimport { isMobile } from 'react-device-detect';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers';\nimport { ErrorMessage } from '@hookform/error-message';\nimport * as Yup from 'yup';\n\n// Components\nimport WizardButtons from 'components/WizardButtons';\nimport Link from 'components/Link';\nimport Checkbox from 'components/Checkbox';\nimport { BlackText } from 'components/Texts';\n\n// Update Action\nimport { updateAction } from 'utils/wizard';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Hooks\nimport useEmbeddedFile from 'hooks/useEmbeddedFile';\n\n// Utils\nimport { buildConsentFilePath } from 'helper/consentPathHelper';\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Data\nimport { consentPdf } from 'data/consentPdf';\n\n// Styles\nimport {\n  ContainerShapeDown,\n  InnerContainerShapeDown,\n  WelcomeContent,\n  WelcomeStyledFormAlternative,\n  WelcomeConsentForm,\n  CheckboxTitle,\n} from '../style';\n\nconst schema = Yup.object().shape({\n  agreedConsentTerms: Yup.boolean().required().default(false).oneOf([true]),\n  agreedPolicyTerms: Yup.boolean().required().default(false).oneOf([true]),\n  agreedCovidCollection: Yup.boolean().when('$country', {\n    is: 'Brazil',\n    then: Yup.boolean().notRequired(),\n    otherwise: Yup.boolean().required().default(false).oneOf([true]),\n  }),\n  agreedCovidDetection: Yup.boolean().when('$country', {\n    is: 'Colombia',\n    then: Yup.boolean().notRequired(),\n    otherwise: Yup.boolean().required().default(false).oneOf([true]),\n  }),\n  agreedTrainingArtificial: Yup.boolean().when('$country', {\n    is: value => ['Brazil', 'Colombia'].includes(value),\n    then: Yup.boolean().notRequired(),\n    otherwise: Yup.boolean().required().default(false).oneOf([true]),\n  }),\n  agreedBiometric: Yup.boolean().when('$country', {\n    is: 'Colombia',\n    then: Yup.boolean().notRequired(),\n    otherwise: Yup.boolean().required().default(false).oneOf([true]),\n  }),\n});\n\ntype Step3Type = Yup.InferType<typeof schema>;\n\nconst Step4 = (p: Wizard.StepProps) => {\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const [activeStep, setActiveStep] = React.useState(true);\n  const { setType, setDoGoBack, setSubtitle } = useHeaderContext();\n\n  const { state, action } = useStateMachine(updateAction(p.storeKey));\n\n  const store = state?.[p.storeKey];\n\n  const currentCountry: PrivacyPolicyCountry = useMemo(() => {\n    if (['Argentina', 'Bolivia', 'Colombia', 'Greece', 'Peru', 'Mexico', 'Brazil', 'United States', 'Japan'].includes(state.welcome.country)) {\n      return state.welcome.country;\n    }\n    return 'Global';\n  }, [state.welcome.country]);\n\n  const {\n    control, handleSubmit, formState,\n  } = useForm({\n    defaultValues: store,\n    resolver: yupResolver(schema),\n    context: {\n      country: currentCountry,\n    },\n    mode: 'onChange',\n  });\n  const { errors, isValid } = formState;\n  const history = useHistory();\n  const { isLoadingFile, file: consentFormContent } = useEmbeddedFile(\n    buildConsentFilePath(currentCountry, state.welcome.language),\n  );\n\n  const onSubmit = async (values: Step3Type) => {\n    if (values) {\n      action(values);\n      if (p.nextStep) {\n        setActiveStep(false);\n        history.push(p.nextStep);\n      }\n    }\n  };\n\n  const doBack = useCallback(() => {\n    if (p.previousStep) {\n      setActiveStep(false);\n      history.push(p.previousStep);\n    } else {\n      history.goBack();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    scrollToTop();\n    setDoGoBack(() => doBack);\n    setType('secondary');\n    setSubtitle(t('consent:title'));\n  }, [doBack, setDoGoBack, setType, setSubtitle, t]);\n\n  const getCurrentCountryCheckbox = (country: PrivacyPolicyCountry) => {\n    if (country === 'Brazil') {\n      return 'pt';\n    }\n    if (country === 'Greece') {\n      return 'el';\n    }\n    if (country === 'Japan') {\n      return 'ja';\n    }\n    if (country === 'Global' || country === 'United States') {\n      return 'en';\n    }\n    return 'es';\n  };\n\n  return (\n    <WelcomeStyledFormAlternative>\n      <ContainerShapeDown isMobile={isMobile}>\n        <InnerContainerShapeDown>\n          <BlackText>\n            <Trans i18nKey=\"consent:paragraph1\">\n              Virufy cares about your privacy and is advised by licensed data privacy experts.\n              The information and recordings you provide will only be used for the purposes described in our\n              Privacy Policy and consent form.\n              Please read the consent Form:\n            </Trans>\n          </BlackText>\n        </InnerContainerShapeDown>\n      </ContainerShapeDown>\n      <WelcomeContent>\n        <WelcomeConsentForm dangerouslySetInnerHTML={{ __html: isLoadingFile ? 'Loading...' : consentFormContent }} />\n\n        <BlackText>\n          <Trans i18nKey=\"consent:paragraph3\">\n            By checking the below boxes, you are granting your explicit, freely given, and informed consent to Virufy to\n            collect, process, and share your information for the purposes indicated above and as provided in greater\n            detail in our Privacy Policy. You can print\n            a copy of this Consent Form for your personal records by\n            accessing <Link to={consentPdf[currentCountry]} target=\"_blank\">Consent Form</Link>\n          </Trans>\n        </BlackText>\n\n        <CheckboxTitle>\n          {t('consent:pleaseConfirm', 'Please confirm the following:')}\n        </CheckboxTitle>\n\n        <Controller\n          control={control}\n          name=\"agreedConsentTerms\"\n          defaultValue={false}\n          render={({ onChange, value }) => (\n            <Checkbox\n              id=\"Step2-ConsentTerms\"\n              label={(currentCountry !== 'Brazil')\n                ? (\n                  <Trans tOptions={{ lng: getCurrentCountryCheckbox(currentCountry) }} i18nKey=\"consent:certify\">\n                    I certify that I am at least 18 years old and agree to the terms of this Consent Form.\n                  </Trans>\n                ) : (\n                  <Trans tOptions={{ lng: getCurrentCountryCheckbox(currentCountry) }} i18nKey=\"consent:certifyBrazil\">\n                    I certify that I am at least 18 years old and agree to the terms of this Consent Form,\n                    hereby expressly consenting to the collection and processing of my personal information,\n                    biometric information, and health information.\n                  </Trans>\n                )}\n              name=\"agreedConsentTerms\"\n              onChange={e => onChange(e.target.checked)}\n              value={value}\n            />\n          )}\n        />\n\n        <Controller\n          control={control}\n          name=\"agreedPolicyTerms\"\n          defaultValue={false}\n          render={({ onChange, value }) => (\n            <Checkbox\n              id=\"Step2-PolicyTerms\"\n              label={(\n                <Trans tOptions={{ lng: getCurrentCountryCheckbox(currentCountry) }} i18nKey=\"consent:agree\">\n                  I have read, understood, and agree to the terms of the Virufy Privacy Policy.\n                </Trans>\n              )}\n              name=\"agreedPolicyTerms\"\n              onChange={e => onChange(e.target.checked)}\n              value={value}\n            />\n          )}\n        />\n\n        {currentCountry !== 'Brazil' && (\n          <Controller\n            control={control}\n            name=\"agreedCovidCollection\"\n            defaultValue={false}\n            render={({ onChange, value, name }) => (\n              <Checkbox\n                id=\"Step2-CollectionCovid\"\n                label={(currentCountry !== 'Colombia')\n                  ? (\n                    <Trans tOptions={{ lng: getCurrentCountryCheckbox(currentCountry) }} i18nKey=\"consent:collection\">\n                      I hereby expressly consent to the collection and\n                      processing of my personal information, biometric information, and health information.\n                    </Trans>\n                  ) : (\n                    <Trans tOptions={{ lng: getCurrentCountryCheckbox(currentCountry) }} i18nKey=\"consent:collectionColombia\">\n                      I hereby expressly consent to the collection, processing and transfer of my personal information,\n                      biometric information, and health information.\n                    </Trans>\n                  )}\n                name={name}\n                onChange={e => onChange(e.target.checked)}\n                value={value}\n              />\n            )}\n          />\n        )}\n\n        {currentCountry !== 'Colombia' && (\n          <Controller\n            control={control}\n            name=\"agreedCovidDetection\"\n            defaultValue={false}\n            render={({ onChange, value, name }) => (\n              <Checkbox\n                id=\"Step2-DetectionCovid\"\n                label={(currentCountry !== 'Brazil')\n                  ? (\n                    <Trans tOptions={{ lng: getCurrentCountryCheckbox(currentCountry) }} i18nKey=\"consent:detection\">\n                      I hereby acknowledge and agree that processing shall be done for the purposes indicated above\n                      and, in particular but without limitation, for research and compiling a dataset needed for the\n                      development of artificial intelligence algorithms for device-based COVID-19 detection.\n                    </Trans>\n                  ) : (\n                    <Trans tOptions={{ lng: getCurrentCountryCheckbox(currentCountry) }} i18nKey=\"consent:detectionBrazil\">\n                      I hereby acknowledge and agree that the processing shall be done for the purposes\n                      indicated above, and in particular, but without limitation, for the research and\n                      compilation of a data set necessary for the development of artificial intelligence\n                      algorithms for device-based device-based COVID-19 detection, to train artificial\n                      intelligence algorithms to analyze cough audio recordings to better determine COVID-19 signals.\n                    </Trans>\n                  )}\n                name={name}\n                onChange={e => onChange(e.target.checked)}\n                value={value}\n              />\n            )}\n          />\n        )}\n\n        {((currentCountry !== 'Colombia') && (currentCountry !== 'Brazil')) && (\n          <Controller\n            control={control}\n            name=\"agreedTrainingArtificial\"\n            defaultValue={false}\n            render={({ onChange, value, name }) => (\n              <Checkbox\n                id=\"Step2-TrainingArtificial\"\n                label={(\n                  <Trans tOptions={{ lng: getCurrentCountryCheckbox(currentCountry) }} i18nKey=\"consent:signs\">\n                    I hereby acknowledge and agree that processing shall be done for the purposes indicated above\n                    and, in particular but without limitation, for training artificial intelligence algorithms to\n                    analyze cough audio recordings to better determine signs of COVID-19.\n                  </Trans>\n                )}\n                name={name}\n                onChange={e => onChange(e.target.checked)}\n                value={value}\n              />\n            )}\n          />\n        )}\n\n        {currentCountry !== 'Colombia' && (\n          <Controller\n            control={control}\n            name=\"agreedBiometric\"\n            defaultValue={false}\n            render={({ onChange, value, name }) => (\n              <Checkbox\n                id=\"Step2-Biometric\"\n                label={(\n                  <Trans tOptions={{ lng: getCurrentCountryCheckbox(currentCountry) }} i18nKey=\"consent:biometric\">\n                    I hereby expressly consent to the sharing of my personal information, biometric information,\n                    and health information with third parties as described in this Consent Form and/or the Virufy\n                    Privacy Policy.\n                  </Trans>\n                )}\n                name={name}\n                onChange={e => onChange(e.target.checked)}\n                value={value}\n              />\n            )}\n          />\n        )}\n\n        <p><ErrorMessage errors={errors} name=\"name\" /></p>\n        {activeStep && (\n          <Portal>\n            <WizardButtons\n              invert\n              leftLabel={t('consent:nextButton')}\n              leftHandler={handleSubmit(onSubmit)}\n              leftDisabled={!isValid}\n            />\n          </Portal>\n        )}\n      </WelcomeContent>\n    </WelcomeStyledFormAlternative>\n  );\n};\n\nexport default React.memo(Step4);\n","import { mapOfConsentFiles } from 'utils/mapOfConsentFiles';\n\ntype Country = keyof typeof mapOfConsentFiles;\n\nexport const buildConsentFilePath = (country:Country, lang:string) => {\n  const basePath = `${process.env.PUBLIC_URL}/static/consent`;\n\n  /* Check if country and lang combination exists in automatically generated \"mapOfConsentFiles\".\n   If not, find default lang document for the country and return it. */\n  const indexOfLang = mapOfConsentFiles[country].consentLang.indexOf(`${lang}.html`);\n\n  if (indexOfLang !== -1) {\n    return `${basePath}/${country}/${mapOfConsentFiles[country].consentLang[indexOfLang]}`;\n  }\n\n  const indexOfDefaultDoc = mapOfConsentFiles[country as Country].consentLang.indexOf('default.html');\n\n  return `${basePath}/${country}/${mapOfConsentFiles[country].consentLang[indexOfDefaultDoc]}`;\n};\n","export { default } from './Step4';\n"],"sourceRoot":""}