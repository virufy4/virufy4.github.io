{"version":3,"sources":["components/OptionList/style.ts","components/OptionList/OptionList.tsx","hooks/useCustomProgressBarSteps.ts","components/Recaptcha/style.ts","components/Recaptcha/Recaptcha.tsx","hooks/useAxios.ts","helper/deviceHelper.ts","helper/submitHelper.ts","containers/SubmitSteps/Questionary/Step5/Step5.tsx"],"names":["OptionListItem","styled","button","props","theme","colors","darkBlack","isSelected","purple_10","mercury","breakpoints","tablet","OptionListItemLabel","span","OptionListAddOtherButton","OptionListCheck","div","checkbox","purple","OptionListInputContainer","OptionListInput","input","green_25","darkBlack_04","midDarkGray","defaultValue","selected","other","OptionList","value","items","excludableValues","singleSelection","isCheckbox","onChange","allowAddOther","addOtherLabel","enableOther","otherPlaceholder","useState","showOtherInput","setShowOtherInput","useEffect","otherChangeHandler","newOtherVaue","newSelected","some","item","includes","map","index","key","lastItem","length","onClick","selectedItem","newOtherValue","indexOf","slice","undefined","selectItem","label","placeholder","e","target","defaultProps","React","memo","useCustomProgressBarSteps","storeKey","metadata","state","useStateMachine","updateAction","customSteps","useMemo","steps","total","current","antigenTaken","typeCovidFlu","PCRTaken","fluTaken","customCurrentStepPCR","RecaptchaContainer","Recaptcha","setRecaptchaAvailable","i18n","useTranslation","sitekey","process","onErrored","Sentry","hl","language","client","axios","create","baseURL","useAxios","deviceDetect","isBrowser","rdd","isMobile","isSmartTv","isSmartTV","isConsole","isTablet","isWearable","doSubmit","a","setSubmitError","captchaValue","action","nextStep","setActiveStep","history","userCookie","welcome","country","region","patientId","agreedConsentTerms","agreedPolicyTerms","agreedCovidDetection","agreedCovidCollection","agreedTrainingArtificial","agreedBiometric","recordYourCough","recordYourBreath","recordYourSpeech","testTaken","pcrTestDate","pcrTestResult","antigenTestDate","whatAntigenTestResult","antigenTestResult","vaccine","ageGroup","gender","ethnicity","biologicalSex","smokeLastSixMonths","currentSymptoms","symptomsStartedDate","currentRespiratoryCondition","currentMedicalCondition","covidTimes","lastTimeCovidMonths","fluTestDate","fluTestResult","whenFluShot","body","FormData","append","JSON","stringify","window","sourceCampaign","coughFile","recordingFile","uploadedFile","name","breathFile","allowSpeechIn","voiceFile","join","toISOString","genderSelected","axiosClient","post","headers","response","data","submissionId","push","console","log","schema","Yup","required","defined","previousStep","Portal","usePortal","bindTo","document","getElementById","useHeaderContext","setDoGoBack","setTitle","setType","useHistory","t","useCookies","cookies","getPatientId","getCountry","activeStep","submitError","setCaptchaValue","recaptchaAvailable","useForm","mode","defaultValues","resolver","yupResolver","control","handleSubmit","formState","errors","isSubmitting","isValid","handleDoBack","useCallback","goBack","scrollToTop","onSubmit","values","s","getLeftLabel","medicalOptions","currentStep","totalSteps","progressBar","bold","i18nKey","render","v","message","invert","leftLabel","leftHandler","leftDisabled"],"mappings":"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","file":"static/js/66.4bfd2104.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const OptionListItem = styled.button<{lastItem: boolean; isSelected?: boolean}>`\n  width: 100%;\n  height: 50px;\n  position: relative;\n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  color: ${props => props.theme.colors.darkBlack};\n  font-size: 14px;\n  text-align: left;\n  padding: 0 20px;\n  margin: 3px auto;\n  border: none;\n  border-radius: 10px;\n  background-color: ${props => (props.isSelected ? props.theme.colors.purple_10 : props.theme.colors.mercury)};\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n    text-align: left;\n  }\n`;\n\nexport const OptionListItemLabel = styled.span`\n  display: block;\n  width: 250px;\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    width: auto;\n    text-align: left;\n    margin: auto;\n  }\n`;\n\nexport const OptionListAddOtherButton = styled(OptionListItem)`\n  font-weight: bold;\n`;\n\nexport const OptionListCheck = styled.div<{ isSelected?: boolean; checkbox?: boolean }>`\n  width: 22px;\n  height: 22px; \n  border-radius: ${props => (props.checkbox ? '10%' : '50%')};\n  border: 3px solid ${props => (props.isSelected ? props.theme.colors.purple : '#C1C1C1')};\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin-top: 14px;\n  margin-right: 29px;\n  \n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    margin-right: 31px;\n  }\n\n  &:after{\n    content: '';\n    position: absolute; \n    left: ${props => (props.checkbox ? '0%' : '2px')}; \n    top: ${props => (props.checkbox ? '0%' : '2px')};\n    height: ${props => (props.checkbox ? '16px' : '12px')};\n    width: ${props => (props.checkbox ? '16px' : '12px')};\n    border-radius: ${props => (props.checkbox ? '0%' : '50%')};\n    background-color: ${props => (props.checkbox ? props.theme.colors.purple_10 : props.theme.colors.purple)}; \n    display: ${props => (props.isSelected ? 'block' : 'none')};\n    background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 16 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M14.0005 2L6.00018 10L2 6.00018' stroke='%233578DE' stroke-width='2.18192' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E\");\n    background-repeat: no-repeat;\n    background-size: 16px 16px;\n  }\n`;\n\nexport const OptionListInputContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  width: calc(100% + 40px);\n  margin: 0 -20px;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n\nexport const OptionListInput = styled.input<{isSelected: boolean}>`\n  height: 50px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  color: ${props => props.theme.colors.darkBlack};\n  width: 100%;\n  padding: 0 20px;\n  border: none;\n  background-color: ${props => (props.isSelected ? props.theme.colors.green_25 : 'transparent')};\n  border-top: 1px ${props => props.theme.colors.darkBlack_04} solid;\n  border-bottom: 1px ${props => props.theme.colors.darkBlack_04} solid;\n  ::placeholder {\n    color: ${props => props.theme.colors.midDarkGray};\n  }\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    text-align: center;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  OptionListAddOtherButton,\n  OptionListCheck, OptionListInput,\n  OptionListInputContainer,\n  OptionListItem,\n  OptionListItemLabel,\n} from './style';\n\ninterface OptionListItemProps {\n  value: string;\n  label: string;\n  excludable?: boolean;\n}\ninterface OptionListValue {\n  selected: string[];\n  other?: string;\n}\n\ninterface OptionListProps {\n  value?: OptionListValue;\n  items: OptionListItemProps[];\n  excludableValues?: string[];\n  singleSelection?: boolean;\n  onChange?: (value: OptionListValue) => void;\n  allowAddOther?: boolean;\n  addOtherLabel?: string;\n  enableOther?: boolean;\n  otherPlaceholder?: string;\n  isCheckbox?: boolean;\n}\nconst defaultValue = { selected: [], other: '' };\nconst OptionList = ({\n  value = defaultValue, items, excludableValues, singleSelection, isCheckbox,\n  onChange, allowAddOther, addOtherLabel, enableOther, otherPlaceholder,\n}: OptionListProps) => {\n  const [showOtherInput, setShowOtherInput] = useState(false);\n\n  useEffect(() => {\n    setShowOtherInput(!!enableOther || !!value?.other);\n  }, [value, enableOther]);\n\n  const selectItem = (selectedItem: OptionListItemProps) => {\n    const { selected, other } = value;\n    let newSelected: string[];\n    let newOtherValue: string | undefined;\n\n    const index = selected.indexOf(selectedItem.value);\n\n    if (index >= 0) {\n      newSelected = [...selected.slice(0, index), ...selected.slice(index + 1)];\n      newOtherValue = other;\n    } else if (singleSelection) {\n      newSelected = [selectedItem.value];\n      newOtherValue = undefined;\n    } else if (excludableValues?.includes(selectedItem.value)\n    || (excludableValues && selected.some(item => excludableValues.includes(item)))) {\n      newSelected = [selectedItem.value];\n      newOtherValue = undefined;\n    } else {\n      newSelected = [...selected, selectedItem.value];\n      newOtherValue = other;\n    }\n\n    if (onChange) {\n      onChange({\n        selected: newSelected,\n        other: newOtherValue,\n      });\n    }\n  };\n\n  const otherChangeHandler = (newOtherVaue: string) => {\n    const { selected } = value;\n    let newSelected: string[];\n\n    if (singleSelection || (excludableValues && selected.some(item => excludableValues.includes(item)))) {\n      newSelected = [];\n    } else {\n      newSelected = selected;\n    }\n\n    if (onChange) {\n      onChange({\n        selected: newSelected,\n        other: newOtherVaue,\n      });\n    }\n\n    if (!newOtherVaue) {\n      setShowOtherInput(false);\n    }\n  };\n\n  const addOtherClickHandler = () => {\n    setShowOtherInput(true);\n  };\n\n  return (\n    <>\n      {items.map((item, index) => {\n        const isSelected = value?.selected?.includes(item.value);\n        return (\n          <OptionListItem\n            key={item.value}\n            lastItem={items.length === index + 1 && !allowAddOther && !enableOther}\n            onClick={() => selectItem(item)}\n            isSelected={isSelected}\n          >\n            <OptionListItemLabel>\n              {item.label}\n            </OptionListItemLabel>\n            <OptionListCheck isSelected={isSelected} checkbox={isCheckbox} />\n          </OptionListItem>\n        );\n      })}\n      {allowAddOther && !showOtherInput && (\n      <OptionListAddOtherButton onClick={addOtherClickHandler} lastItem>\n        {addOtherLabel}\n      </OptionListAddOtherButton>\n      )}\n      {showOtherInput && (\n        <OptionListInputContainer>\n          <OptionListInput\n            placeholder={otherPlaceholder}\n            value={value?.other || ''}\n            isSelected={!!(value?.other)}\n            onChange={e => otherChangeHandler(e.target.value)}\n          />\n          {!!(value?.other) && (\n            <OptionListCheck />\n          )}\n        </OptionListInputContainer>\n      )}\n    </>\n  );\n};\n\nOptionList.defaultProps = {\n  value: defaultValue,\n  excludableValues: undefined,\n  singleSelection: false,\n  onChange: undefined,\n  allowAddOther: false,\n  addOtherLabel: '',\n  enableOther: false,\n  otherPlaceholder: '',\n};\n\nexport default React.memo(OptionList);\n","import { useMemo } from 'react';\nimport { useStateMachine } from 'little-state-machine';\n\n// Utils\nimport { updateAction } from 'utils/wizard';\n\nconst useCustomProgressBarSteps = (storeKey: any, metadata: CommonJSON<any> | undefined) => {\n  // Hooks\n  const { state } = useStateMachine(updateAction(storeKey));\n\n  // Memos\n  const customSteps = useMemo(() => {\n    const steps = {\n      total: metadata?.total,\n      current: metadata?.current,\n    };\n    if (state[storeKey]) {\n      const antigenTaken = state['submit-steps']?.typeCovidFlu?.selected.includes('antigenTaken');\n      const PCRTaken = state['submit-steps']?.typeCovidFlu?.selected.includes('PCRTaken');\n      const fluTaken = state['submit-steps']?.typeCovidFlu?.selected.includes('fluTaken');\n      const antigenTakenScreens = 1;\n      const PCRTakenScreens = 2;\n      const fluTakenScreens = 2;\n\n      switch (true) {\n        case antigenTaken && !PCRTaken && !fluTaken:\n          steps.total = metadata?.total - PCRTakenScreens - fluTakenScreens;\n          steps.current = metadata?.current - PCRTakenScreens - fluTakenScreens;\n          break;\n\n        case (antigenTaken && PCRTaken && !fluTaken) || (antigenTaken && !PCRTaken && fluTaken):\n          steps.total = metadata?.total - (PCRTakenScreens || fluTakenScreens);\n          steps.current = metadata?.current - (PCRTakenScreens || fluTakenScreens);\n          break;\n\n        case !antigenTaken && !PCRTaken && !fluTaken:\n          steps.total = metadata?.total - antigenTakenScreens - PCRTakenScreens - fluTakenScreens;\n          steps.current = metadata?.current - antigenTakenScreens - PCRTakenScreens - fluTakenScreens;\n          break;\n\n        case !antigenTaken && PCRTaken && fluTaken:\n          steps.total = metadata?.total - antigenTakenScreens;\n          steps.current = metadata?.current - antigenTakenScreens;\n          break;\n\n        case (!antigenTaken && !PCRTaken && fluTaken)\n        || (!antigenTaken && PCRTaken && !fluTaken):\n          steps.total = metadata?.total - antigenTakenScreens - (fluTakenScreens || PCRTakenScreens);\n          steps.current = metadata?.current - antigenTakenScreens - (fluTakenScreens || PCRTakenScreens);\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return steps;\n  }, [state, metadata, storeKey]);\n\n  // only for PCR test screens\n  const customCurrentStepPCR = useMemo(() => {\n    if (state[storeKey]) {\n      const PCRTaken = state['submit-steps'].typeCovidFlu?.selected.includes('PCRTaken');\n      const antigenTaken = state['submit-steps'].typeCovidFlu?.selected.includes('antigenTaken');\n      const fluTaken = state['submit-steps'].typeCovidFlu?.selected.includes('fluTaken');\n\n      if ((PCRTaken && !antigenTaken && !fluTaken) || (PCRTaken && antigenTaken && !fluTaken)) {\n        return customSteps.current + 2;\n      }\n      return customSteps.current;\n    }\n\n    return 0;\n  }, [state, storeKey, customSteps]);\n\n  return {\n    customSteps,\n    customCurrentStepPCR,\n  };\n};\n\nexport default useCustomProgressBarSteps;\n","import styled from 'styled-components';\n\nexport const RecaptchaContainer = styled.div`\n  margin: 20px 0;\n  \n  div {\n    margin: auto;\n  }\n`;\n","import React from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { useTranslation } from 'react-i18next';\n\n// Sentry\nimport * as Sentry from '@sentry/react';\n\n// Style\nimport { RecaptchaContainer } from './style';\n\nconst recaptchaKey = process.env.REACT_APP_RECAPTCHA_KEY || '';\n\ninterface RecaptchaProps {\n  onChange(token: string | null): void;\n  setRecaptchaAvailable(state: boolean): void;\n}\n\nconst Recaptcha = ({ onChange, setRecaptchaAvailable }: RecaptchaProps) => {\n  const { i18n } = useTranslation();\n\n  if (!recaptchaKey) return null;\n\n  return (\n    <RecaptchaContainer>\n      <ReCAPTCHA\n        sitekey={process.env.REACT_APP_RECAPTCHA_KEY || ''}\n        onChange={onChange}\n        onErrored={() => { setRecaptchaAvailable(false); Sentry.captureException('Error on ReCAPTCHA'); }}\n        hl={i18n.language}\n      />\n    </RecaptchaContainer>\n  );\n};\n\nexport default Recaptcha;\n","import axios from 'axios';\n\nexport const client = axios.create({\n  baseURL: process.env.REACT_APP_API,\n});\n\nexport default function useAxios() {\n  return client;\n}\n","import {\n  deviceDetect as rdd, isBrowser, isConsole, isMobile, isSmartTV, isTablet, isWearable,\n} from 'react-device-detect';\n\nconst deviceDetect = () => ({\n  isBrowser: isBrowser ? rdd() : null,\n  isMobile: isMobile ? rdd() : null,\n  isSmartTv: isSmartTV ? rdd() : null,\n  isConsole: isConsole ? rdd() : null,\n  isTablet: isTablet ? rdd() : null,\n  isWearable: isWearable ? rdd() : null,\n});\n\nexport default deviceDetect;\n","import * as H from 'history';\n\n// Hooks\nimport { client as axiosClient } from 'hooks/useAxios';\n\n//\nimport { allowSpeechIn } from 'helper/stepsDefinitions';\nimport deviceDetect from 'helper/deviceHelper';\n\ninterface DoSubmitProps {\n  setSubmitError(err: string | null): void;\n  state: CommonJSON;\n  captchaValue: string | null;\n  action(payload: Object): void;\n  nextStep?: string;\n  setActiveStep(status: boolean): void;\n  history: H.History;\n  userCookie: string;\n}\n\nexport async function doSubmit({\n  setSubmitError,\n  state,\n  captchaValue,\n  action,\n  nextStep,\n  setActiveStep,\n  history,\n  userCookie,\n}: DoSubmitProps) {\n  try {\n    setSubmitError(null);\n    const {\n      language,\n      country,\n      region,\n      patientId,\n\n      agreedConsentTerms,\n      agreedPolicyTerms,\n      agreedCovidDetection,\n      agreedCovidCollection,\n      agreedTrainingArtificial,\n      agreedBiometric,\n    } = state.welcome;\n\n    const {\n      recordYourCough,\n      recordYourBreath,\n      recordYourSpeech,\n\n      typeCovidFlu,\n      testTaken,\n      pcrTestDate,\n      pcrTestResult,\n      antigenTestDate,\n      whatAntigenTestResult,\n      antigenTestResult,\n\n      vaccine,\n      ageGroup,\n      gender,\n      ethnicity,\n      biologicalSex,\n\n      smokeLastSixMonths,\n      currentSymptoms,\n      symptomsStartedDate,\n      currentRespiratoryCondition,\n      currentMedicalCondition,\n\n      covidTimes,\n      lastTimeCovidMonths,\n      fluTestDate,\n      fluTestResult,\n      whenFluShot,\n\n    } = state['submit-steps'];\n\n    const body = new FormData();\n\n    body.append('device', JSON.stringify(deviceDetect()));\n    body.append('language', language);\n    body.append('country', country);\n    if (region) {\n      body.append('region', region);\n    }\n\n    if (patientId) {\n      body.append('patientId', patientId);\n    }\n\n    if (window.sourceCampaign) {\n      body.append('source', window.sourceCampaign);\n    }\n\n    if (userCookie) {\n      body.append('userCookie', JSON.stringify(userCookie));\n    }\n\n    body.append('agreedConsentTerms', agreedConsentTerms);\n    body.append('agreedPolicyTerms', agreedPolicyTerms);\n    body.append('agreedCovidCollection', agreedCovidCollection);\n    body.append('agreedCovidDetection', agreedCovidDetection);\n    body.append('agreedTrainingArtificial', agreedTrainingArtificial);\n    body.append('agreedBiometric', agreedBiometric);\n\n    const coughFile = recordYourCough.recordingFile || recordYourCough.uploadedFile;\n    body.append('cough', coughFile, coughFile.name || 'filename.wav');\n    const breathFile = recordYourBreath.recordingFile || recordYourBreath.uploadedFile;\n    body.append('breath', breathFile, breathFile.name || 'filename_breath.wav');\n    if (allowSpeechIn.includes(country)) {\n      const voiceFile = recordYourSpeech.recordingFile || recordYourSpeech.uploadedFile;\n      body.append('voice', voiceFile, voiceFile.name || 'filename_voice.wav');\n    }\n\n    if (typeCovidFlu?.selected?.length > 0) {\n      body.append('typeCovidFlu', typeCovidFlu.selected.join(','));\n    }\n\n    if (testTaken) {\n      body.append('testTaken', testTaken.join(','));\n    }\n\n    if (testTaken && testTaken.includes('pcr')) {\n      body.append('pcrTestDate', pcrTestDate.toISOString());\n      body.append('pcrTestResult', pcrTestResult);\n    }\n\n    if (testTaken && testTaken.includes('antigen')) {\n      body.append('antigenTestDate', antigenTestDate.toISOString());\n      body.append('antigenTestResult', antigenTestResult);\n      body.append('whatAntigenTestResult', whatAntigenTestResult);\n    }\n\n    if (vaccine) {\n      body.append('vaccine', vaccine);\n    }\n\n    if (ageGroup) {\n      body.append('ageGroup', ageGroup);\n    }\n\n    const genderSelected = gender.other || gender.selected[0];\n\n    if (ethnicity?.selected?.length > 0) {\n      body.append('ethnicity', ethnicity.selected.join(','));\n    }\n\n    if (genderSelected) {\n      body.append('gender', genderSelected);\n    }\n\n    if (biologicalSex) {\n      body.append('biologicalSex', biologicalSex);\n    }\n\n    if (smokeLastSixMonths) {\n      body.append('smokeLastSixMonths', smokeLastSixMonths);\n    }\n\n    if (currentSymptoms?.selected?.length > 0) {\n      body.append('currentSymptoms', currentSymptoms.selected.join(','));\n    }\n\n    if (symptomsStartedDate) {\n      body.append('symptomsStartedDate', symptomsStartedDate);\n    }\n\n    if (currentRespiratoryCondition?.selected?.length > 0) {\n      body.append('currentRespiratoryCondition', currentRespiratoryCondition.selected.join(','));\n    }\n\n    if (currentMedicalCondition?.selected?.length > 0) {\n      body.append('currentMedicalCondition', currentMedicalCondition.selected.join(','));\n    }\n\n    if (currentSymptoms?.other) {\n      body.append('otherSymptoms', currentSymptoms?.other);\n    }\n\n    if (currentRespiratoryCondition?.other) {\n      body.append('otherRespiratoryConditions', currentRespiratoryCondition?.other);\n    }\n\n    if (currentMedicalCondition?.other) {\n      body.append('otherMedicalConditions', currentMedicalCondition?.other);\n    }\n\n    if (antigenTestDate) {\n      body.append('antigenTestDate', antigenTestDate.toISOString());\n    }\n\n    if (antigenTestResult) {\n      body.append('antigenTestResult', antigenTestResult);\n    }\n\n    if (pcrTestDate) {\n      body.append('pcrTestDate', pcrTestDate.toISOString());\n      body.append('pcrTestResult', pcrTestResult);\n    }\n\n    if (covidTimes) {\n      body.append('covidTimes', covidTimes);\n    }\n\n    if (lastTimeCovidMonths) {\n      body.append('lastTimeCovidMonths', lastTimeCovidMonths);\n    }\n\n    if (fluTestDate) {\n      body.append('fluTestDate', fluTestDate.toISOString());\n    }\n\n    if (fluTestResult) {\n      body.append('fluTestResult', fluTestResult);\n    }\n\n    if (whenFluShot) {\n      body.append('whenFluShot', whenFluShot);\n    }\n\n    if (captchaValue) {\n      body.append('captchaValue', captchaValue);\n    }\n\n    const response = await axiosClient.post('saveSurvey', body, {\n      headers: {\n        'Content-Type': 'multipart/form-data; boundary=SaveSurvey',\n      },\n    });\n\n    action({});\n\n    if (nextStep && response.data?.submissionId) {\n      setActiveStep(false);\n      history.push(nextStep, { submissionId: response.data?.submissionId });\n    }\n  } catch (error) {\n    console.log(error);\n    setSubmitError('beforeSubmit:submitError');\n  }\n}\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport usePortal from 'react-useportal';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { useCookies } from 'react-cookie';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers';\nimport { ErrorMessage } from '@hookform/error-message';\nimport * as Yup from 'yup';\n\n// Update Action\nimport { updateAction } from 'utils/wizard';\n\n// Components\nimport Recaptcha from 'components/Recaptcha';\nimport ProgressIndicator from 'components/ProgressIndicator';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Hooks\nimport useCustomProgressBarSteps from 'hooks/useCustomProgressBarSteps';\n\n// Utils\nimport { scrollToTop } from 'helper/scrollHelper';\nimport { doSubmit } from 'helper/submitHelper';\nimport { getPatientId, getCountry } from 'helper/stepsDefinitions';\n\n// Styles\nimport OptionList from 'components/OptionList';\nimport WizardButtons from 'components/WizardButtons';\nimport {\n  QuestionText, TempBeforeSubmitError, MainContainer, QuestionAllApply,\n} from '../style';\n\nconst schema = Yup.object({\n  currentRespiratoryCondition: Yup.object({\n    selected: Yup.array().required(),\n  }),\n}).defined();\n\ntype Step5Type = Yup.InferType<typeof schema>;\n\nconst Step5 = ({\n  previousStep,\n  nextStep,\n  storeKey,\n  metadata,\n}: Wizard.StepProps) => {\n  // Hooks\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const { setDoGoBack, setTitle, setType } = useHeaderContext();\n  const history = useHistory();\n  const { t } = useTranslation();\n  const { state, action } = useStateMachine(updateAction(storeKey));\n  const [cookies] = useCookies(['virufy-study-user']);\n  const patientId = getPatientId();\n  const country = getCountry();\n  const { customSteps } = useCustomProgressBarSteps(storeKey, metadata);\n\n  const userCookie = cookies['virufy-study-user'];\n\n  // States\n  const [activeStep, setActiveStep] = React.useState(true);\n  const [submitError, setSubmitError] = React.useState<string | null>(null);\n  const [captchaValue, setCaptchaValue] = React.useState<string | null>(null);\n  const [recaptchaAvailable, setRecaptchaAvailable] = React.useState(true);\n\n  // Form\n  const {\n    control, handleSubmit, formState,\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: state?.[storeKey],\n    resolver: yupResolver(schema),\n  });\n  const { errors, isSubmitting } = formState;\n\n  const {\n    isValid,\n  } = formState;\n\n  const handleDoBack = React.useCallback(() => {\n    setActiveStep(false);\n    if (previousStep) {\n      history.push(previousStep);\n    } else {\n      history.goBack();\n    }\n  }, [history, previousStep]);\n\n  useEffect(() => {\n    scrollToTop();\n    setTitle(`${t('questionary:respiration.title')}`);\n    setType('primary');\n    setDoGoBack(() => handleDoBack);\n  }, [handleDoBack, setDoGoBack, setTitle, setType, metadata, t]);\n\n  // Handlers\n  const onSubmit = async (values: Step5Type) => {\n    if (values) {\n      if (((metadata?.current ?? 5) === (metadata?.total ?? 6) || (country === 'Japan' && !patientId))) {\n        await doSubmit({\n          setSubmitError: s => setSubmitError(!s ? null : t(s)),\n          state,\n          captchaValue,\n          action,\n          nextStep,\n          setActiveStep,\n          history,\n          userCookie,\n        });\n      } else {\n        action(values);\n        if (nextStep) {\n          setActiveStep(false);\n          history.push(nextStep);\n        }\n      }\n    }\n  };\n\n  const getLeftLabel = React.useCallback(() => {\n    if (country === 'Japan' && !patientId) {\n      if (isSubmitting) {\n        return t('questionary:submitting');\n      }\n      return t('beforeSubmit:submitButton');\n    }\n\n    return t('questionary:nextButton');\n  }, [country, isSubmitting, patientId, t]);\n\n  // Memos\n  const medicalOptions = React.useMemo(() => {\n    if (country === 'Japan') {\n      return [\n        {\n          value: 'none',\n          label: t('questionary:respiration.options.none'),\n        },\n        {\n          value: 'asthma',\n          label: t('questionary:respiration.options.asthma'),\n        },\n        {\n          value: 'pneumonia',\n          label: t('questionary:respiration.options.pneumonia'),\n        },\n        {\n          value: 'tuberculosis',\n          label: t('questionary:respiration.options.tuberculosis'),\n        },\n        {\n          value: 'copdEmphysema',\n          label: t('questionary:respiration.options.emphysema'),\n        },\n        {\n          value: 'pulmonaryFibrosis',\n          label: t('questionary:respiration.options.pulmonaryFibrosis'),\n        },\n        {\n          value: 'cysticFibrosis',\n          label: t('questionary:respiration.options.cysticFibrosis'),\n        },\n        {\n          value: 'chronicRespiratoryDisease',\n          label: t('questionary:respiration.options.chronicRespiratoryDisease'),\n        },\n        {\n          value: 'chronicLungDiseases',\n          label: t('questionary:respiration.options.chronicLungDiseases'),\n        },\n        {\n          value: 'coughOtherConditions',\n          label: t('questionary:respiration.options.coughOtherConditions'),\n        },\n        {\n          value: 'other',\n          label: t('questionary:medical.options.other'),\n        },\n      ];\n    }\n    return [\n      {\n        value: 'none',\n        label: t('questionary:respiration.options.none'),\n      },\n      {\n        value: 'asthma',\n        label: t('questionary:respiration.options.asthma'),\n      },\n      {\n        value: 'bronchitis',\n        label: t('questionary:respiration.options.bronchitis'),\n      },\n      {\n        value: 'copdEmphysema',\n        label: t('questionary:respiration.options.emphysema'),\n      },\n      {\n        value: 'pneumonia',\n        label: t('questionary:respiration.options.pneumonia'),\n      },\n      {\n        value: 'tuberculosis',\n        label: t('questionary:respiration.options.tuberculosis'),\n      },\n      {\n        value: 'other',\n        label: t('questionary:medical.options.other'),\n      },\n    ];\n  }, [country, t]);\n\n  return (\n    <MainContainer>\n      <ProgressIndicator\n        currentStep={customSteps.current}\n        totalSteps={customSteps.total}\n        progressBar\n      />\n      <QuestionText bold={false}>\n        <Trans i18nKey=\"questionary:respiration.question\">\n          <strong>Which of the below respiratory conditions do you currently have?</strong>\n        </Trans>\n        <QuestionAllApply>{t('questionary:allThatApply')}</QuestionAllApply>\n      </QuestionText>\n      <Controller\n        control={control}\n        name=\"currentRespiratoryCondition\"\n        defaultValue={{ selected: [], other: '' }}\n        render={({ onChange, value }) => (\n          <OptionList\n            isCheckbox\n            value={value}\n            onChange={v => onChange(v)}\n            items={medicalOptions}\n            excludableValues={['none']}\n          />\n        )}\n      />\n      <ErrorMessage\n        errors={errors}\n        name=\"currentRespiratoryCondition\"\n        render={({ message }) => (\n          <p>{message}</p>\n        )}\n      />\n\n      {/* Bottom Buttons */}\n      {activeStep && (\n        <Portal>\n          {((metadata?.current ?? 5) === (metadata?.total ?? 6) || (country === 'Japan' && !patientId)) && (\n            <Recaptcha onChange={setCaptchaValue} setRecaptchaAvailable={setRecaptchaAvailable} />\n          )}\n          {submitError && (\n            <TempBeforeSubmitError>\n              {submitError}\n            </TempBeforeSubmitError>\n          )}\n          <WizardButtons\n            invert\n            leftLabel={getLeftLabel()}\n            leftHandler={handleSubmit(onSubmit)}\n            leftDisabled={country === 'Japan' && !patientId ? (isSubmitting || (recaptchaAvailable && !captchaValue)) || !isValid : !isValid || !recaptchaAvailable}\n          />\n        </Portal>\n      )}\n    </MainContainer>\n  );\n};\n\nexport default React.memo(Step5);\n"],"sourceRoot":""}