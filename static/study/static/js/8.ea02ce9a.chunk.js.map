{"version":3,"sources":["components/WizardButtons/style.ts","components/WizardButtons/WizardButtons.tsx","components/Button/style.ts","components/Button/Button.tsx","helper/getDuration.ts","helper/audio/encoder-wav-worker.js","helper/audio/encoder-mp3-worker.js","helper/audio/encoder-flac-worker.js","helper/audio/RecorderService.js","components/MicRecorder/style.ts","components/MicRecorder/MicRecorder.tsx","containers/SubmitSteps/RecordingsSteps/Introduction/Record/Record.tsx","helper/fileHelper.ts","assets/icons/stop.svg","containers/SubmitSteps/RecordingsSteps/Introduction/Record/style.ts","utils/yup.ts","modals/RecordErrorModal/style.ts","modals/RecordErrorModal/RecordErrorModal.tsx","assets/icons/start.svg","assets/icons/upload.svg"],"names":["WizardButtonsContainer","styled","div","props","theme","layout","generalPaddingAmount","breakpoints","tablet","WizardButtons","React","memo","invert","leftLabel","leftDisabled","leftHandler","rightLabel","rightDisabled","rightHandler","Button","dark","disabled","onClick","StyledButton","button","color","colors","purple_50","purple","white","children","type","getDuration","e","remove","Promise","resolver","duration","Infinity","isSafari","addEventListener","pause","volume","currentTime","play","recorded","this","onmessage","data","buffer","length","Uint8Array","i","index","sample","push","encode","sampleRate","bufferLength","wav","view","DataView","setUint32","setUint16","CHANNELS","set","msg","postMessage","dump","close","mp3encoder","mp3Data","convertBuffer","arrayBuffer","Float32Array","out","Int16Array","input","output","s","Math","max","min","floatTo16BitPCM","opts","samplesMono","remaining","left","subarray","encodeBuffer","mp3buf","flush","importScripts","baseUrl","lamejs","Mp3Encoder","flacEncoder","process","SAMPLERATE","COMPRESSION","BPS","flacOk","flacLength","flacBuffers","wavBuffers","writeCallbackFn","bytes","byteLength","initFlac","Flac","create_libflac_encoder","statusEncoder","init_encoder_stream","console","log","error","doEncodeFlac","audioData","bufLength","bufferI32","Uint32Array","setInt32","flacReturn","FLAC__stream_encoder_process_interleaved","exportFlacFile","recBuffers","recLength","samples","channelBuffer","recordingLength","result","offset","lng","mergeBuffersUint8","Blob","config","finalConfig","bps","channels","samplerate","compression","isReady","onready","setTimeout","init","len","buffered","splice","info","encodeFlac","FLAC__stream_encoder_finish","FLAC__stream_encoder_delete","RecorderService","cleanup","onRecording","em","removeEventListener","recordingFn","onAudioProcesss","onAudioProcessFn","createWorker","fn","js","toString","replace","blob","Worker","URL","createObjectURL","startRecording","timeslice","state","navigator","mediaDevices","getUserMedia","audioCtx","AudioContext","micGainNode","createGain","outputGainNode","createDynamicsCompressorNode","dynamicsCompressorNode","createDynamicsCompressor","createAnalyserNode","analyserNode","createAnalyser","forceScriptProcessor","broadcastAudioProcessEvents","usingMediaRecorder","processorNode","createScriptProcessor","processorBufferSize","createMediaStreamDestination","destinationNode","destination","manualEncoderId","encoderWorker","EncoderMp3","encoderMimeType","EncoderFlac","EncoderWav","event","Event","_onDataAvailable","userMediaConstraints","audio","echoCancellation","enableEchoCancellation","deviceId","then","stream","_startRecordingWithStream","catch","setMicGain","newGain","micGain","gain","setValueAtTime","micAudioStream","inputStreamNode","createMediaStreamSource","context","onGraphSetupWithInputStream","connect","nextNode","onaudioprocess","_onAudioProcess","mediaRecorder","MediaRecorder","mimeType","evt","_onError","start","slicing","setInterval","dispatchEvent","CustomEvent","detail","inputBuffer","outputBuffer","getChannelData","stopRecording","stop","clearInterval","chunks","chunkType","blobUrl","recording","ts","Date","getTime","size","disconnect","stopTracksAndCloseCtxWhenFinished","getTracks","forEach","track","window","webkitAudioContext","document","createDocumentFragment","undefined","onAudioPress","MicRecorderContainer","MicButtonsContainer","MicButtonWithText","MicNote","p","lightDarkGray","MicRecorderButton","opacity","MicRecorderImage","img","MicRecorderStartImage","MicRecorderStopImage","MicRecorderTimerContainer","MicRecorderTimerReleaseTextContainer","red","MicRecorderTextP","show","baseConfig","className","maxTimeInSeconds","minTimeInSeconds","onNewRecord","delay","recordingFile","isShortAudioCollection","t","useTranslation","recordingService","useRef","audioSamples","timerRef","timeout","target","useState","micAllowed","setMicAllowed","recordingInProgress","setRecordingInProgress","showReleaseText","setShowReleaseText","showShortRecordingText","setShowShortRecordingText","longPressTriggered","setLongPressTriggered","onAudioProcess","useCallback","current","channel","numberOfChannels","inputData","outputData","onNewRecording","a","fetch","r","fileName","file","FileHelper","blobToFile","humanReadableSize","sizeAsHuman","useEffect","err","Sentry","Audio","defaultMuted","muted","load","listenerFn","setTime","handleStartRecording","reset","handleStopRecording","handleFormatValue","value","preventDefault","handleStartLongPress","passive","handleEndLongPress","clearTimeout","RecordErrorModal","isOpen","modalTitle","onConfirm","seconds","ref","startImmediately","checkpoints","time","callback","Minutes","Seconds","formatValue","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onMouseLeave","src","StartSVG","alt","StopSVG","audioMinLength","recordYourBreath","recordYourSpeech","recordYourCough","schema","Yup","object","mixed","required","validateAudioSize","when","_schema","validateAudioLength","defined","onNext","onManualUpload","defaultValues","currentLogic","action","Portal","usePortal","bindTo","getElementById","useForm","mode","_currentLogic","yupResolver","handleSubmit","control","getValues","formState","isValid","micKey","name","render","onChange","key","uploadedFile","UploadSVG","si","thresh","abs","units","u","toFixed","theBlob","b","lastModifiedDate","module","exports","MainContainer","Text","BlackText","darkBlack","MicContainer","UploadContainer","UploadImage","UploadText","StopImg","attrs","maxDuration","test","audioMaxSizeInMb","ModalBody","ModalTitle","ModalContent","Modal","setAppElement","style","content","height","maxWidth","margin","borderRadius","border","overlay","backgroundColor"],"mappings":"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","file":"static/js/8.ea02ce9a.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const WizardButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: ${props => `calc(100% - ${props.theme.layout.generalPaddingAmount * 2}px)`};\n  margin: 0 auto;\n\n  button {\n    flex: 1;\n    min-height: 50px;\n    margin-bottom: 8px;\n\n    &:first-of-type {\n      margin-left: 0px !important;\n    }\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Components\nimport Button from 'components/Button';\n\n// Styles\nimport {\n  WizardButtonsContainer,\n} from './style';\n\ninterface WizardButtonsProps {\n  invert?: boolean;\n  leftLabel: string;\n  leftDisabled?: boolean;\n  leftHandler: () => void;\n  rightLabel?: string;\n  rightDisabled?: boolean;\n  rightHandler?: () => void;\n}\n\nconst WizardButtons = React.memo(({\n  invert = false,\n  leftLabel,\n  leftDisabled,\n  leftHandler,\n  rightLabel,\n  rightDisabled,\n  rightHandler,\n}: WizardButtonsProps) => (\n  <WizardButtonsContainer>\n    <Button\n      dark={invert}\n      disabled={leftDisabled}\n      onClick={leftHandler}\n    >\n      {leftLabel}\n    </Button>\n    {\n        rightLabel && rightHandler && (\n          <Button\n            dark={!invert}\n            disabled={rightDisabled}\n            onClick={rightHandler}\n          >\n            {rightLabel}\n          </Button>\n        )\n      }\n  </WizardButtonsContainer>\n));\nexport default React.memo(WizardButtons);\n","import styled from 'styled-components';\nimport { colors } from '../../theme';\n\nexport interface StyledButtonProps {\n  disabled?: boolean;\n  dark?: boolean;\n  id?: string;\n}\n\nexport const StyledButton = styled.button<StyledButtonProps>`\n  height: 50px;\n  border-radius: 15px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  font-weight: bold;\n  font-size: 14px;\n  font-weight: bold;\n  width: 100%;\n\n  ${({ dark, disabled }) => {\n    const color = disabled ? colors.purple_50 : colors.purple;\n    return dark ? `\n    background-color: ${color};\n    color: ${colors.white};\n    border: none;\n  ` : `\n    background-color: ${colors.white};\n    color: ${color};\n    border: 1px solid ${color};\n  `;\n  }}\n`;\n","import React, { PropsWithChildren } from 'react';\n\n// Styles\nimport {\n  StyledButton,\n  StyledButtonProps,\n} from './style';\n\nexport interface ButtonProps extends PropsWithChildren<StyledButtonProps> {\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void);\n}\n\nconst Button = React.memo(({ children, ...props }: ButtonProps) => ((\n  <StyledButton\n    type=\"button\"\n    {...props}\n  >\n    {children}\n  </StyledButton>\n)));\n\nexport default Button;\n","import { isSafari } from 'react-device-detect';\n\nexport function getDuration(e: HTMLAudioElement, remove?: boolean): Promise<number> {\n  return new Promise(resolver => {\n    if (e.duration !== Infinity\n        && (!isSafari\n        || (isSafari && e.duration > 0))) {\n      resolver(e.duration);\n      return;\n    }\n    e.addEventListener('durationchange', () => {\n      if (remove) {\n        e.remove();\n      } else {\n        e.pause();\n        e.volume = 1;\n        e.currentTime = 0;\n      }\n      resolver(e.duration);\n    });\n    e.currentTime = 24 * 60 * 60; // Unprobable time\n    e.play();\n  });\n}\n","export default function () {\n  // Parts copied from https://github.com/chris-rudmin/Recorderjs\n  const BYTES_PER_SAMPLE = 2;\n  const CHANNELS = 1; // 1=mono , 2=Stereo\n  let recorded = [];\n\n  function encode(buffer) {\n    const { length } = buffer;\n    const data = new Uint8Array(length * BYTES_PER_SAMPLE * CHANNELS);\n    for (let i = 0; i < length; i += 1) {\n      const index = i * BYTES_PER_SAMPLE * CHANNELS;\n      let sample = buffer[i];\n      if (sample > 1) {\n        sample = 1;\n      } else if (sample < -1) {\n        sample = -1;\n      }\n      sample *= 32768;\n      data[index] = sample;\n      // eslint-disable-next-line no-bitwise\n      data[index + 1] = sample >> 8;\n    }\n    recorded.push(data);\n  }\n\n  function dump(sampleRate) {\n    const bufferLength = recorded.length ? recorded[0].length : 0;\n    const length = recorded.length * bufferLength;\n    const wav = new Uint8Array(44 + length);\n\n    const view = new DataView(wav.buffer);\n\n    // RIFF identifier 'RIFF'\n    view.setUint32(0, 1380533830, false);\n    // file length minus RIFF identifier length and file description length\n    view.setUint32(4, 36 + length, true);\n    // RIFF type 'WAVE'\n    view.setUint32(8, 1463899717, false);\n    // format chunk identifier 'fmt '\n    view.setUint32(12, 1718449184, false);\n    // format chunk length\n    view.setUint32(16, 16, true);\n    // sample format (raw)\n    view.setUint16(20, 1, true);\n    // channel count\n    view.setUint16(22, CHANNELS, true);\n    // sample rate\n    view.setUint32(24, sampleRate, true); // 44100 Khz\n    // byte rate (channels * sample rate * block align)\n    view.setUint32(28, CHANNELS * sampleRate * BYTES_PER_SAMPLE, true); // kbps = 1411\n    // block align (channel count * bytes per sample)\n    view.setUint16(32, CHANNELS * BYTES_PER_SAMPLE, true);\n    // bits per sample\n    view.setUint16(34, 8 * BYTES_PER_SAMPLE, true); // 16\n    // data chunk identifier 'data'\n    view.setUint32(36, 1684108385, false);\n    // data chunk length\n    view.setUint32(40, length, true);\n\n    for (let i = 0; i < recorded.length; i += 1) {\n      wav.set(recorded[i], i * bufferLength + 44);\n    }\n\n    recorded = [];\n    const msg = [wav.buffer];\n    postMessage(msg, [msg[0]]);\n  }\n\n  this.onmessage = e => {\n    if (e.data[0] === 'encode') {\n      encode(e.data[1]);\n    } else if (e.data[0] === 'dump') {\n      dump(e.data[1]);\n    } else if (e.data[0] === 'close') {\n      this.close();\n    }\n  };\n}\n","// import 'babel-polyfill'\n// import lamejs from 'lamejs';\n\nexport default function () {\n  // Note that relative paths don't work when loaded as a blob\n  // https://stackoverflow.com/questions/22172426/using-importsscripts-within-blob-in-a-karma-environment\n  // importScripts('https://localhost:8443/workers/encoders/lame.js') // eslint-disable-line\n\n  const channels = 1; // 1 for mono or 2 for stereo\n  // let sampleRate = 44100 // 44.1khz (normal mp3 samplerate)\n  const kbps = 128; // encode 128kbps mp3\n\n  let mp3encoder = null;\n\n  const maxSamples = 1152;\n\n  let mp3Data = []; // array of Uint8Array\n\n  function init(opts) {\n    /* global lamejs */\n    importScripts(opts.baseUrl + '/workers/encoders/lame.min.js'); // eslint-disable-line\n    mp3encoder = new lamejs.Mp3Encoder(channels, opts.sampleRate, kbps);\n  }\n\n  function floatTo16BitPCM(input, output) {\n    for (let i = 0; i < input.length; i += 1) {\n      const s = Math.max(-1, Math.min(1, input[i]));\n      // eslint-disable-next-line no-param-reassign\n      output[i] = (s < 0 ? s * 0x8000 : s * 0x7FFF);\n    }\n  }\n\n  function convertBuffer(arrayBuffer) {\n    const data = new Float32Array(arrayBuffer);\n    const out = new Int16Array(arrayBuffer.length);\n    floatTo16BitPCM(data, out);\n    return out;\n  }\n\n  function encode(arrayBuffer) {\n    const samplesMono = convertBuffer(arrayBuffer);\n    let remaining = samplesMono.length;\n    for (let i = 0; remaining >= 0; i += maxSamples) {\n      const left = samplesMono.subarray(i, i + maxSamples);\n      const data = mp3encoder.encodeBuffer(left);\n      mp3Data.push(data);\n      remaining -= maxSamples;\n    }\n\n    // var mp3buf = mp3encoder.encodeBuffer(buffer)\n    // if (mp3buf.length > 0) {\n    //   mp3Data.push(mp3buf)\n    // }\n  }\n\n  function dump() {\n    const mp3buf = mp3encoder.flush();\n    if (mp3buf.length > 0) {\n      mp3Data.push(mp3buf);\n    }\n\n    // Probably results in native memory copy\n    postMessage(mp3Data);\n\n    // Would like to do this, but not possible because mp3Data is generic array of Uint8Array, and generic\n    // arrays are not transferrable types.\n    // postMessage(mp3Data, [mp3Data])\n\n    // This might help if/when ever become available again\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transfer\n\n    // For now, though, we have not other option except to build a complete copy in javascript. This means\n    // we temporarily require twice the memory of whatever was recorded.\n\n    mp3Data = [];\n  }\n\n  onmessage = function onmessage(e) {\n    if (e.data[0] === 'encode') {\n      encode(e.data[1]);\n    } else if (e.data[0] === 'dump') {\n      dump(e.data[1]);\n    } else if (e.data[0] === 'init') {\n      init(e.data[1]);\n    } else if (e.data[0] === 'close') {\n      this.close();\n    }\n  };\n}\n","/* eslint-disable */\n/* eslint-disable func-names */\n/* global Flac */\n\nexport default function () {\n  const workersHost = process.env.PUBLIC_URL || process.env.REACT_APP_WORKERS_HOST || 'https://virufy.org/study';\n  importScripts(`${workersHost}/workers/encoders/libflac.dev.js`); // eslint-disable-line\n\n  let flacEncoder;\n  let CHANNELS = 1;\n  let SAMPLERATE = 44100;\n  let COMPRESSION = 5;\n  let BPS = 16;\n  let flacOk = 1;\n  let flacLength = 0;\n  const flacBuffers = [];\n  let INIT = false;\n  const wavBuffers = [];\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function writeCallbackFn(buffer, bytes) {\n    flacBuffers.push(buffer);\n    flacLength += buffer.byteLength;\n  }\n\n  // HELPER: handle initialization of flac encoder\n  function initFlac() {\n    flacEncoder = Flac.create_libflac_encoder(SAMPLERATE, CHANNELS, BPS, COMPRESSION, 0);\n    /// /\n    if (flacEncoder !== 0) {\n      const statusEncoder = Flac.init_encoder_stream(flacEncoder, writeCallbackFn);\n      flacOk &= (statusEncoder == 0);\n\n      console.log(`flac init     : ${flacOk}`);// DEBUG\n      console.log(`status encoder: ${statusEncoder}`);// DEBUG\n\n      INIT = true;\n    } else {\n      console.error('Error initializing the encoder.');\n    }\n  }\n\n  function init(config) {\n    let finalConfig = config;\n\n    if (!finalConfig) {\n      finalConfig = {\n        bps: BPS, channels: CHANNELS, samplerate: SAMPLERATE, compression: COMPRESSION,\n      };\n    }\n\n    finalConfig.channels = finalConfig.channels ? finalConfig.channels : CHANNELS;\n    finalConfig.samplerate = finalConfig.samplerate ? finalConfig.samplerate : SAMPLERATE;\n    finalConfig.bps = finalConfig.bps ? finalConfig.bps : BPS;\n    finalConfig.compression = finalConfig.compression ? finalConfig.compression : COMPRESSION;\n\n    /// /\n    COMPRESSION = finalConfig.compression;\n    BPS = finalConfig.bps;\n    SAMPLERATE = finalConfig.samplerate;\n    CHANNELS = finalConfig.channels;\n    /// /\n\n    if (!Flac.isReady()) {\n      Flac.onready = function () {\n        setTimeout(() => {\n          initFlac();\n        }, 0);\n      };\n    } else {\n      initFlac();\n    }\n  }\n\n  // HELPER: actually encode PCM data to Flac\n  function doEncodeFlac(audioData) {\n    const bufLength = audioData.length;\n    const bufferI32 = new Uint32Array(bufLength);\n    const view = new DataView(bufferI32.buffer);\n    const volume = 1;\n    let index = 0;\n    for (let i = 0; i < bufLength; i += 1) {\n      view.setInt32(index, (audioData[i] * (0x7FFF * volume)), true);\n      index += 4;\n    }\n\n    const flacReturn = Flac.FLAC__stream_encoder_process_interleaved(\n      flacEncoder, bufferI32, bufferI32.length / CHANNELS,\n    );\n    if (flacReturn != true) {\n      console.log(`Error: encode_buffer_pcm_as_flac returned false. ${flacReturn}`);\n    }\n  }\n\n  // HELPER: handle incoming PCM audio data for Flac encoding:\n  function encodeFlac(audioData) {\n    if (!Flac.isReady()) {\n      // if Flac is not ready yet: buffer the audio\n      wavBuffers.push(audioData);\n      console.info('buffered audio data for Flac encdoing');\n    } else {\n      if (wavBuffers.length > 0) {\n        // if there is buffered audio: encode buffered first (and clear buffer)\n\n        const len = wavBuffers.length;\n        const buffered = wavBuffers.splice(0, len);\n        // eslint-disable-next-line no-plusplus\n        for (let i = 0; i < len; ++i) {\n          doEncodeFlac(buffered[i]);\n        }\n      }\n\n      doEncodeFlac(audioData);\n    }\n  }\n\n  function mergeBuffersUint8(channelBuffer, recordingLength) {\n    const result = new Uint8Array(recordingLength);\n    let offset = 0;\n    const lng = channelBuffer.length;\n    for (let i = 0; i < lng; i += 1) {\n      const buffer = channelBuffer[i];\n      result.set(buffer, offset);\n      offset += buffer.length;\n    }\n    return result;\n  }\n\n  function exportFlacFile(recBuffers, recLength) {\n    // convert buffers into one single buffer\n    const samples = mergeBuffersUint8(recBuffers, recLength);\n\n    // var audioBlob = new Blob([samples], { type: type });\n    const theBlob = new Blob([samples], { type: 'audio/flac' });\n    return theBlob;\n  }\n\n  /*\n   * clear recording buffers\n   */\n  function clear() {\n    flacBuffers.splice(0, flacBuffers.length);\n    flacLength = 0;\n    wavBuffers.splice(0, wavBuffers.length);\n  }\n\n  this.onmessage = function onmessage(e) {\n    if (e.data[0] === 'init') {\n      init(e.data[1]);\n    } else if (e.data[0] === 'encode') {\n      encodeFlac(e.data[1]);\n    } else if (e.data[0] === 'dump') {\n      let data;\n      if (!Flac.isReady()) {\n        console.error('Flac was not initialized: could not encode data!');\n      } else {\n        flacOk &= Flac.FLAC__stream_encoder_finish(flacEncoder);\n        console.log(`flac finish: ${flacOk}`);// DEBUG\n        data = exportFlacFile(flacBuffers, flacLength);\n\n        Flac.FLAC__stream_encoder_delete(flacEncoder);\n      }\n\n      clear();\n\n      postMessage(data);\n      INIT = false;\n    }\n  };\n}\n","/* eslint-disable max-len */\n/* eslint-disable consistent-return */\n/* eslint-disable no-underscore-dangle */\n// Vendor Library https://github.com/mogwai/pwa-audio-recorder/tree/master\n\nimport EncoderWav from './encoder-wav-worker';\nimport EncoderMp3 from './encoder-mp3-worker';\nimport EncoderFlac from './encoder-flac-worker';\n// import EncoderOgg from './encoder-ogg-worker';\n\nexport default class RecorderService {\n  constructor(config) {\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n\n    this.em = document.createDocumentFragment();\n\n    this.state = 'inactive';\n\n    this.chunks = [];\n    this.chunkType = '';\n\n    this.encoderMimeType = 'audio/wav';\n\n    this.config = {\n      broadcastAudioProcessEvents: config.broadcastAudioProcessEvents !== undefined ? config.broadcastAudioProcessEvents : false,\n      createAnalyserNode: config.createAnalyserNode !== undefined ? config.createAnalyserNode : false,\n      createDynamicsCompressorNode: config.createDynamicsCompressorNode !== undefined ? config.createDynamicsCompressorNode : false,\n      forceScriptProcessor: config.forceScriptProcessor !== undefined ? config.forceScriptProcessor : false,\n      manualEncoderId: config.manualEncoderId !== undefined ? config.manualEncoderId : 'wav',\n      micGain: config.micGain !== undefined ? config.micGain : 1.0,\n      processorBufferSize: config.processorBufferSize !== undefined ? config.processorBufferSize : 2048,\n      stopTracksAndCloseCtxWhenFinished: config.stopTracksAndCloseCtxWhenFinished !== undefined ? config.stopTracksAndCloseCtxWhenFinished : true,\n      usingMediaRecorder: config.usingMediaRecorder !== undefined ? config.usingMediaRecorder : typeof window.MediaRecorder !== 'undefined',\n      enableEchoCancellation: config.enableEchoCancellation !== undefined ? config.enableEchoCancellation : true,\n      sampleRate: config.sampleRate !== undefined ? config.sampleRate : 44100,\n      onRecording: config.onRecording,\n      onAudioPress: config.onAudioPress,\n    };\n\n    if (config.onRecording) {\n      this.recordingFn = evt => config.onRecording(evt);\n      this.em.addEventListener('recording', this.recordingFn);\n    }\n    if (config.onAudioProcesss) {\n      this.onAudioProcessFn = evt => config.onAudioProcesss(evt);\n      this.em.addEventListener('onaudioprocess', this.onAudioProcessFn);\n    }\n  }\n\n  cleanup = () => {\n    if (this.config.onRecording) {\n      this.em.removeEventListener('recording', this.recordingFn);\n    }\n    if (this.config.onAudioProcesss) {\n      this.em.removeEventListener('onaudioprocess', this.onAudioProcessFn);\n    }\n  };\n\n  createWorker = fn => {\n    const js = fn\n      .toString()\n      .replace(/^function\\s*\\(\\)\\s*{/, '')\n      .replace(/}$/, '');\n    const blob = new Blob([js]);\n    return new Worker(URL.createObjectURL(blob));\n  };\n\n  startRecording = timeslice => {\n    if (this.state !== 'inactive') {\n      return;\n    }\n\n    // This is the case on ios/chrome, when clicking links from within ios/slack (sometimes), etc.\n    if (\n      !navigator\n      || !navigator.mediaDevices\n      || !navigator.mediaDevices.getUserMedia\n    ) {\n      // alert('Missing support for navigator.mediaDevices.getUserMedia'); // temp: helps when testing for strange issues on ios/safari\n      return;\n    }\n\n    this.audioCtx = new AudioContext({\n      sampleRate: this.config.sampleRate,\n    });\n    this.micGainNode = this.audioCtx.createGain();\n    this.outputGainNode = this.audioCtx.createGain();\n\n    if (this.config.createDynamicsCompressorNode) {\n      this.dynamicsCompressorNode = this.audioCtx.createDynamicsCompressor();\n    }\n\n    if (this.config.createAnalyserNode) {\n      this.analyserNode = this.audioCtx.createAnalyser();\n    }\n\n    // If not using MediaRecorder(i.e. safari and edge), then a script processor is required. It's optional\n    // on browsers using MediaRecorder and is only useful if wanting to do custom analysis or manipulation of\n    // recorded audio data.\n    if (\n      this.config.forceScriptProcessor\n      || this.config.broadcastAudioProcessEvents\n      || !this.config.usingMediaRecorder\n    ) {\n      this.processorNode = this.audioCtx.createScriptProcessor(\n        this.config.processorBufferSize,\n        1,\n        1,\n      ); // TODO: Get the number of channels from mic\n    }\n\n    // Create stream destination on chrome/firefox because, AFAICT, we have no other way of feeding audio graph output\n    // in to MediaRecorderSafari/Edge don't have this method as of 2018-04.\n    if (this.audioCtx.createMediaStreamDestination) {\n      this.destinationNode = this.audioCtx.createMediaStreamDestination();\n    } else {\n      this.destinationNode = this.audioCtx.destination;\n    }\n\n    // Create web worker for doing the encoding\n    if (!this.config.usingMediaRecorder) {\n      if (this.config.manualEncoderId === 'mp3') {\n        this.encoderWorker = this.createWorker(EncoderMp3);\n        const baseUrl = process.env.PUBLIC_URL || 'https://virufy.org/study';\n        this.encoderWorker.postMessage([\n          'init',\n          { baseUrl, sampleRate: this.audioCtx.sampleRate },\n        ]);\n        this.encoderMimeType = 'audio/mpeg';\n      } else if (this.config.manualEncoderId === 'flac') {\n        this.encoderWorker = this.createWorker(EncoderFlac);\n        this.encoderWorker.postMessage([\n          'init',\n          { sampleRate: this.audioCtx.sampleRate },\n        ]);\n        this.encoderMimeType = 'audio/flac';\n      } else {\n        this.encoderWorker = this.createWorker(EncoderWav);\n        this.encoderMimeType = 'audio/wav';\n      }\n      this.encoderWorker.addEventListener('message', e => {\n        const event = new Event('dataavailable');\n        if (this.config.manualEncoderId === 'ogg' || this.config.manualEncoderId === 'flac') {\n          event.data = e.data;\n        } else {\n          event.data = new Blob(e.data, { type: this.encoderMimeType });\n        }\n        this._onDataAvailable(event);\n      });\n    }\n\n    // Setup media constraints\n    const userMediaConstraints = {\n      audio: {\n        echoCancellation: this.config.enableEchoCancellation,\n      },\n    };\n    if (this.config.deviceId) {\n      userMediaConstraints.audio.deviceId = this.config.deviceId;\n    }\n\n    // This will prompt user for permission if needed\n    return navigator.mediaDevices\n      .getUserMedia(userMediaConstraints)\n      .then(stream => {\n        this._startRecordingWithStream(stream, timeslice);\n      })\n      .catch(error => {\n        // alert(`Error with getUserMedia: ${error.message}`); // temp: helps when testing for strange issues on ios/safari\n        console.log(error);\n      });\n  };\n\n  setMicGain = newGain => {\n    this.config.micGain = newGain;\n    if (this.audioCtx && this.micGainNode) {\n      this.micGainNode.gain.setValueAtTime(newGain, this.audioCtx.currentTime);\n    }\n  };\n\n  _startRecordingWithStream = (stream, timeslice) => {\n    this.micAudioStream = stream;\n\n    this.inputStreamNode = this.audioCtx.createMediaStreamSource(\n      this.micAudioStream,\n    );\n    this.audioCtx = this.inputStreamNode.context;\n\n    // Kind-of a hack to allow hooking in to audioGraph inputStreamNode\n    if (this.onGraphSetupWithInputStream) {\n      this.onGraphSetupWithInputStream(this.inputStreamNode);\n    }\n\n    this.inputStreamNode.connect(this.micGainNode);\n    this.micGainNode.gain.setValueAtTime(\n      this.config.micGain,\n      this.audioCtx.currentTime,\n    );\n\n    let nextNode = this.micGainNode;\n    if (this.dynamicsCompressorNode) {\n      this.micGainNode.connect(this.dynamicsCompressorNode);\n      nextNode = this.dynamicsCompressorNode;\n    }\n\n    this.state = 'recording';\n\n    if (this.processorNode) {\n      nextNode.connect(this.processorNode);\n      this.processorNode.connect(this.outputGainNode);\n      this.processorNode.onaudioprocess = e => this._onAudioProcess(e);\n    } else {\n      nextNode.connect(this.outputGainNode);\n    }\n\n    if (this.analyserNode) {\n      // TODO: If we want the analyser node to receive the processorNode's output, this needs to be changed _and_\n      //       processor node needs to be modified to copy input to output. It currently doesn't because it's not\n      //       needed when doing manual encoding.\n      // this.processorNode.connect(this.analyserNode)\n      nextNode.connect(this.analyserNode);\n    }\n\n    this.outputGainNode.connect(this.destinationNode);\n\n    if (this.config.usingMediaRecorder) {\n      this.mediaRecorder = new MediaRecorder(this.destinationNode.stream, { mimeType: this.encoderMimeType });\n      this.mediaRecorder.addEventListener('dataavailable', evt => this._onDataAvailable(evt));\n      this.mediaRecorder.addEventListener('error', evt => this._onError(evt));\n\n      this.mediaRecorder.start(timeslice);\n    } else {\n      // Output gain to zero to prevent feedback. Seems to matter only on Edge, though seems like should matter\n      // on iOS too.  Matters on chrome when connecting graph to directly to audioCtx.destination, but we are\n      // not able to do that when using MediaRecorder.\n      this.outputGainNode.gain.setValueAtTime(0, this.audioCtx.currentTime);\n      // this.outputGainNode.gain.value = 0\n\n      // Todo: Note that time slicing with manual wav encoderWav won't work. To allow it would require rewriting the encoderWav\n      // to assemble all chunks at end instead of adding header to each chunk.\n      if (timeslice) {\n        console.log(\n          'Time slicing without MediaRecorder is not yet supported. The resulting recording will not be playable.',\n        );\n        this.slicing = setInterval(function anon() {\n          if (this.state === 'recording') {\n            this.encoderWorker.postMessage(['dump', this.context.sampleRate]);\n          }\n        }, timeslice);\n      }\n    }\n  };\n\n  _onAudioProcess = e => {\n    // console.log('onaudioprocess', e)\n    // let inputBuffer = e.inputBuffer\n    // let outputBuffer = e.outputBuffer\n    // console.log(this.micAudioStream)\n    // console.log(this.audioCtx)\n    // console.log(this.micAudioStream.getTracks().forEach((track) => console.log(track)))\n\n    // this.onAudioEm.dispatch(new Event('onaudioprocess', {inputBuffer:inputBuffer,outputBuffer:outputBuffer}))\n\n    if (this.config.broadcastAudioProcessEvents) {\n      this.em.dispatchEvent(\n        new CustomEvent('onaudioprocess', {\n          detail: {\n            inputBuffer: e.inputBuffer,\n            outputBuffer: e.outputBuffer,\n          },\n        }),\n      );\n    }\n\n    // // Example handling:\n    // let inputBuffer = e.inputBuffer\n    // let outputBuffer = e.outputBuffer\n    // // Each channel (usually only one)\n    // for (let channel = 0; channel < outputBuffer.numberOfChannels; channel++) {\n    //   let inputData = inputBuffer.getChannelData(channel)\n    //   let outputData = outputBuffer.getChannelData(channel)\n    //\n    //   // Each sample\n    //   for (let sample = 0; sample < inputBuffer.length; sample++) {\n    //     // Make output equal to the same as the input (thus processor is doing nothing at this time)\n    //     outputData[sample] = inputData[sample]\n    //   }\n    // }\n\n    // When manually encoding (safari/edge), there's no reason to copy data to output buffer.  We set the output\n    // gain to 0 anyways (which is required on Edge if we did copy data to output). However, if using a MediaRecorder\n    // and a processor (all other browsers), then it would be required to copy the data otherwise the graph would\n    // generate no data for the MediaRecorder to consume.\n    // if (this.forceScriptProcessor) {\n\n    // // Copy input to output\n    // let inputBuffer = e.inputBuffer\n    // let outputBuffer = e.outputBuffer\n    // // This doesn't work on iOS/Safari. Guessing it doesn't have copyToChannel support, but haven't verified.\n    // for (let channel = 0; channel < outputBuffer.numberOfChannels; channel++) {\n    //   outputBuffer.copyToChannel(inputBuffer.getChannelData(channel), channel)\n    // }\n\n    // Safari and Edge require manual encoding via web worker. Single channel only for now.\n    // Example stereo encoderWav: https://github.com/MicrosoftEdge/Demos/blob/master/microphone/scripts/recorderworker.js\n    if (!this.config.usingMediaRecorder) {\n      if (this.state === 'recording') {\n        if (this.config.broadcastAudioProcessEvents) {\n          this.encoderWorker.postMessage([\n            'encode',\n            e.outputBuffer.getChannelData(0),\n          ]);\n        } else {\n          this.encoderWorker.postMessage([\n            'encode',\n            e.inputBuffer.getChannelData(0),\n          ]);\n        }\n      }\n    }\n  };\n\n  stopRecording = () => {\n    if (this.state === 'inactive') {\n      return;\n    }\n    if (this.config.usingMediaRecorder) {\n      this.state = 'inactive';\n      this.mediaRecorder.stop();\n    } else {\n      this.state = 'inactive';\n      this.encoderWorker.postMessage(['dump', this.audioCtx.sampleRate]);\n      clearInterval(this.slicing);\n\n      // TODO: There should be a more robust way to handle this\n      // Without something like this, I think  the last recorded sample could be lost due to timing\n      // setTimeout(() => {\n      //   this.state = 'inactive'\n      //   this.encoderWorker.postMessage(['dump', this.audioCtx.sampleRate])\n      // }, 100)\n    }\n  };\n\n  _onDataAvailable = evt => {\n    // console.log('state', this.mediaRecorder.state)\n    // console.log('evt.data', evt.data)\n\n    this.chunks.push(evt.data);\n    this.chunkType = evt.data.type;\n\n    if (this.state !== 'inactive') {\n      return;\n    }\n\n    const blob = new Blob(this.chunks, { type: this.chunkType });\n    const blobUrl = URL.createObjectURL(blob);\n    const recording = {\n      ts: new Date().getTime(),\n      blobUrl,\n      mimeType: blob.type,\n      size: blob.size,\n    };\n\n    this.chunks = [];\n    this.chunkType = null;\n\n    if (this.destinationNode) {\n      this.destinationNode.disconnect();\n      this.destinationNode = null;\n    }\n    if (this.outputGainNode) {\n      this.outputGainNode.disconnect();\n      this.outputGainNode = null;\n    }\n    if (this.analyserNode) {\n      this.analyserNode.disconnect();\n      this.analyserNode = null;\n    }\n    if (this.processorNode) {\n      this.processorNode.disconnect();\n      this.processorNode = null;\n    }\n    if (this.encoderWorker) {\n      this.encoderWorker.postMessage(['close']);\n      this.encoderWorker = null;\n    }\n    if (this.dynamicsCompressorNode) {\n      this.dynamicsCompressorNode.disconnect();\n      this.dynamicsCompressorNode = null;\n    }\n    if (this.micGainNode) {\n      this.micGainNode.disconnect();\n      this.micGainNode = null;\n    }\n    if (this.inputStreamNode) {\n      this.inputStreamNode.disconnect();\n      this.inputStreamNode = null;\n    }\n\n    if (this.config.stopTracksAndCloseCtxWhenFinished) {\n      // This removes the red bar in iOS/Safari\n      this.micAudioStream.getTracks().forEach(track => track.stop());\n      this.micAudioStream = null;\n\n      this.audioCtx.close();\n      this.audioCtx = null;\n    }\n\n    this.em.dispatchEvent(\n      new CustomEvent('recording', { detail: { recording } }),\n    );\n  };\n\n  _onError = evt => {\n    console.log('error', evt);\n    this.em.dispatchEvent(new Event('error'));\n    // alert(`error:${evt}`); // for debugging purposes\n  };\n}\n","import styled from 'styled-components';\nimport { colors } from 'theme';\n\nexport const MicRecorderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nexport const MicButtonsContainer = styled.div`\n  display:flex;\n  justify-content: space-between;\n  width: 144px;\n  margin: auto;\n`;\n\nexport const MicButtonWithText = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const MicNote = styled.p`\n  font-size: 14px;\n  color: ${colors.lightDarkGray};\n  margin-top: 8px;\n  margin-bottom: 0px;\n`;\nexport const MicRecorderButton = styled.button<{ disabled?: boolean; opacity?: boolean}>`\n  background-color: ${colors.purple};\n  width: 56px;\n  height: 56px;\n  position: relative;\n  outline: none !important;\n  border: none;\n  border-radius: 50%;\n  padding: 0;\n  transition: background-color 0.25s;\n  opacity: ${props => (props.disabled || props.opacity ? '0.5' : '1')};\n\n  @supports not (-webkit-touch-callout: none) {\n    /* CSS for other than iOS devices */\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  &:active {\n    background-color: ${colors.purple};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: transparent;\n    z-index: 1;\n    border-radius: 50%;\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    width: 66px;\n    height: 66px;\n  }\n`;\n\nexport const MicRecorderImage = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: opacity 0.25s;\n`;\n\nexport const MicRecorderStartImage = styled(MicRecorderImage)`\n  width: 27px;\n  height: 27px;\n`;\n\nexport const MicRecorderStopImage = styled(MicRecorderImage)`\n  width: 15px;\n  height: 15px;\n`;\n\nexport const MicRecorderTimerContainer = styled.div`\n  width: 70px;\n  height: 41px;\n  font-size: 1.25rem;\n  color: ${colors.purple};\n  font-weight: bold;\n  font-family: 'Source Sans Pro';\n  border: 1px solid ${colors.purple};\n  border-radius: 15px;\n  display: flex; \n  align-items: center; \n  justify-content: center; \n  margin-bottom: 28px;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    font-size: 1.75rem;\n    margin-top: 22px;\n  }\n`;\n\nexport const MicRecorderTimerReleaseTextContainer = styled.div`\n  font-size: 16px;\n  line-height: 20px;\n  color: ${colors.red};\n  font-family: 'Source Sans Pro';\n  display: flex; \n  margin-left: 20px;\n  margin-top:10px;\n`;\n\nexport const MicRecorderTextP = styled.p<{ show?: boolean }>`\n  visibility: ${props => (props.show ? 'flex' : 'hidden')};\n`;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport Timer from 'react-compound-timer';\nimport { useTranslation } from 'react-i18next';\n\n// Sentry\nimport * as Sentry from '@sentry/react';\n\n// Utils\nimport RecorderService from 'helper/audio/RecorderService';\nimport FileHelper from 'helper/fileHelper';\nimport { getDuration } from 'helper/getDuration';\n\n// Modals\nimport RecordErrorModal from 'modals/RecordErrorModal';\n\n// Images\nimport StartSVG from 'assets/icons/start.svg';\nimport StopSVG from 'assets/icons/stop.svg';\n\n// Styles\nimport {\n  MicRecorderContainer,\n  MicRecorderButton,\n  MicRecorderStartImage,\n  MicRecorderStopImage,\n  MicRecorderTimerContainer,\n  MicRecorderTimerReleaseTextContainer,\n  MicRecorderTextP,\n  MicButtonsContainer,\n  MicButtonWithText,\n  MicNote,\n} from './style';\n\ninterface MicRecorderProps {\n  className?: string;\n  maxTimeInSeconds?: number;\n  minTimeInSeconds?: number;\n  onNewRecord: (file: File, humanReadableSize: string) => void;\n  delay?: number;\n  recordingFile: any;\n  isShortAudioCollection?: boolean;\n}\n\nconst baseConfig = {\n  usingMediaRecorder: false,\n  sampleRate: 48000,\n  manualEncoderId: 'wav', // wav / mp3 / flac\n  processorBufferSize: 2048, // 4096 flac / 2048 wav\n};\nexport interface RecorderServiceType {\n  config: {\n    broadcastAudioProcessEvents: boolean; // default: false\n    createAnalyserNode: boolean; // default: false\n    createDynamicsCompressorNode: boolean; // default: false\n    forceScriptProcessor: false; // default: false\n    manualEncoderId: string; // default: 'wav'\n    micGain: number; // default: 1.0\n    processorBufferSize: number; // default: 2048\n    stopTracksAndCloseCtxWhenFinished: boolean; // default: true\n    usingMediaRecorder: boolean; // default: typeof window.MediaRecorder !== 'undefined'\n    enableEchoCancellation: boolean; // default: true\n    sampleRate: number; // default: 44100\n  };\n  em: DocumentFragment;\n  startRecording: (timeslice?: number) => Promise<void>;\n  stopRecording: () => void;\n  cleanup: () => void;\n}\n\nconst MicRecorder = ({\n  className = '',\n  maxTimeInSeconds = 30, // 30 segs\n  minTimeInSeconds = 5, // 5 segs\n  onNewRecord,\n  delay = 500, // 500ms\n  recordingFile,\n  isShortAudioCollection,\n}: MicRecorderProps) => {\n  // Hooks\n  const { t } = useTranslation();\n\n  // Refs\n  const recordingService = React.useRef<RecorderServiceType>();\n  const audioSamples = React.useRef<number>(0);\n  const timerRef = React.useRef<any>();\n  const timeout = React.useRef<number>();\n  const target = React.useRef<HTMLButtonElement>();\n\n  // States\n  const [micAllowed, setMicAllowed] = React.useState<boolean>(true);\n  const [recordingInProgress, setRecordingInProgress] = React.useState<boolean>();\n  const [showReleaseText, setShowReleaseText] = React.useState<boolean>(false);\n  const [showShortRecordingText, setShowShortRecordingText] = React.useState<boolean>(false);\n  const [longPressTriggered, setLongPressTriggered] = React.useState<boolean>(false);\n\n  // Handlers\n  const onAudioProcess = React.useCallback((e: any) => {\n    audioSamples.current += 1;\n    const { inputBuffer, outputBuffer } = e.detail;\n    for (let channel = 0; channel < outputBuffer.numberOfChannels; channel += 1) {\n      const inputData = inputBuffer.getChannelData(channel);\n      const outputData = outputBuffer.getChannelData(channel);\n      // Each sample\n      for (let sample = 0; sample < inputBuffer.length; sample += 1) {\n        outputData[sample] = inputData[sample];\n      }\n    }\n  }, []);\n\n  const onNewRecording = React.useCallback(async (e: any) => {\n    const { detail } = e;\n    const { recording } = detail;\n    const blob = await fetch(recording.blobUrl).then(r => r.blob());\n    const fileName = `Filename.${baseConfig.manualEncoderId}`;\n    const file = FileHelper.blobToFile(blob, fileName);\n    const humanReadableSize = FileHelper.sizeAsHuman(file.size, true);\n\n    onNewRecord(file, humanReadableSize);\n  }, [onNewRecord]);\n\n  // Effects\n  React.useEffect(() => {\n    recordingService.current = new RecorderService({\n      ...baseConfig,\n      sampleRate: isShortAudioCollection ? 16000 : baseConfig.sampleRate,\n      onRecording: onNewRecording,\n      onAudioProcesss: onAudioProcess,\n    }) as RecorderServiceType;\n\n    const userMediaConstraints = {\n      audio: {\n        echoCancellation: recordingService.current.config.enableEchoCancellation,\n      },\n    };\n    navigator.mediaDevices.getUserMedia(userMediaConstraints)\n      .then(() => {\n        setMicAllowed(true);\n      })\n      .catch(err => {\n        setMicAllowed(false);\n        Sentry.captureException(err);\n      });\n\n    if (recordingFile) {\n      const file = recordingFile as File;\n      if (file.size) {\n        const audio = new Audio(URL.createObjectURL(file));\n        audio.defaultMuted = true;\n        audio.muted = true;\n        audio.load();\n        const listenerFn = async () => {\n          audio.removeEventListener('loadedmetadata', listenerFn);\n          getDuration(audio, true).then(result => {\n            timerRef.current?.setTime(result * 1000);\n          });\n        };\n        audio.addEventListener('loadedmetadata', listenerFn);\n      }\n    }\n\n    return () => {\n      if (recordingService.current) {\n        recordingService.current.cleanup();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Handlers\n  const handleStartRecording = React.useCallback(() => {\n    if (recordingService.current) {\n      audioSamples.current = 0;\n      recordingService.current\n        .startRecording()\n        .then(() => {\n          setRecordingInProgress(true);\n          setShowShortRecordingText(false);\n          if (timerRef.current) {\n            timerRef.current.reset();\n            timerRef.current?.setTime(0);\n            timerRef.current.start();\n          }\n        })\n        .catch((error: any) => console.error('ERROR', error));\n    }\n  }, []);\n\n  const handleStopRecording = React.useCallback(() => {\n    if (recordingService.current) {\n      recordingService.current.stopRecording();\n      setRecordingInProgress(false);\n      if (timerRef.current) {\n        if (timerRef.current.getTime() / 1000 < minTimeInSeconds) {\n          setShowShortRecordingText(true);\n        }\n        timerRef.current.stop();\n      }\n    }\n  }, [minTimeInSeconds]);\n\n  const handleFormatValue = React.useCallback((value: number) => (value < 10 ? `0${value}` : value), []);\n\n  const preventDefault = (event: any) => {\n    if (!('touches' in event)) event.preventDefault();\n  };\n\n  const handleStartLongPress = React.useCallback(\n    event => {\n      if (event.target) {\n        event.target.addEventListener('touchend', preventDefault, {\n          passive: false,\n        });\n        target.current = event.target;\n      }\n      timeout.current = setTimeout(() => {\n        setShowReleaseText(true);\n        setLongPressTriggered(true);\n        setShowShortRecordingText(false);\n      }, delay);\n    },\n    [delay],\n  );\n\n  const handleEndLongPress = React.useCallback(() => {\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n    }\n    if (longPressTriggered) {\n      setShowReleaseText(false);\n    }\n    setLongPressTriggered(false);\n    if (target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  },\n  [longPressTriggered]);\n\n  return (\n    <MicRecorderContainer className={className}>\n      <MicRecorderTimerReleaseTextContainer>\n        {!showShortRecordingText\n          && (\n            <MicRecorderTextP\n              show={showReleaseText}\n            >\n              {recordingInProgress ? t('recordingsIntroduction:releaseButtonStop') : t('recordingsIntroduction:releaseButtonStart')}\n            </MicRecorderTextP>\n          )}\n        <RecordErrorModal\n          isOpen={showShortRecordingText}\n          modalTitle=\"Oops.\"\n          onConfirm={handleStartRecording}\n        >\n          {t('recordingsIntroduction:shortRecording', { seconds: minTimeInSeconds })}\n        </RecordErrorModal>\n      </MicRecorderTimerReleaseTextContainer>\n      <MicRecorderTimerContainer>\n        <Timer\n          ref={timerRef}\n          startImmediately={false}\n          checkpoints={[\n            {\n              time: maxTimeInSeconds * 1000,\n              callback: handleStopRecording,\n            },\n          ]}\n        >\n          <Timer.Minutes />\n          :\n          <Timer.Seconds formatValue={handleFormatValue} />\n        </Timer>\n      </MicRecorderTimerContainer>\n      <MicButtonsContainer>\n        <MicButtonWithText>\n          <MicRecorderButton\n            disabled={!micAllowed || recordingInProgress}\n            onClick={handleStartRecording}\n            onMouseDown={handleStartLongPress}\n            onMouseUp={handleEndLongPress}\n            onTouchStart={handleStartLongPress}\n            onTouchEnd={handleEndLongPress}\n            onMouseLeave={handleEndLongPress}\n          >\n            <MicRecorderStartImage\n              src={StartSVG}\n              alt=\"Start\"\n            />\n          </MicRecorderButton>\n          <MicNote>{t('recordingsRecord:record')}</MicNote>\n        </MicButtonWithText>\n        <MicButtonWithText>\n          <MicRecorderButton\n            disabled={!micAllowed || !recordingInProgress}\n            onClick={handleStopRecording}\n            onMouseDown={handleStartLongPress}\n            onMouseUp={handleEndLongPress}\n            onTouchStart={handleStartLongPress}\n            onTouchEnd={handleEndLongPress}\n            onMouseLeave={handleEndLongPress}\n          >\n            <MicRecorderStopImage\n              src={StopSVG}\n              alt=\"Stop\"\n            />\n          </MicRecorderButton>\n          <MicNote>{t('recordingsRecord:recordStop')}</MicNote>\n        </MicButtonWithText>\n      </MicButtonsContainer>\n    </MicRecorderContainer>\n  );\n};\n\nexport default React.memo(MicRecorder);\n","import React from 'react';\nimport usePortal from 'react-useportal';\nimport { useTranslation } from 'react-i18next';\n\n// Form\nimport { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport Yup from 'utils/yup';\n\n// Components\nimport MicRecorder from 'components/MicRecorder';\nimport WizardButtons from 'components/WizardButtons';\n\n// Images\nimport UploadSVG from 'assets/icons/upload.svg';\n\n// Styles\nimport {\n  MainContainer,\n  UploadContainer,\n  UploadImage,\n  UploadText,\n  MicContainer,\n} from './style';\n\nconst audioMaxSizeInMb = 5;\nconst audioMinLength: CommonJSON<number> = {\n  recordYourBreath: 5,\n  recordYourSpeech: 5,\n  recordYourCough: 3,\n}; // in seconds\n\nconst schema = Yup.object({\n  recordingFile: Yup.mixed()\n    .required('ERROR.FILE_REQUIRED')\n    // @ts-ignore\n    .validateAudioSize(audioMaxSizeInMb)\n    // @ts-ignore\n    .when('$_currentLogic', (value: string, _schema: Yup.MixedSchema) => _schema.validateAudioLength(audioMinLength[value] || 5)),\n}).defined();\n\ntype RecordType = Yup.InferType<typeof schema>;\n\ninterface RecordProps {\n  // isCoughLogic: boolean,\n  onNext: (values: RecordType) => void;\n  onManualUpload: () => void;\n  defaultValues: RecordType;\n  currentLogic: string;\n  action:any;\n  isShortAudioCollection?: boolean;\n}\n\nconst Record = ({\n  onNext,\n  onManualUpload,\n  defaultValues,\n  currentLogic,\n  action,\n  isShortAudioCollection,\n}: RecordProps) => {\n  // Hooks\n  const { Portal } = usePortal({\n    bindTo:\n      document && (document.getElementById('wizard-buttons') as HTMLDivElement),\n  });\n  const {\n    handleSubmit, control, getValues, formState,\n  } = useForm({\n    mode: 'onChange',\n    defaultValues,\n    context: {\n      _currentLogic: currentLogic,\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const { t } = useTranslation();\n\n  const { isValid } = formState;\n\n  // Refs\n  const micKey = React.useRef<number>(1);\n\n  const onManualUploadWithFile = () => {\n    action({\n      [currentLogic]: {\n        recordingFile: getValues('recordingFile') || null,\n        uploadedFile: null,\n      },\n    });\n    onManualUpload?.();\n  };\n\n  return (\n    <>\n      <MainContainer>\n        <MicContainer>\n          <Controller\n            control={control}\n            name=\"recordingFile\"\n            render={({ onChange }) => (\n              <MicRecorder\n                key={micKey.current} // On delete, easy re-mount a new mic recorder\n                onNewRecord={onChange}\n                recordingFile={defaultValues?.recordingFile}\n                minTimeInSeconds={audioMinLength[currentLogic]}\n                isShortAudioCollection={isShortAudioCollection}\n              />\n            )}\n          />\n        </MicContainer>\n\n        <Portal>\n          <WizardButtons\n            invert\n            leftLabel={t('recordingsRecord:next')}\n            leftDisabled={!isValid}\n            leftHandler={handleSubmit(onNext)}\n          />\n          <UploadContainer onClick={onManualUploadWithFile}>\n            <UploadImage src={UploadSVG} />\n            <UploadText>{t('recordingsRecord:upload')}</UploadText>\n          </UploadContainer>\n        </Portal>\n\n      </MainContainer>\n    </>\n  );\n};\n\nexport default React.memo(Record);\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-param-reassign */\n\nconst sizeAsHuman = (bytes: number, si?: boolean) => {\n  const thresh = si ? 1000 : 1024;\n  if (Math.abs(bytes) < thresh) {\n    return `${bytes} B`;\n  }\n  const units = si\n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  let u = -1;\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n  return `${bytes.toFixed(1)} ${units[u]}`;\n};\n\nconst blobToFile = (theBlob: Blob, fileName:string): File => {\n  const b: any = theBlob;\n  // A Blob() is almost a File() - it's just missing the two properties below which we will add\n  b.lastModifiedDate = new Date();\n  b.name = fileName;\n\n  // Cast to a File() type\n  return theBlob as File;\n};\n\nexport default {\n  sizeAsHuman,\n  blobToFile,\n};\n","module.exports = __webpack_public_path__ + \"static/media/stop.c2f5fdba.svg\";","import styled from 'styled-components';\nimport { BlackText } from 'components/Texts';\nimport { colors } from 'theme';\n\nimport StopSVG from 'assets/icons/stop.svg';\n\nexport const MainContainer = styled.div`\n  padding: 40px 0px;\n`;\n\nexport const Text = styled(BlackText)`\n  color: ${props => props.theme.colors.darkBlack};\n  margin-bottom: 2px;\n  text-align: left;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n    margin: 0 auto;\n    font-size: 16px;\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    @media (orientation: portrait) {\n      margin-bottom: 248px;\n    }\n\n    @media (orientation: landscape) {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const MicContainer = styled.div``;\n\nexport const UploadContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 20px 12px;\n  width: fit-content;\n  margin: 0 auto;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    padding: 22px;\n  }\n`;\n\nexport const UploadImage = styled.img`\n  cursor: pointer;\n  width: 13px;\n  height: 12px;\n  margin-right: 7px;\n`;\n\nexport const UploadText = styled.div`\n  cursor: pointer;\n  font-family: Source Sans Pro;\n  font-weight: bold;\n  font-size: 0.75rem;\n  line-height: 24px;\n  color: ${colors.darkBlack};\n`;\n\nexport const StopImg = styled.img.attrs(() => ({ src: StopSVG }))`\n  display: inline;\n  height: 10px;\n  margin: 0px 2px 4px;\n`;\n","import * as Yup from 'yup';\nimport { getDuration } from '../helper/getDuration';\n\nYup.addMethod(Yup.mixed, 'validateAudioLength', function validate(maxDuration: number) {\n  // @ts-ignore\n  return this.test('fileDuration', 'ERROR.FILE_DURATION', async (value?: any) => {\n    if (value) {\n      const file = value as File;\n      const audio = new Audio(URL.createObjectURL(file));\n      audio.defaultMuted = true;\n      audio.muted = true;\n      audio.load();\n      await new Promise(resolver => audio.addEventListener('loadedmetadata', resolver));\n      const duration = await getDuration(audio);\n      return (duration >= maxDuration);\n    }\n    return !!value;\n  });\n});\n\nYup.addMethod(Yup.mixed, 'validateAudioSize', function validate(audioMaxSizeInMb: number) {\n  // @ts-ignore\n  return this.test('fileSize', 'ERROR.FILE_SIZE', (value?: any) => {\n    if (value) {\n      const file = value as File;\n      const { size } = file;\n      return (size <= 1024 ** 3 * audioMaxSizeInMb);\n    }\n    return !!value;\n  });\n});\n\nexport default Yup;\n","import styled from 'styled-components';\n\nexport const ModalBody = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (${props => props.theme.breakpoints.tablet}) {\n    margin: auto;\n`;\n\nexport const ModalTitle = styled.div`\n  font-family: 'Biko';\n  font-size: 30px;\n  line-height: 30px;\n  margin-bottom: 10px;\n  font-weight: 600;\n`;\n\nexport const ModalContent = styled.div`\n  font-family: 'Source Sans Pro';\n  text-align: center;\n  line-height: 25px;\n  font-size: 18px;\n  margin-top: 10px;\n  margin-bottom: 30px;\n`;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { PropsWithChildren } from 'react';\nimport Modal from 'react-modal';\nimport { useTranslation } from 'react-i18next';\nimport Button from 'components/Button';\n\n// Style\nimport {\n  ModalBody, ModalTitle, ModalContent,\n} from './style';\n\nexport interface ConfirmationModalProps {\n  isOpen: boolean;\n  modalTitle: string;\n  onConfirm?: () => void;\n}\n\nModal.setAppElement('#root');\n\nconst RecordErrorModal = React.memo(({\n  modalTitle,\n  children,\n  onConfirm,\n  ...props\n}: PropsWithChildren<ConfirmationModalProps>) => {\n  // Handlers\n\n  const { t } = useTranslation();\n\n  const customStyles = {\n    content: {\n      height: '281px',\n      maxWidth: '348px',\n      margin: 'auto',\n      borderRadius: '10px',\n      border: 'none',\n    },\n    overlay: { backgroundColor: 'rgba(0, 0, 0, 0.5)' },\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={customStyles}\n    >\n      <ModalBody className=\"ModalBody\">\n        <ModalTitle>{modalTitle}</ModalTitle>\n        <ModalContent>{children}</ModalContent>\n        <Button onClick={onConfirm} dark>\n          {t('recordingsIntroduction:retryButton', 'Retry')}\n        </Button>\n      </ModalBody>\n    </Modal>\n  );\n});\n\nexport default RecordErrorModal;\n","module.exports = __webpack_public_path__ + \"static/media/start.1023f927.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.e35eb772.svg\";"],"sourceRoot":""}