{"version":3,"sources":["../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/html-parse-stringify2/index.js","../node_modules/html-parse-stringify2/lib/parse.js","../node_modules/html-parse-stringify2/lib/parse-tag.js","../node_modules/void-elements/index.js","../node_modules/html-parse-stringify2/lib/stringify.js","components/Recaptcha/style.ts","components/Recaptcha/Recaptcha.tsx","../node_modules/react-i18next/dist/es/Trans.js","components/DatePicker/style.ts","components/DatePicker/DatePicker.tsx","containers/SubmitSteps/Questionary/Step1b/Step1b.tsx","assets/icons/calendar.svg","assets/icons/chevron.svg"],"names":["objectWithoutPropertiesLoose","module","exports","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","_typeof","obj","Symbol","iterator","constructor","parse","require","stringify","tagRE","parseTag","empty","create","pushTextNode","list","html","level","start","ignoreWhitespace","end","content","slice","undefined","test","push","type","options","components","current","result","arr","byTag","inComponent","replace","tag","index","name","parent","isOpen","charAt","isComment","nextChar","voidElement","children","tagName","attrRE","voidElements","expectingValueAfterEquals","res","attrs","match","buff","doc","join","attrString","reduce","token","rootEl","RecaptchaContainer","styled","div","Recaptcha","onChange","setRecaptchaAvailable","i18n","useTranslation","sitekey","process","onErrored","Sentry","hl","language","ownKeys","object","enumerableOnly","keys","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","hasChildren","node","checkLength","base","props","getChildren","getAsArray","data","Array","isArray","renderNodes","targetString","i18nOptions","combinedTOpts","keepArray","transKeepBasicHtmlNodesFor","emptyChildrenButNeedsHandling","RegExp","getData","childs","child","React","isValidElement","assign","interpolatedString","services","interpolator","interpolate","ast","HTML","concat","renderInner","rootReactNode","mappedChildren","mapAST","toString","every","hasValidReactChildren","pushTranslatedJSX","inner","mem","dummy","cloneElement","reactNode","astNode","reactNodes","translationContent","tmp","parseInt","newTarget","mergeProps","isElement","isValidTranslationWithChildren","isEmptyTransWithHTML","isKnownComponent","hasOwnProperty","_inner","Number","isNaN","parseFloat","transSupportBasicHtmlNodes","createElement","_inner3","_inner4","Trans","_ref","count","i18nKey","tOptions","values","defaults","ns","i18nFromProps","tFromProps","t","additionalProps","_objectWithoutProperties","_ref2","useContext","I18nContext","i18nFromContext","defaultNSFromContext","defaultNS","getI18n","warnOnce","bind","k","reactI18nextOptions","getDefaults","react","namespaces","defaultValue","nodesToString","stringNode","childrenArray","childIndex","childPropsCount","shouldKeepChild","childChildren","i18nIsDynamicList","format","clone","value","warn","transEmptyNodeValue","hashTransKey","interpolationOverride","interpolation","prefix","suffix","useAsParent","defaultTransParent","StyledReactDatePickerContainer","DatePickerContainer","button","theme","colors","lightGray","LabelValueContainer","Label","darkGray","Value","darkBlack","DatePickerInput","forwardRef","ref","label","onClick","alt","src","calendarSvg","chevronSvg","defaultProps","memo","locale","today","useMemo","endOfDay","Date","selected","customInput","dateFormat","maxDate","schemaWithoutPatient","Yup","pcrTestDate","when","is","then","required","otherwise","pcrTestResult","antigenTestDate","whatAntigenTestResult","notRequired","antigenTestResult","defined","schemaWithPatient","patientAntigenTestResult","oneOf","schema","patientPcrTestResult","previousStep","nextStep","storeKey","Portal","usePortal","bindTo","document","getElementById","useHeaderContext","setDoGoBack","setTitle","setSubtitle","setType","history","useHistory","useStateMachine","updateAction","state","action","patientId","getPatientId","country","getCountry","useState","activeStep","setActiveStep","hasPcrTest","setHasPcrTest","hasAntigenTest","setHasAntigenTest","useEffect","testTaken","includes","useForm","mode","defaultValues","context","hasPcr","hasAntigen","resolver","yupResolver","control","handleSubmit","formState","errors","isValid","submitError","setSubmitError","captchaValue","setCaptchaValue","recaptchaAvailable","isSubmitting","handleDoBack","useCallback","goBack","scrollToTop","onSubmit","a","pcrOptions","antigenOptions","extraSpace","first","render","OptionList","singleSelection","v","items","WizardButtons","leftLabel","leftHandler","leftDisabled","invert"],"mappings":"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","file":"static/js/15.d50412d6.chunk.js","sourcesContent":["var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = {\n    parse: require('./lib/parse'),\n    stringify: require('./lib/stringify')\n};\n","/*jshint -W030 */\nvar tagRE = /(?:<!--[\\S\\s]*?-->|<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>)/g;\nvar parseTag = require('./parse-tag');\n// re-used obj for quick lookups of components\nvar empty = Object.create ? Object.create(null) : {};\n// common logic for pushing a child node onto a list\nfunction pushTextNode(list, html, level, start, ignoreWhitespace) {\n    // calculate correct end of the content slice in case there's\n    // no tag after the text node.\n    var end = html.indexOf('<', start);\n    var content = html.slice(start, end === -1 ? undefined : end);\n    // if a node is nothing but whitespace, collapse it as the spec states:\n    // https://www.w3.org/TR/html4/struct/text.html#h-9.1\n    if (/^\\s*$/.test(content)) {\n        content = ' ';\n    }\n    // don't add whitespace-only text nodes if they would be trailing text nodes\n    // or if they would be leading whitespace-only text nodes:\n    //  * end > -1 indicates this is not a trailing text node\n    //  * leading node is when level is -1 and list has length 0\n    if ((!ignoreWhitespace && end > -1 && level + list.length >= 0) || content !== ' ') {\n        list.push({\n            type: 'text',\n            content: content\n        });\n    }\n}\n\nmodule.exports = function parse(html, options) {\n    options || (options = {});\n    options.components || (options.components = empty);\n    var result = [];\n    var current;\n    var level = -1;\n    var arr = [];\n    var byTag = {};\n    var inComponent = false;\n\n    html.replace(tagRE, function (tag, index) {\n        if (inComponent) {\n            if (tag !== ('</' + current.name + '>')) {\n                return;\n            } else {\n                inComponent = false;\n            }\n        }\n\n        var isOpen = tag.charAt(1) !== '/';\n        var isComment = tag.indexOf('<!--') === 0;\n        var start = index + tag.length;\n        var nextChar = html.charAt(start);\n        var parent;\n\n        if (isOpen && !isComment) {\n            level++;\n\n            current = parseTag(tag);\n            if (current.type === 'tag' && options.components[current.name]) {\n                current.type = 'component';\n                inComponent = true;\n            }\n\n            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {\n                pushTextNode(current.children, html, level, start, options.ignoreWhitespace);\n            }\n\n            byTag[current.tagName] = current;\n\n            // if we're at root, push new base node\n            if (level === 0) {\n                result.push(current);\n            }\n\n            parent = arr[level - 1];\n\n            if (parent) {\n                parent.children.push(current);\n            }\n\n            arr[level] = current;\n        }\n\n        if (isComment || !isOpen || current.voidElement) {\n            if (!isComment) {\n                level--;\n            }\n            if (!inComponent && nextChar !== '<' && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                parent = level === -1 ? result : arr[level].children;\n                pushTextNode(parent, html, level, start, options.ignoreWhitespace);\n            }\n        }\n    });\n\n    // If the \"html\" passed isn't actually html, add it as a text node.\n    if (!result.length && html.length) {\n        pushTextNode(result, html, 0, 0, options.ignoreWhitespace);\n    }\n\n    return result;\n};\n","var attrRE = /([\\w-]+)|=|(['\"])([.\\s\\S]*?)\\2/g;\nvar voidElements = require('void-elements');\n\nmodule.exports = function (tag) {\n    var i = 0;\n    var key;\n    var expectingValueAfterEquals = true;\n    var res = {\n        type: 'tag',\n        name: '',\n        voidElement: false,\n        attrs: {},\n        children: []\n    };\n\n    tag.replace(attrRE, function (match) {\n        if (match === '=') {\n            expectingValueAfterEquals = true;\n            i++;\n            return;\n        }\n\n        if (!expectingValueAfterEquals) {\n            if (key) {\n                res.attrs[key] = key; // boolean attribute\n            }\n            key=match;\n        } else {\n            if (i === 0) {\n                if (voidElements[match] || tag.charAt(tag.length - 2) === '/') {\n                    res.voidElement = true;\n                }\n                res.name = match;\n            } else {\n                res.attrs[key] = match.replace(/^['\"]|['\"]$/g, '');\n                key=undefined;\n            }\n        }\n        i++;\n        expectingValueAfterEquals = false;\n    });\n\n    return res;\n};\n","/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"keygen\": true,\n  \"link\": true,\n  \"menuitem\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n","function attrString(attrs) {\n    var buff = [];\n    for (var key in attrs) {\n        buff.push(key + '=\"' + attrs[key] + '\"');\n    }\n    if (!buff.length) {\n        return '';\n    }\n    return ' ' + buff.join(' ');\n}\n\nfunction stringify(buff, doc) {\n    switch (doc.type) {\n    case 'text':\n        return buff + doc.content;\n    case 'tag':\n        buff += '<' + doc.name + (doc.attrs ? attrString(doc.attrs) : '') + (doc.voidElement ? '/>' : '>');\n        if (doc.voidElement) {\n            return buff;\n        }\n        return buff + doc.children.reduce(stringify, '') + '</' + doc.name + '>';\n    }\n}\n\nmodule.exports = function (doc) {\n    return doc.reduce(function (token, rootEl) {\n        return token + stringify('', rootEl);\n    }, '');\n};\n","import styled from 'styled-components';\n\nexport const RecaptchaContainer = styled.div`\n  margin: 20px 0;\n  \n  div {\n    margin: auto;\n  }\n`;\n","import React from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { useTranslation } from 'react-i18next';\n\n// Sentry\nimport * as Sentry from '@sentry/react';\n\n// Style\nimport { RecaptchaContainer } from './style';\n\nconst recaptchaKey = process.env.REACT_APP_RECAPTCHA_KEY || '';\n\ninterface RecaptchaProps {\n  onChange(token: string | null): void;\n  setRecaptchaAvailable(state: boolean): void;\n}\n\nconst Recaptcha = ({ onChange, setRecaptchaAvailable }: RecaptchaProps) => {\n  const { i18n } = useTranslation();\n\n  if (!recaptchaKey) return null;\n\n  return (\n    <RecaptchaContainer>\n      <ReCAPTCHA\n        sitekey={process.env.REACT_APP_RECAPTCHA_KEY || ''}\n        onChange={onChange}\n        onErrored={() => { setRecaptchaAvailable(false); Sentry.captureException('Error on ReCAPTCHA'); }}\n        hl={i18n.language}\n      />\n    </RecaptchaContainer>\n  );\n};\n\nexport default Recaptcha;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport HTML from 'html-parse-stringify2';\nimport { getI18n, I18nContext, getDefaults } from './context';\nimport { warn, warnOnce } from './utils';\n\nfunction hasChildren(node, checkLength) {\n  if (!node) return false;\n  var base = node.props ? node.props.children : node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n}\n\nfunction getChildren(node) {\n  if (!node) return [];\n  return node && node.children ? node.children : node.props && node.props.children;\n}\n\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== '[object Array]') return false;\n  return children.every(function (child) {\n    return React.isValidElement(child);\n  });\n}\n\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\n\nfunction mergeProps(source, target) {\n  var newTarget = _objectSpread({}, target);\n\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n}\n\nexport function nodesToString(children, i18nOptions) {\n  if (!children) return '';\n  var stringNode = '';\n  var childrenArray = getAsArray(children);\n  var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  childrenArray.forEach(function (child, childIndex) {\n    if (typeof child === 'string') {\n      stringNode += \"\".concat(child);\n    } else if (React.isValidElement(child)) {\n      var childPropsCount = Object.keys(child.props).length;\n      var shouldKeepChild = keepArray.indexOf(child.type) > -1;\n      var childChildren = child.props.children;\n\n      if (!childChildren && shouldKeepChild && childPropsCount === 0) {\n        stringNode += \"<\".concat(child.type, \"/>\");\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {\n        stringNode += \"<\".concat(childIndex, \"></\").concat(childIndex, \">\");\n      } else if (child.props.i18nIsDynamicList) {\n        stringNode += \"<\".concat(childIndex, \"></\").concat(childIndex, \">\");\n      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === 'string') {\n        stringNode += \"<\".concat(child.type, \">\").concat(childChildren, \"</\").concat(child.type, \">\");\n      } else {\n        var content = nodesToString(childChildren, i18nOptions);\n        stringNode += \"<\".concat(childIndex, \">\").concat(content, \"</\").concat(childIndex, \">\");\n      }\n    } else if (_typeof(child) === 'object') {\n      var format = child.format,\n          clone = _objectWithoutProperties(child, [\"format\"]);\n\n      var keys = Object.keys(clone);\n\n      if (keys.length === 1) {\n        var value = format ? \"\".concat(keys[0], \", \").concat(format) : keys[0];\n        stringNode += \"{{\".concat(value, \"}}\");\n      } else {\n        warn(\"react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.\", child);\n      }\n    } else {\n      warn(\"Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.\", child);\n    }\n  });\n  return stringNode;\n}\n\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts) {\n  if (targetString === '') return [];\n  var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  var emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling) return [targetString];\n  var data = {};\n\n  function getData(childs) {\n    var childrenArray = getAsArray(childs);\n    childrenArray.forEach(function (child) {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (_typeof(child) === 'object' && !React.isValidElement(child)) Object.assign(data, child);\n    });\n  }\n\n  getData(children);\n  var interpolatedString = i18n.services.interpolator.interpolate(targetString, _objectSpread(_objectSpread({}, data), combinedTOpts), i18n.language);\n  var ast = HTML.parse(\"<0>\".concat(interpolatedString, \"</0>\"));\n\n  function renderInner(child, node, rootReactNode) {\n    var childs = getChildren(child);\n    var mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;\n  }\n\n  function pushTranslatedJSX(child, inner, mem, i) {\n    if (child.dummy) child.children = inner;\n    mem.push(React.cloneElement(child, _objectSpread(_objectSpread({}, child.props), {}, {\n      key: i\n    }), inner));\n  }\n\n  function mapAST(reactNode, astNode, rootReactNode) {\n    var reactNodes = getAsArray(reactNode);\n    var astNodes = getAsArray(astNode);\n    return astNodes.reduce(function (mem, node, i) {\n      var translationContent = node.children && node.children[0] && node.children[0].content;\n\n      if (node.type === 'tag') {\n        var tmp = reactNodes[parseInt(node.name, 10)];\n        if (!tmp && rootReactNode.length === 1 && rootReactNode[0][node.name]) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        var child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        var isElement = React.isValidElement(child);\n        var isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        var isEmptyTransWithHTML = emptyChildrenButNeedsHandling && _typeof(child) === 'object' && child.dummy && !isElement;\n        var isKnownComponent = _typeof(children) === 'object' && children !== null && Object.hasOwnProperty.call(children, node.name);\n\n        if (typeof child === 'string') {\n          mem.push(child);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n            var inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (isEmptyTransWithHTML) {\n          var _inner = mapAST(reactNodes, node.children, rootReactNode);\n\n          mem.push(React.cloneElement(child, _objectSpread(_objectSpread({}, child.props), {}, {\n            key: i\n          }), _inner));\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            var _inner2 = renderInner(child, node, rootReactNode);\n\n            pushTranslatedJSX(child, _inner2, mem, i);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(React.createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }));\n            } else {\n              var _inner3 = mapAST(reactNodes, node.children, rootReactNode);\n\n              mem.push(React.createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }, _inner3));\n            }\n          } else if (node.voidElement) {\n            mem.push(\"<\".concat(node.name, \" />\"));\n          } else {\n            var _inner4 = mapAST(reactNodes, node.children, rootReactNode);\n\n            mem.push(\"<\".concat(node.name, \">\").concat(_inner4, \"</\").concat(node.name, \">\"));\n          }\n        } else if (_typeof(child) === 'object' && !isElement) {\n          var content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else if (node.children.length === 1 && translationContent) {\n          mem.push(React.cloneElement(child, _objectSpread(_objectSpread({}, child.props), {}, {\n            key: i\n          }), translationContent));\n        } else {\n          mem.push(React.cloneElement(child, _objectSpread(_objectSpread({}, child.props), {}, {\n            key: i\n          })));\n        }\n      } else if (node.type === 'text') {\n        mem.push(node.content);\n      }\n\n      return mem;\n    }, []);\n  }\n\n  var result = mapAST([{\n    dummy: true,\n    children: children\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n}\n\nexport function Trans(_ref) {\n  var children = _ref.children,\n      count = _ref.count,\n      parent = _ref.parent,\n      i18nKey = _ref.i18nKey,\n      tOptions = _ref.tOptions,\n      values = _ref.values,\n      defaults = _ref.defaults,\n      components = _ref.components,\n      ns = _ref.ns,\n      i18nFromProps = _ref.i18n,\n      tFromProps = _ref.t,\n      additionalProps = _objectWithoutProperties(_ref, [\"children\", \"count\", \"parent\", \"i18nKey\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\"]);\n\n  var _ref2 = useContext(I18nContext) || {},\n      i18nFromContext = _ref2.i18n,\n      defaultNSFromContext = _ref2.defaultNS;\n\n  var i18n = i18nFromProps || i18nFromContext || getI18n();\n\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n\n  var t = tFromProps || i18n.t.bind(i18n) || function (k) {\n    return k;\n  };\n\n  var reactI18nextOptions = _objectSpread(_objectSpread({}, getDefaults()), i18n.options && i18n.options.react);\n\n  var namespaces = ns || t.ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  var defaultValue = defaults || nodesToString(children, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  var hashTransKey = reactI18nextOptions.hashTransKey;\n  var key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n  var interpolationOverride = values ? {} : {\n    interpolation: {\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n\n  var combinedTOpts = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, tOptions), {}, {\n    count: count\n  }, values), interpolationOverride), {}, {\n    defaultValue: defaultValue,\n    ns: namespaces\n  });\n\n  var translation = key ? t(key, combinedTOpts) : defaultValue;\n  var content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts);\n  var useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? React.createElement(useAsParent, additionalProps, content) : content;\n}","import styled from 'styled-components';\n\nexport const StyledReactDatePickerContainer = styled.div`\n  .react-datepicker-wrapper {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const DatePickerContainer = styled.button`\n  background-color: ${props => props.theme.colors.lightGray};\n  border-radius: 4px;\n  border: none;\n  padding: 0 19.69px 0 14px;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const LabelValueContainer = styled.div`\n  flex: 1;\n  text-align: left;\n  padding-left: 14px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Label = styled.div`\n  font-family: Source Sans Pro;\n  font-size: 12px;\n  line-height: 142.69%;\n  color: ${props => props.theme.colors.darkGray};\n`;\n\nexport const Value = styled.div`\n  font-family: Source Sans Pro;\n  font-size: 14px;\n  line-height: 142.69%;\n  color: ${props => props.theme.colors.darkBlack};\n`;\n","import React from 'react';\nimport ReactDatePicker from 'react-datepicker';\nimport { endOfDay } from 'date-fns';\n\n// Images\nimport calendarSvg from 'assets/icons/calendar.svg';\nimport chevronSvg from 'assets/icons/chevron.svg';\n\n// Styles\nimport {\n  DatePickerContainer,\n  Label,\n  LabelValueContainer,\n  StyledReactDatePickerContainer,\n  Value,\n} from './style';\n\ninterface DatePickerProps {\n  label: string;\n  value: Date | null | undefined;\n  locale: string;\n  onChange(date: Date | [Date, Date] | null, event: React.SyntheticEvent<any, Event> | undefined): void\n}\n\ninterface DatePickerInputProps {\n  label: string;\n  value?: Date | null | undefined;\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined\n}\n\nconst DatePickerInput = React.forwardRef((\n  { label, value, onClick }: DatePickerInputProps,\n  ref: ((instance: HTMLButtonElement | null) => void) | React.RefObject<HTMLButtonElement> | null | undefined,\n) => (\n  <DatePickerContainer ref={ref} onClick={onClick}>\n    <img alt=\"calendar\" src={calendarSvg} />\n    <LabelValueContainer>\n      <Label>{label}</Label>\n      <Value>{value}</Value>\n    </LabelValueContainer>\n    <img alt=\"calendar\" src={chevronSvg} />\n  </DatePickerContainer>\n));\n\nDatePickerInput.defaultProps = {\n  value: undefined,\n  onClick: undefined,\n};\n\nconst DatePicker = ({\n  label, value, locale, onChange,\n}: DatePickerProps) => {\n  // Memos\n  const today = React.useMemo(() => endOfDay(new Date()), []);\n\n  return (\n    <StyledReactDatePickerContainer>\n      <ReactDatePicker\n        selected={value}\n        customInput={<DatePickerInput label={label} />}\n        onChange={onChange}\n        dateFormat=\"EEE, MMM d, Y\"\n        locale={locale}\n        maxDate={today}\n      />\n    </StyledReactDatePickerContainer>\n  );\n};\n\nexport default React.memo(DatePicker);\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport usePortal from 'react-useportal';\nimport { useTranslation, Trans } from 'react-i18next';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers';\nimport { ErrorMessage } from '@hookform/error-message';\nimport * as Yup from 'yup';\n\n// Helper\nimport { getPatientId, getCountry } from 'helper/stepsDefinitions';\n\n// Update Action\nimport { updateAction } from 'utils/wizard';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Utils\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Components\nimport OptionList from 'components/OptionList';\nimport DatePicker from 'components/DatePicker';\nimport WizardButtons from 'components/WizardButtons';\nimport Recaptcha from 'components/Recaptcha';\n\n// Styles\nimport {\n  QuestionText, MainContainer, TempBeforeSubmitError, QuestionAllApply,\n} from '../style';\n\nconst schemaWithoutPatient = Yup.object({\n  pcrTestDate: Yup.date().when('$hasPcr', { is: true, then: Yup.date().required(), otherwise: Yup.date() }),\n  pcrTestResult: Yup.string().when('$hasPcr', { is: true, then: Yup.string().required(), otherwise: Yup.string() }),\n  antigenTestDate: Yup.date().when('$hasAntigen', { is: true, then: Yup.date().required(), otherwise: Yup.date() }),\n  whatAntigenTestResult: Yup.string().when('$country', {\n    is: 'Japan',\n    then: Yup.string().when('$hasAntigen', { is: true, then: Yup.string().required(), otherwise: Yup.string() }),\n    otherwise: Yup.string().notRequired(),\n  }),\n  antigenTestResult: Yup.string().when('$hasAntigen', { is: true, then: Yup.string().required(), otherwise: Yup.string() }),\n/* antibodyTestDate: Yup.date().when('$hasAntibody', { is: true, then: Yup.date().required(), otherwise: Yup.date() }),\nantibodyTestResult: Yup.string().when('$hasAntibody', { is: true, then: Yup.string().required(),\notherwise: Yup.string() }), */\n}).defined();\n\nconst schemaWithPatient = Yup.object({\n  patientAntigenTestResult: Yup.string().oneOf(['positive', 'negative', '']).when('patientPcrTestResult', (value: string, schema: any) => (!value ? schema.required() : schema)),\n  patientPcrTestResult: Yup.string().oneOf(['positive', 'negative', '']),\n}).defined();\n\ntype Step1aType = Yup.InferType<typeof schemaWithoutPatient> | Yup.InferType<typeof schemaWithPatient>;\n\nconst Step1b = ({\n  previousStep,\n  nextStep,\n  storeKey,\n}: Wizard.StepProps) => {\n  // Hooks\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const {\n    setDoGoBack, setTitle, setSubtitle, setType,\n  } = useHeaderContext();\n  const history = useHistory();\n  const { t, i18n } = useTranslation();\n  const { state, action } = useStateMachine(updateAction(storeKey));\n  const patientId = getPatientId();\n  const country = getCountry();\n\n  // States\n  const [activeStep, setActiveStep] = React.useState(true);\n  const [hasPcrTest, setHasPcrTest] = React.useState(false);\n  const [hasAntigenTest, setHasAntigenTest] = React.useState(false);\n  // const [hasAntibodyTest, setHasAntibodyTest] = React.useState(false);\n\n  useEffect(() => {\n    if (state) {\n      const { testTaken } = state['submit-steps'] || {};\n\n      setHasPcrTest(testTaken?.includes('pcr') ?? false);\n      setHasAntigenTest(testTaken?.includes('antigen') ?? false);\n      // setHasAntibodyTest(testTaken.includes('antibody'));\n    }\n  }, [state]);\n\n  // Form\n  const {\n    control, handleSubmit, formState,\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: state?.[storeKey],\n    context: {\n      hasPcr: state['submit-steps']?.testTaken?.includes('pcr') ?? false,\n      hasAntigen: state['submit-steps']?.testTaken?.includes('antigen') ?? false,\n      // hasAntibody: state['submit-steps'].testTaken.includes('antibody'),\n      country,\n    },\n    resolver: yupResolver(patientId ? schemaWithPatient : schemaWithoutPatient),\n  });\n  const { errors, isValid } = formState;\n\n  /* Delete after Contact info step is re-integrated */\n  const [submitError, setSubmitError] = React.useState<string | null>(null);\n  const [captchaValue, setCaptchaValue] = React.useState<string | null>(null);\n  const [recaptchaAvailable, setRecaptchaAvailable] = React.useState(true);\n  const { isSubmitting } = formState;\n\n  useEffect(() => {\n    if (!captchaValue) {\n      setSubmitError(null);\n    }\n  }, [captchaValue]);\n\n  const handleDoBack = React.useCallback(() => {\n    setActiveStep(false);\n    if (previousStep) {\n      history.push(previousStep);\n    } else {\n      history.goBack();\n    }\n  }, [history, previousStep]);\n\n  useEffect(() => {\n    scrollToTop();\n    if (patientId) {\n      setTitle('');\n    } else {\n      setTitle(t('questionary:testTaken.title'));\n    }\n    if (patientId) {\n      setType('tertiary');\n    } else {\n      setType('primary');\n    }\n    setSubtitle('');\n    setDoGoBack(() => handleDoBack);\n  }, [handleDoBack, setDoGoBack, setTitle, setType, setSubtitle, patientId, t]);\n\n  // Handlers\n  const onSubmit = async (values: Step1aType) => {\n    if (values) {\n      const {\n        pcrTestDate,\n        pcrTestResult,\n        antigenTestDate,\n        antigenTestResult,\n        whatAntigenTestResult,\n        // antibodyTestDate,\n        // antibodyTestResult,\n      } = (values as any);\n      // if patient\n      if (hasPcrTest && (!pcrTestDate || !pcrTestResult)) {\n        return;\n      }\n      if (country === 'Japan' && hasAntigenTest && (!antigenTestDate || !antigenTestResult || !whatAntigenTestResult)) {\n        return;\n      }\n      if (hasAntigenTest && (!antigenTestDate || !antigenTestResult)) {\n        return;\n      }\n      /* if (hasAntibodyTest && (!antibodyTestDate || !antibodyTestResult)) {\n        return;\n      } */\n\n      action(values);\n      if (nextStep) {\n        setActiveStep(false);\n        history.push(nextStep);\n      }\n    }\n  };\n\n  // Memos\n  const pcrOptions = React.useMemo(() => {\n    if (country === 'Japan') {\n      return [\n        {\n          value: 'positive',\n          label: t('questionary:resultPcrTest.options.positive'),\n        },\n        {\n          value: 'negative',\n          label: t('questionary:resultPcrTest.options.negative'),\n        },\n        {\n          value: 'unsure',\n          label: t('questionary:resultPcrTest.options.unsure'),\n        },\n      ];\n    }\n    return [\n      {\n        value: 'positive',\n        label: t('questionary:resultPcrTest.options.positive'),\n      },\n      {\n        value: 'negative',\n        label: t('questionary:resultPcrTest.options.negative'),\n      },\n      {\n        value: 'pending',\n        label: t('questionary:resultPcrTest.options.pending'),\n      },\n      {\n        value: 'unsure',\n        label: t('questionary:resultPcrTest.options.unsure'),\n      },\n    ];\n  }, [country, t]);\n\n  const antigenOptions = React.useMemo(() => {\n    if (country === 'Japan') {\n      return [\n        {\n          value: 'positive',\n          label: t('questionary:resultAntigenTest.options.positive'),\n        },\n        {\n          value: 'negative',\n          label: t('questionary:resultAntigenTest.options.negative'),\n        },\n      ];\n    }\n    return [\n      {\n        value: 'positive',\n        label: t('questionary:resultAntigenTest.options.positive'),\n      },\n      {\n        value: 'negative',\n        label: t('questionary:resultAntigenTest.options.negative'),\n      },\n      {\n        value: 'pending',\n        label: t('questionary:resultAntigenTest.options.pending'),\n      },\n      {\n        value: 'unsure',\n        label: t('questionary:resultAntigenTest.options.unsure'),\n      },\n    ];\n  }, [country, t]);\n\n  return (\n    <MainContainer>\n      {(!patientId && hasPcrTest) && (\n        <>\n          <QuestionText extraSpace first>{t('questionary:whenPcrTest')}\n            {\n              country === 'Japan' && (\n                <QuestionAllApply>{t('questionary:whenPcrTestCaption')}</QuestionAllApply>\n              )\n            }\n          </QuestionText>\n          <Controller\n            control={control}\n            name=\"pcrTestDate\"\n            defaultValue={undefined}\n            render={({ onChange, value }) => (\n              <DatePicker\n                label=\"Date\"\n                value={value ? new Date(value) : null}\n                locale={i18n.language}\n                onChange={onChange}\n              />\n            )}\n          />\n\n          <QuestionText extraSpace>\n            {t('questionary:resultPcrTest.question')}\n          </QuestionText>\n          <Controller\n            control={control}\n            name=\"pcrTestResult\"\n            defaultValue={undefined}\n            render={({ onChange, value }) => (\n              <OptionList\n                singleSelection\n                value={{ selected: value ? [value] : [] }}\n                onChange={v => onChange(v.selected[0])}\n                items={pcrOptions}\n              />\n            )}\n          />\n        </>\n      )}\n      {(!patientId && hasAntigenTest) && (\n        <>\n          <QuestionText extraSpace first={!hasPcrTest}>\n            {t('questionary:whenAntigenTest')}\n          </QuestionText>\n\n          <Controller\n            control={control}\n            name=\"antigenTestDate\"\n            defaultValue={undefined}\n            render={({ onChange, value }) => (\n              <DatePicker\n                label=\"Date\"\n                value={value ? new Date(value) : null}\n                locale={i18n.language}\n                onChange={onChange}\n              />\n            )}\n          />\n\n          {\n            country === 'Japan' && (\n              <>\n                <QuestionText extraSpace>\n                  {t('questionary:whatAntigenTest.question')}\n                </QuestionText>\n                <Controller\n                  control={control}\n                  name=\"whatAntigenTestResult\"\n                  defaultValue={undefined}\n                  render={({ onChange, value }) => (\n                    <OptionList\n                      singleSelection\n                      value={{ selected: value ? [value] : [] }}\n                      onChange={v => onChange(v.selected[0])}\n                      items={[\n                        {\n                          value: 'medical',\n                          label: t('questionary:whatAntigenTest.options.medical'),\n                        },\n                        {\n                          value: 'research',\n                          label: t('questionary:whatAntigenTest.options.research'),\n                        },\n                        {\n                          value: 'unknown',\n                          label: t('questionary:whatAntigenTest.options.unknown'),\n                        },\n                      ]}\n                    />\n                  )}\n                />\n              </>\n            )\n          }\n\n          <QuestionText extraSpace>\n            {t('questionary:resultAntigenTest.question')}\n          </QuestionText>\n          <Controller\n            control={control}\n            name=\"antigenTestResult\"\n            defaultValue={undefined}\n            render={({ onChange, value }) => (\n              <OptionList\n                singleSelection\n                value={{ selected: value ? [value] : [] }}\n                onChange={v => onChange(v.selected[0])}\n                items={antigenOptions}\n              />\n            )}\n          />\n        </>\n      )}\n      {/* {hasAntibodyTest && (\n        <>\n          <QuestionText extraSpace first={!hasPcrTest}>\n            {t('questionary:whenAntibodyTest')}\n          </QuestionText>\n\n          <Controller\n            control={control}\n            name=\"antibodyTestDate\"\n            defaultValue={undefined}\n            render={({ onChange, value }) => (\n              <DatePicker\n                label=\"Date\"\n                value={value ? new Date(value) : null}\n                locale={i18n.language}\n                onChange={onChange}\n              />\n            )}\n          />\n\n          <QuestionText extraSpace>\n            {t('questionary:resultAntibodyTest.question')}\n          </QuestionText>\n          <Controller\n            control={control}\n            name=\"antibodyTestResult\"\n            defaultValue={undefined}\n            render={({ onChange, value }) => (\n              <OptionList\n                singleSelection\n                value={{ selected: value ? [value] : [] }}\n                onChange={v => onChange(v.selected[0])}\n                items={[\n                  {\n                    value: 'positive',\n                    label: t('questionary:resultAntibodyTest.options.positive'),\n                  },\n                  {\n                    value: 'negative',\n                    label: t('questionary:resultAntibodyTest.options.negative'),\n                  },\n                  {\n                    value: 'pending',\n                    label: t('questionary:resultAntibodyTest.options.pending'),\n                  },\n                  {\n                    value: 'unsure',\n                    label: t('questionary:resultAntibodyTest.options.unsure'),\n                  },\n                ]}\n              />\n            )}\n          />\n        </>\n      )} */}\n      {patientId && (\n        <>\n          <QuestionText extraSpace>\n            <Trans i18nKey=\"questionary:patient:resultPcrTest.question\">\n              What was the result of Patient {patientId}&apos;s PCR-based COVID-19 test?\n            </Trans>\n          </QuestionText>\n          <Controller\n            control={control}\n            name=\"patientPcrTestResult\"\n            defaultValue=\"\"\n            render={({ onChange, value }) => (\n              <OptionList\n                singleSelection\n                value={{ selected: value ? [value] : [] }}\n                onChange={v => onChange(v.selected[0] || '')}\n                items={[\n                  {\n                    value: 'positive',\n                    label: t('questionary:resultPcrTest.options.positive'),\n                  },\n                  {\n                    value: 'negative',\n                    label: t('questionary:resultPcrTest.options.negative'),\n                  },\n                ]}\n              />\n            )}\n          />\n          <QuestionText extraSpace>\n            <Trans i18nKey=\"questionary:patient:resultAntigenTest\">\n              What was the result of Patient {patientId}&apos;s rapid antigen COVID-19 test?\n            </Trans>\n          </QuestionText>\n          <Controller\n            control={control}\n            name=\"patientAntigenTestResult\"\n            defaultValue=\"\"\n            render={({ onChange, value }) => (\n              <OptionList\n                singleSelection\n                value={{ selected: value ? [value] : [] }}\n                onChange={v => onChange(v.selected[0] || '')}\n                items={[\n                  {\n                    value: 'positive',\n                    label: t('questionary:resultAntigenTest.options.positive'),\n                  },\n                  {\n                    value: 'negative',\n                    label: t('questionary:resultAntigenTest.options.negative'),\n                  },\n                ]}\n              />\n            )}\n          />\n        </>\n      )}\n      {/* Bottom Buttons */}\n      <p><ErrorMessage errors={errors} name=\"name\" /></p>\n      {activeStep && (\n        <Portal>\n          {(() => {\n            if (patientId && (country !== 'Colombia')) {\n              if (submitError) {\n                return (\n                  <>\n                    <Recaptcha onChange={setCaptchaValue} setRecaptchaAvailable={setRecaptchaAvailable} />\n                    <TempBeforeSubmitError>\n                      {submitError}\n                    </TempBeforeSubmitError>\n                  </>\n                );\n              }\n              return <Recaptcha onChange={setCaptchaValue} setRecaptchaAvailable={setRecaptchaAvailable} />;\n            }\n            return null;\n          })()}\n          <WizardButtons\n            leftLabel={(() => {\n              if (patientId) {\n                if (isSubmitting) {\n                  return t('questionary:submitting');\n                }\n                return t('beforeSubmit:submitButton');\n              }\n              return t('questionary:nextButton');\n            })()}\n            leftHandler={handleSubmit(onSubmit)}\n            leftDisabled={(patientId && (country !== 'Colombia')) ? (isSubmitting || (recaptchaAvailable && !captchaValue)) : !isValid}\n            invert\n          />\n        </Portal>\n      )}\n    </MainContainer>\n  );\n};\n\nexport default React.memo(Step1b);\n","module.exports = __webpack_public_path__ + \"static/media/calendar.ffdaf43c.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron.66e5f21f.svg\";"],"sourceRoot":""}