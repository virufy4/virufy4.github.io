{"version":3,"file":"component---src-pages-our-approach-jsx-8eb65f9c7f7feb4c6bab.js","mappings":"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","sources":["webpack:///./src/components/Button.jsx","webpack:///./src/hooks/usePx.js","webpack:///./src/hooks/useScrollLock.js","webpack:///./src/components/Modal.jsx","webpack:///./src/components/ourApproach/InfoCard.jsx","webpack:///./src/data/our-approach/learn-more-cards.js","webpack:///./src/components/meta/ourApproachMeta.jsx","webpack:///./src/pages/our-approach.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby-plugin-intl\";\r\n\r\nconst tailwindClasses =\r\n  \"inline-block text-lg py-3 px-12 no-underline rounded-xl\";\r\n\r\nconst styles = {\r\n  primary: \"text-white bg-blue\",\r\n  secondary: \"text-black bg-white\",\r\n};\r\n\r\nfunction generateClassName(classNameProp, style = \"primary\") {\r\n  return `${tailwindClasses} ${styles[style]} ${classNameProp}`;\r\n}\r\n\r\nexport function ButtonLink({ children, style, ...props }) {\r\n  return (\r\n    <Link {...props} className={generateClassName(props.className, style)}>\r\n      {children}\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default ({ children, style, ...props }) => {\r\n  return (\r\n    <button {...props} className={generateClassName(props.className, style)}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport default function usePx(initialValue) {\r\n  const [pixelValue, setPixelValue] = useState(initialValue);\r\n\r\n  function setNumericValue(value) {\r\n    setPixelValue(value + \"px\");\r\n  }\r\n\r\n  return [pixelValue, setNumericValue];\r\n}\r\n","import { useRef, useCallback, useEffect } from \"react\";\r\n\r\nexport default function useScrollLock(lock) {\r\n  const isInitialMount = useRef(true);\r\n\r\n  const lockScroll = useCallback(() => {\r\n    // Override CSS\r\n    document.body.style.height = \"100%\";\r\n    document.body.style.overflowY = \"hidden\";\r\n  }, []);\r\n\r\n  const restoreScroll = useCallback(() => {\r\n    // Restore CSS\r\n    document.body.style.height = \"\";\r\n    document.body.style.overflowY = \"\";\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Initially, only lock if `lock` is true, otherwise do nothing\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n\r\n      if (lock) lockScroll();\r\n\r\n      return;\r\n    }\r\n\r\n    // Then once the lock value changes, respond with both options\r\n    if (lock) {\r\n      lockScroll();\r\n    } else {\r\n      restoreScroll();\r\n    }\r\n\r\n    // And restore scroll when unmounted\r\n    return restoreScroll;\r\n  }, [lock, lockScroll, restoreScroll]);\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Overlay from \"./Overlay\";\r\nimport { usePx, useScrollLock, useEscape } from \"../hooks\";\r\n\r\nconst HORIZONTAL_PIXEL_PADDING = 32; // each side\r\nconst VERTICAL_PIXEL_PADDING = 48; // each direction\r\n\r\nfunction calculatePosition(triggerRef, scale) {\r\n  // Retrieve element position and dimensions\r\n  const triggerElement = triggerRef.current;\r\n  if (triggerElement === null) {\r\n    return [0, 0, 0, 0];\r\n  }\r\n  const { x, y, width, height } = triggerElement.getBoundingClientRect();\r\n\r\n  // Retrieve window size\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  // Calculate total margins\r\n  const totalHorizontalMargins = HORIZONTAL_PIXEL_PADDING * 2;\r\n  const totalVerticalMargins = VERTICAL_PIXEL_PADDING * 2;\r\n\r\n  // Calculate scaled width and height, clamped by the margins\r\n  const calculatedWidth = Math.min(\r\n    innerWidth - totalHorizontalMargins,\r\n    width * scale\r\n  );\r\n  const calculatedHeight = Math.min(\r\n    innerHeight - totalVerticalMargins,\r\n    height * scale\r\n  );\r\n\r\n  // Calculate changes due to scaling, used for centering modal\r\n  const deltaX = width * scale - width;\r\n  const deltaY = height * scale - height;\r\n\r\n  // Calculate the raw, unclamped x and y values; they are centered by subtracting half the change in x and y\r\n  const rawX = x - deltaX / 2;\r\n  const rawY = y - deltaY / 2;\r\n\r\n  // Calculate x and y position, clamped by the margins on both sides\r\n  const calculatedX = Math.max(\r\n    Math.min(rawX, innerWidth - HORIZONTAL_PIXEL_PADDING - calculatedWidth),\r\n    HORIZONTAL_PIXEL_PADDING\r\n  );\r\n  const calculatedY = Math.max(\r\n    Math.min(rawY, innerHeight - VERTICAL_PIXEL_PADDING - calculatedHeight),\r\n    VERTICAL_PIXEL_PADDING\r\n  );\r\n\r\n  // Return [top, left, width, height]\r\n  return [calculatedY, calculatedX, calculatedWidth, calculatedHeight];\r\n}\r\n\r\nfunction usePositionCalculation(triggerRef, scale, show) {\r\n  // Calculate initial values for state\r\n  const [\r\n    initialTop,\r\n    initialLeft,\r\n    initialWidth,\r\n    initialHeight,\r\n  ] = calculatePosition(triggerRef, scale);\r\n\r\n  // Initialize state hooks\r\n  const [top, setTop] = usePx(initialTop);\r\n  const [left, setLeft] = usePx(initialLeft);\r\n  const [width, setWidth] = usePx(initialWidth);\r\n  const [height, setHeight] = usePx(initialHeight);\r\n\r\n  // Watch the trigger element's position\r\n  useEffect(() => {\r\n    function handleReposition() {\r\n      const [top, left, width, height] = calculatePosition(triggerRef, scale);\r\n\r\n      setTop(top);\r\n      setLeft(left);\r\n      setWidth(width);\r\n      setHeight(height);\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", handleReposition);\r\n    window.addEventListener(\"resize\", handleReposition);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleReposition);\r\n      window.removeEventListener(\"resize\", handleReposition);\r\n    };\r\n  }, [triggerRef, scale, setTop, setLeft, setWidth, setHeight]);\r\n\r\n  // Re-calculate the position when shown\r\n  useEffect(() => {\r\n    const [top, left, width, height] = calculatePosition(triggerRef, scale);\r\n\r\n    setTop(top);\r\n    setLeft(left);\r\n    setWidth(width);\r\n    setHeight(height);\r\n  }, [triggerRef, scale, setTop, setLeft, setWidth, setHeight, show]);\r\n\r\n  return [top, left, width, height];\r\n}\r\n\r\nfunction Modal({ triggerRef, scale, children, show, onClose }) {\r\n  if (!triggerRef || !scale)\r\n    throw new Error(\"Trigger ref and scale props must be set\");\r\n\r\n  // Calculate the modal position on resize and scroll\r\n  const [top, left, width, height] = usePositionCalculation(\r\n    triggerRef,\r\n    scale,\r\n    show\r\n  );\r\n\r\n  // Lock scroll when the modal is shown\r\n  useScrollLock(show);\r\n\r\n  // Handle escape-to-close when the modal is visible\r\n  useEscape(show, onClose);\r\n\r\n  const modalRef = useRef(null);\r\n  function closeIfModalWasNotTarget(event) {\r\n    const modalElement = modalRef.current;\r\n\r\n    if (event.target !== modalElement && !modalElement.contains(event.target))\r\n      onClose();\r\n  }\r\n\r\n  //absolute bg-transparent top-0 z-1 mt-5\r\n\r\n  return (\r\n    <Overlay active={show} onClick={closeIfModalWasNotTarget}>\r\n      <div className=\"md:mx-72 md:px-8 md:py-20 xs:py-10\">\r\n        <div\r\n          className=\"fixed xs:absolute bg-white p-4 shadow-2xl overflow-y-auto rounded-2xl   md:w-2/4 md:h-4/5\"\r\n          ref={modalRef}\r\n        >\r\n          <div className=\"flex flex-row-reverse \">\r\n            <button className=\"black \" onClick={onClose}>\r\n              &#x2715;\r\n            </button>\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  triggerRef: PropTypes.object.isRequired,\r\n  scale: PropTypes.number.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BackgroundImage from \"gatsby-background-image\";\r\nimport Modal from \"../Modal\";\r\nimport { useIntl } from \"gatsby-plugin-intl\";\r\nfunction InfoCard({ title, description, source, icon }) {\r\n  const intl = useIntl();\r\n  const [open, setOpen] = useState(false);\r\n  const triggerRef = React.useRef(null);\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"flex flex-col  rounded-2xl cursor-pointer  hover:shadow-xl\"\r\n        onClick={handleClick}\r\n        ref={triggerRef}\r\n      >\r\n        <div className=\"flex-grow flex justify-center w-full bg-gray rounded-xl shadow-2xl md:hover:text-white md:hover:bg-blue \">\r\n          <div className=\"h-48 pt-4\">\r\n            <BackgroundImage\r\n              className=\"h-36 w-36 md:opacity-75\"\r\n              fluid={icon}\r\n              imgStyle={{ objectFit: \"contain\" }}\r\n              aria-hidden\r\n            >\r\n              <div className=\"font-normal text-center py-6 \">\r\n                <h4>{`${title}`}</h4>\r\n              </div>\r\n            </BackgroundImage>\r\n          </div>\r\n        </div>\r\n      </button>\r\n      <Modal\r\n        show={open}\r\n        triggerRef={triggerRef}\r\n        scale={1.0}\r\n        onClose={handleClose}\r\n      >\r\n        <h2 className=\"pb-2 text-center border-b-2  border-gray-300\">\r\n          {title}\r\n        </h2>\r\n        <p className=\"px-4 md:py-4 xs:text-center xs:py-2 xs:px-2\">\r\n          {description}\r\n        </p>\r\n\r\n        <div className=\"flex flex-col min-w-max\">\r\n          <button\r\n            className=\"vf-btn-primary mx-auto px-6 py-2  text-blue border-2 border-blue \"\r\n            onClick={handleClose}\r\n          >\r\n            {\" \"}\r\n            {intl.formatMessage({\r\n              id: `ourApproach.topFold.bottonClose`,\r\n            })}\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nInfoCard.propTypes = {\r\n  sourceNum: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  icon: PropTypes.any.isRequired,\r\n};\r\nexport default InfoCard;\r\n","export default [\r\n  //{ id: \"newtoAI\", imageName: \"newtoAI\" },\r\n  // { id: \"howUseAI\", imageName: \"weuseAI\" },\r\n  //{ id: \"weDetectCough\", imageName: \"detectcough\" },\r\n  { id: \"imperialCollegeLondon\", imageName: \"coughbasealgorithm\" },\r\n  { id: \"carnegieMellonUniversity\", imageName: \"coughsound\" },\r\n  //{ id: \"carnegieMellonUniversity\", imageName: \"voicedetector\" },\r\n  { id: \"MIT\", imageName: \"callforanewartificial\" },\r\n  //{ id: \"various\", imageName: \"enabledPreliminary\" },\r\n  // { id: \"universityOfEngineeringPakistan\", imageName: \"coughsound\" },\r\n  { id: \"CornellUniversity\", imageName: \"exploringautomatic\" },\r\n];\r\n","import React from \"react\";\r\nimport { useIntl } from \"gatsby-plugin-intl\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction OurApproachMeta() {\r\n  const intl = useIntl();\r\n  return (\r\n    <Helmet>\r\n      <meta\r\n        name=\"description\"\r\n        content={intl.formatMessage({ id: `ourApproach.meta` })}\r\n      />\r\n      <link\r\n        rel=\"alternate\"\r\n        hreflang=\"x-default\"\r\n        href=\"https://virufy.org/en/our-approach/\"\r\n      />\r\n      <link\r\n        rel=\"alternate\"\r\n        hreflang=\"en\"\r\n        href=\"https://virufy.org/en/our-approach/\"\r\n      />\r\n      <link\r\n        rel=\"alternate\"\r\n        hreflang=\"es\"\r\n        href=\"https://virufy.org/es/our-approach/\"\r\n      />\r\n      <link\r\n        rel=\"alternate\"\r\n        hreflang=\"pt\"\r\n        href=\"https://virufy.org/pt/our-approach/\"\r\n      />\r\n      <link\r\n        rel=\"alternate\"\r\n        hreflang=\"ja\"\r\n        href=\"https://virufy.org/ja/our-approach/\"\r\n      />\r\n    </Helmet>\r\n  );\r\n}\r\n\r\nexport default OurApproachMeta;\r\n","import React, { useCallback } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { useIntl } from \"gatsby-plugin-intl\";\r\nimport Img from \"gatsby-image\";\r\nimport Layout from \"../components/Layout\";\r\nimport { ButtonLink } from \"../components/Button\";\r\nimport InfoCard from \"../components/ourApproach/InfoCard\";\r\nimport learnMoreCards from \"../data/our-approach/learn-more-cards\";\r\nimport SEO from \"../components/SEO\";\r\nimport BackgroundImage from \"gatsby-background-image\";\r\nimport OurApproachMeta from \"../components/meta/ourApproachMeta\";\r\n\r\nexport const query = graphql`\r\n  {\r\n    allFile(filter: { relativeDirectory: { eq: \"images/our-approach-page\" } }) {\r\n      edges {\r\n        node {\r\n          relativePath\r\n          name\r\n          childImageSharp {\r\n            fluid(quality: 90, maxWidth: 2000) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function OurApproach({ data }) {\r\n  const images = data.allFile.edges;\r\n\r\n  const intl = useIntl();\r\n  // const breakpoints = useBreakpoint();\r\n  const findImage = useCallback(\r\n    (imageName) => {\r\n      return images.find(({ node: { name } }) => {\r\n        return name === imageName;\r\n      }).node.childImageSharp.fluid;\r\n    },\r\n    [images]\r\n  );\r\n  return (\r\n    <Layout className=\"font-montserrat\">\r\n      <SEO\r\n        title={intl.formatMessage({\r\n          id: `ourApproach.title`,\r\n        })}\r\n      />\r\n      <OurApproachMeta />\r\n      {/* Top fold */}\r\n      <div>\r\n        <div className=\"md:hidden font-medium\">\r\n          <BackgroundImage\r\n            className=\"text-white\"\r\n            fluid={findImage(\"background-OurApproch\")}\r\n            imgStyle={{ objectFit: \"contain\" }}\r\n          >\r\n            <div className=\"flex-container\">\r\n              <h2 className=\"flex-1 text-lg text-left text-black xs:pt-8 xs:pb-12 xs:pl-8 xs:mr-32\">\r\n                {intl.formatMessage({\r\n                  id: `ourApproach.topFold.diagnoseDisease`,\r\n                })}\r\n              </h2>\r\n            </div>\r\n          </BackgroundImage>\r\n          <div className=\"flex-1\">\r\n            <p className=\"text-center xs:px-6 pt-4 xs:pb-4\">\r\n              {intl.formatMessage({\r\n                id: `ourApproach.topFold.healthcare`,\r\n              })}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <BackgroundImage\r\n          className=\"xs:hidden font-medium\"\r\n          imgStyle={{ objectFit: \"contain\" }}\r\n          fluid={findImage(\"background-OurApproch\")}\r\n        >\r\n          <div className=\"flex-container\">\r\n            {/* <div className=\"flex-1 md:pt-10 md:pl-2 text-white text-xl\">\r\n              {intl.formatMessage({ id: `ourApproach.topFold.ourTech` })}\r\n            </div> */}\r\n            <h2 className=\"flex-1 md:pt-32 pb-6 md:pr-60 pl-32 mr-56\">\r\n              {intl.formatMessage({\r\n                id: `ourApproach.topFold.diagnoseDisease`,\r\n              })}\r\n            </h2>\r\n            <h3 className=\"flex-1 md:pb-32 md:pr-60 pl-32 mr-56 font-bold\">\r\n              {intl.formatMessage({\r\n                id: `ourApproach.topFold.healthcare`,\r\n              })}\r\n            </h3>\r\n          </div>\r\n        </BackgroundImage>\r\n        <p className=\"font-normal md:pt-8 px-10 md:mx-18 xs:pt-4 xs:px-12 xs:text-sm\">\r\n          {intl.formatMessage({\r\n            id: `ourApproach.topFold.algorithmInfo`,\r\n          })}\r\n        </p>\r\n      </div>\r\n      <h1 className=\"pt-2 pb-8 mx-8\">\r\n        {intl.formatMessage({ id: \"ourApproach.topFold.ourTech\" })}\r\n      </h1>\r\n      {/* The usingTechnology */}\r\n      <div className=\"md:pt-12 md:py-14 mx-8 xs:py-8\">\r\n        <div className=\"grid grid-cols-1  lg:grid-cols-2 gap-6\">\r\n          <div className=\" md:p-4 xs:pt-4\">\r\n            {/* <h2>\r\n              {intl.formatMessage({\r\n                id: \"ourApproach.topFold.usingTechnology\",\r\n              })}\r\n            </h2>\r\n            <p className=\"py-4  text-blue\">\r\n              {intl.formatMessage({\r\n                id: \"ourApproach.topFold.ourAI\",\r\n              })}\r\n            </p>\r\n            <p className=\"pb-8 md:text-sm\">\r\n              {intl.formatMessage({\r\n                id: `ourApproach.topFold.edgeResearch`,\r\n              })}\r\n            </p> */}\r\n            <ButtonLink\r\n              to=\"/paper\"\r\n              className=\"vf-btn-primary mx-auto my-4 px-6  border-2 border-blue\"\r\n            >\r\n              {intl.formatMessage({\r\n                id: `ourApproach.topFold.checkOutResearch`,\r\n              })}\r\n            </ButtonLink>\r\n          </div>\r\n          {/* <div className=\"md:p-2 md:shadow-lg rounded-lg  \">\r\n            <Img\r\n              className=\"md:h-full\"\r\n              fluid={findImage(\"thetecnology\")}\r\n              imgStyle={{ objectFit: \"contain\" }}\r\n            />\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Research  */}\r\n      <div className=\"flex-container md:py-14 md:px-10 mx-8\">\r\n        <h2 className=\"md:mb-6 lg:mb-4\">\r\n          {intl.formatMessage({\r\n            id: \"ourApproach.research.resourcestolear\",\r\n          })}\r\n        </h2>\r\n        <p className=\"font-heading font-medium my-6 lg:mb-4\">\r\n          {intl.formatMessage({\r\n            id: \"ourApproach.research.wantToLearnMore\",\r\n          })}\r\n        </p>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 gap-6\">\r\n          {learnMoreCards.map((info, index) => {\r\n            const cardIcon = findImage(info.imageName);\r\n            return (\r\n              <InfoCard\r\n                key={info.id}\r\n                sourceNum={index + 1}\r\n                title={intl.formatMessage({\r\n                  id: `ourApproach.research.${info.id}.title`,\r\n                })}\r\n                description={intl.formatMessage({\r\n                  id: `ourApproach.research.${info.id}.description`,\r\n                })}\r\n                icon={cardIcon}\r\n                source={intl.formatMessage({\r\n                  id: `ourApproach.research.${info.id}.source`,\r\n                })}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"],"names":["styles","primary","secondary","generateClassName","classNameProp","style","tailwindClasses","ButtonLink","children","props","Link","className","usePx","initialValue","useState","pixelValue","setPixelValue","value","useScrollLock","lock","isInitialMount","useRef","lockScroll","useCallback","document","body","height","overflowY","restoreScroll","useEffect","current","calculatePosition","triggerRef","scale","triggerElement","getBoundingClientRect","x","y","width","window","innerWidth","innerHeight","calculatedWidth","Math","min","HORIZONTAL_PIXEL_PADDING","calculatedHeight","VERTICAL_PIXEL_PADDING","rawX","rawY","calculatedX","max","show","onClose","Error","initialTop","initialLeft","initialWidth","initialHeight","top","setTop","left","setLeft","setWidth","setHeight","handleReposition","addEventListener","removeEventListener","usePositionCalculation","useEscape","modalRef","Overlay","active","onClick","event","modalElement","target","contains","ref","title","description","icon","source","intl","useIntl","open","setOpen","React","handleClose","fluid","imgStyle","objectFit","formatMessage","id","imageName","Helmet","name","content","rel","hreflang","href","OurApproach","images","data","allFile","edges","findImage","find","node","childImageSharp","Layout","SEO","Button","to","learnMoreCards","info","index","cardIcon","key","sourceNum"],"sourceRoot":""}