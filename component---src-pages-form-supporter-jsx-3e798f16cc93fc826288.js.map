{"version":3,"file":"component---src-pages-form-supporter-jsx-3e798f16cc93fc826288.js","mappings":"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","sources":["webpack:///./src/components/ModalSupporters.jsx","webpack:///./src/components/Overlay.jsx","webpack:///./src/hooks/usePx.js","webpack:///./src/hooks/useScrollLock.js","webpack:///./src/hooks/useEscape.js","webpack:///./src/pages/FormSupporter.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Overlay from \"./Overlay\";\nimport { usePx, useScrollLock, useEscape } from \"../hooks\";\n\nconst HORIZONTAL_PIXEL_PADDING = 32; // each side\nconst VERTICAL_PIXEL_PADDING = 48; // each direction\n\nfunction calculatePosition(triggerRef, scale) {\n  // Retrieve element position and dimensions\n  const triggerElement = triggerRef.current;\n  if (triggerElement === null) {\n    return [0, 0, 0, 0];\n  }\n  const { x, y, width, height } = triggerElement.getBoundingClientRect();\n\n  // Retrieve window size\n  const { innerWidth, innerHeight } = window;\n\n  // Calculate total margins\n  const totalHorizontalMargins = HORIZONTAL_PIXEL_PADDING * 2;\n  const totalVerticalMargins = VERTICAL_PIXEL_PADDING * 2;\n\n  // Calculate scaled width and height, clamped by the margins\n  const calculatedWidth = Math.min(\n    innerWidth - totalHorizontalMargins,\n    width * scale\n  );\n  const calculatedHeight = Math.min(\n    innerHeight - totalVerticalMargins,\n    height * scale\n  );\n\n  // Calculate changes due to scaling, used for centering modal\n  const deltaX = width * scale - width;\n  const deltaY = height * scale - height;\n\n  // Calculate the raw, unclamped x and y values; they are centered by subtracting half the change in x and y\n  const rawX = x - deltaX / 2;\n  const rawY = y - deltaY / 2;\n\n  // Calculate x and y position, clamped by the margins on both sides\n  const calculatedX = Math.max(\n    Math.min(rawX, innerWidth - HORIZONTAL_PIXEL_PADDING - calculatedWidth),\n    HORIZONTAL_PIXEL_PADDING\n  );\n  const calculatedY = Math.max(\n    Math.min(rawY, innerHeight - VERTICAL_PIXEL_PADDING - calculatedHeight),\n    VERTICAL_PIXEL_PADDING\n  );\n\n  // Return [top, left, width, height]\n  return [calculatedY, calculatedX, calculatedWidth, calculatedHeight];\n}\n\nfunction usePositionCalculation(triggerRef, scale, show) {\n  // Calculate initial values for state\n  const [\n    initialTop,\n    initialLeft,\n    initialWidth,\n    initialHeight,\n  ] = calculatePosition(triggerRef, scale);\n\n  // Initialize state hooks\n  const [top, setTop] = usePx(initialTop);\n  const [left, setLeft] = usePx(initialLeft);\n  const [width, setWidth] = usePx(initialWidth);\n  const [height, setHeight] = usePx(initialHeight);\n\n  // Watch the trigger element's position\n  useEffect(() => {\n    function handleReposition() {\n      const [top, left, width, height] = calculatePosition(triggerRef, scale);\n\n      setTop(top);\n      setLeft(left);\n      setWidth(width);\n      setHeight(height);\n    }\n\n    window.addEventListener(\"scroll\", handleReposition);\n    window.addEventListener(\"resize\", handleReposition);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleReposition);\n      window.removeEventListener(\"resize\", handleReposition);\n    };\n  }, [triggerRef, scale, setTop, setLeft, setWidth, setHeight]);\n\n  // Re-calculate the position when shown\n  useEffect(() => {\n    const [top, left, width, height] = calculatePosition(triggerRef, scale);\n\n    setTop(top);\n    setLeft(left);\n    setWidth(width);\n    setHeight(height);\n  }, [triggerRef, scale, setTop, setLeft, setWidth, setHeight, show]);\n\n  return [top, left, width, height];\n}\n\nfunction ModalFaqs({ triggerRef, scale, children, show, onClose }) {\n  if (!triggerRef || !scale)\n    throw new Error(\"Trigger ref and scale props must be set\");\n\n  // Calculate the modal position on resize and scroll\n  const [top, left, width, height] = usePositionCalculation(\n    triggerRef,\n    scale,\n    show\n  );\n\n  // Lock scroll when the modal is shown\n  useScrollLock(show);\n\n  // Handle escape-to-close when the modal is visible\n  useEscape(show, onClose);\n\n  const modalRef = useRef(null);\n  function closeIfModalWasNotTarget(event) {\n    const modalElement = modalRef.current;\n\n    if (event.target !== modalElement && !modalElement.contains(event.target))\n      onClose();\n  }\n\n  return (\n    <Overlay active={show} onClick={closeIfModalWasNotTarget}>\n      <div className=\"md:mx-72 md:px-8 py-20\">\n        <div\n          className=\"fixed xs:absolute bg-white p-6 shadow-2xl overflow-y-auto rounded-2xl  md:w-2/4 md:h-4/5\"\n          ref={modalRef}\n        >\n          <div className=\"flex flex-row-reverse \">\n            <button className=\"black text-black \" onClick={onClose}>\n              &#x2715;\n            </button>\n          </div>\n          {children}\n        </div>\n      </div>\n    </Overlay>\n  );\n}\n\nModalFaqs.propTypes = {\n  triggerRef: PropTypes.object.isRequired,\n  scale: PropTypes.number.isRequired,\n  children: PropTypes.node.isRequired,\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ModalFaqs;\n","import React from \"react\";\n\nexport default function Overlay({ active, ...props }) {\n  const hasChildren = typeof props.children !== \"undefined\";\n\n  return (\n    <>\n      {active && (\n        <div className=\"bg-black bg-opacity-20 fixed inset-0 z-10\" {...props}>\n          {hasChildren && <div className=\"z-20\">{props.children}</div>}\n        </div>\n      )}\n    </>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function usePx(initialValue) {\n  const [pixelValue, setPixelValue] = useState(initialValue);\n\n  function setNumericValue(value) {\n    setPixelValue(value + \"px\");\n  }\n\n  return [pixelValue, setNumericValue];\n}\n","import { useRef, useCallback, useEffect } from \"react\";\n\nexport default function useScrollLock(lock) {\n  const isInitialMount = useRef(true);\n\n  const lockScroll = useCallback(() => {\n    // Override CSS\n    document.body.style.height = \"100%\";\n    document.body.style.overflowY = \"hidden\";\n  }, []);\n\n  const restoreScroll = useCallback(() => {\n    // Restore CSS\n    document.body.style.height = \"\";\n    document.body.style.overflowY = \"\";\n  }, []);\n\n  useEffect(() => {\n    // Initially, only lock if `lock` is true, otherwise do nothing\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n\n      if (lock) lockScroll();\n\n      return;\n    }\n\n    // Then once the lock value changes, respond with both options\n    if (lock) {\n      lockScroll();\n    } else {\n      restoreScroll();\n    }\n\n    // And restore scroll when unmounted\n    return restoreScroll;\n  }, [lock, lockScroll, restoreScroll]);\n}\n","import { useEffect } from \"react\";\n\nexport default function useEscape(when, handler) {\n  useEffect(() => {\n    // Call `handler` if the escape key is pressed\n    function handleKeydown(event) {\n      if (event.keyCode === 27) {\n        // 27 -> escape\n        handler();\n      }\n    }\n\n    // Set a document listener for keydown if `when` is true\n    if (when) {\n      document.addEventListener(\"keydown\", handleKeydown);\n      // Otherwise remove the event listener\n    } else {\n      document.removeEventListener(\"keydown\", handleKeydown);\n    }\n\n    // Cleanup the document listener when unmounted\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeydown);\n    };\n  }, [when, handler]);\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useIntl } from \"gatsby-plugin-intl\";\nimport ModalSupporters from \"../components/ModalSupporters\";\n\nfunction FormSupportes() {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const triggerRef = React.useRef(null);\n  const intl = useIntl();\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    company: \"\",\n    message: \"\",\n  });\n\n  const handleInputChange = (event) => {\n    console.log(event.target.name);\n    console.log(event.target.value);\n    setData({\n      ...data,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const sendData = (event) => {\n    event.preventDefault();\n    console.log(\n      \"enviando datos...\" +\n        data.name +\n        \" \" +\n        data.email +\n        \" \" +\n        data.company +\n        \" \" +\n        data.message\n    );\n  };\n\n  async function handleSignIn(event) {\n    event.preventDefault();\n    setErrorMessage(\"\");\n    setLoading(true);\n    try {\n      // Sign In logic using signInEmail and signInPassword state\n      setErrorMessage(\"There was an error\");\n      setLoading(false);\n    } catch (err) {\n      // Remediation logic\n      setErrorMessage(\"There was an error \");\n      setLoading(false);\n    }\n  }\n  // const handle = (e) => {\n  //   e.preventDefault();\n\n  //   setgetData([...getData, data]);\n  //   setName(\"\");\n  //   setEmail(\"\");\n  //   setCompany(\"\");\n  //   setMessage(\"\");\n  // };\n\n  function handleClick() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleData() {\n    console.log(\"Click\");\n  }\n\n  return (\n    <>\n      <button\n        className=\"flex flex-col md:px-8 rounded-2xl cursor-pointer transition-shadow  text-lg  xs:text-sm\"\n        onClick={handleClick}\n        ref={triggerRef}\n      >\n        {intl.formatMessage({\n          id: `team.supportersSection.buttonSupporter`,\n        })}\n      </button>\n\n      <ModalSupporters\n        show={open}\n        triggerRef={triggerRef}\n        scale={2.0}\n        onClose={handleClose}\n      >\n        <div className=\"text-center pt-4 text-black\">\n          <h1 className=\"md:pb-4 xs:text-lg\">\n            {intl.formatMessage({\n              id: \"becomeaSupporter.title-BecomeaSuporter\",\n            })}\n          </h1>\n          <p>{intl.formatMessage({ id: \"becomeaSupporter.sub-header\" })}</p>\n        </div>\n\n        <div className=\"flex flex-col items-center justify-center text-center text-black\">\n          <form className=\"m-8 md:px-6\" onSubmit={sendData} autoComplete=\"off\">\n            <input\n              className=\"mt-2 w-full p-2 border-gray-500 shadow-lg focus:border-blue\"\n              required\n              type=\"text\"\n              name=\"name\"\n              placeholder={intl.formatMessage({\n                id: \"becomeaSupporter.inputname\",\n              })}\n              id=\"name\"\n              // value={name}\n              onChange={handleInputChange}\n            ></input>\n\n            <input\n              className=\"mt-2 w-full p-2 border-gray-500 shadow-lg focus:border-blue\"\n              required\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder={intl.formatMessage({\n                id: \"becomeaSupporter.inputemail\",\n              })}\n              // value={email}\n              onChange={handleInputChange}\n            ></input>\n\n            <input\n              className=\"mt-2 w-full p-2 border-gray-500 shadow-lg focus:border-blue\"\n              required\n              type=\"text\"\n              name=\"company\"\n              id=\"company\"\n              placeholder={intl.formatMessage({\n                id: \"becomeaSupporter.inputcompany\",\n              })}\n              // value={company}\n              onChange={handleInputChange}\n            ></input>\n\n            <textarea\n              className=\"mt-2 w-full p-2 border-gray-500 shadow-lg focus:border-blue h-48\"\n              required\n              type=\"text\"\n              name=\"message\"\n              id=\"message\"\n              placeholder={intl.formatMessage({\n                id: \"becomeaSupporter.inputmessage\",\n              })}\n              // value={message}\n              onChange={handleInputChange}\n            ></textarea>\n            <button\n              className={`\n                bg-blue border-2 rounded-xl text-white px-6 my-4 py-2 mt-10\n                ${loading ? \"bg-blue  animate-pulse\" : \"\"}\n              `}\n              disabled={loading}\n              onClick={handleData}\n              type=\"submit\"\n            >\n              {intl.formatMessage({ id: \"becomeaSupporter.button\" })}\n            </button>\n            <p className=\"text-blue\">{handleSignIn}</p>\n          </form>\n        </div>\n      </ModalSupporters>\n    </>\n  );\n}\nFormSupportes.propTypes = {\n  icon: PropTypes.any.isRequired,\n};\nexport default FormSupportes;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["calculatePosition","triggerRef","scale","triggerElement","current","getBoundingClientRect","x","y","width","height","window","innerWidth","innerHeight","calculatedWidth","Math","min","HORIZONTAL_PIXEL_PADDING","calculatedHeight","VERTICAL_PIXEL_PADDING","rawX","rawY","calculatedX","max","children","show","onClose","Error","initialTop","initialLeft","initialWidth","initialHeight","usePx","top","setTop","left","setLeft","setWidth","setHeight","useEffect","handleReposition","addEventListener","removeEventListener","usePositionCalculation","useScrollLock","useEscape","modalRef","useRef","active","onClick","event","modalElement","target","contains","className","ref","Overlay","props","hasChildren","initialValue","useState","pixelValue","setPixelValue","value","lock","isInitialMount","lockScroll","useCallback","document","body","style","overflowY","restoreScroll","when","handler","handleKeydown","keyCode","open","setOpen","loading","setLoading","setErrorMessage","React","intl","useIntl","name","email","company","message","data","setData","handleInputChange","console","log","handleSignIn","preventDefault","err","formatMessage","id","onSubmit","autoComplete","required","type","placeholder","onChange","disabled","_objectWithoutPropertiesLoose","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}