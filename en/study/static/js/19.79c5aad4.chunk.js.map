{"version":3,"sources":["../node_modules/little-state-machine/dist/little-state-machine.es.js","hooks/useHeaderContext.ts","helper/scrollHelper.ts","utils/wizard.ts","components/Button/style.ts","components/Button/Button.tsx","components/WizardButtons/style.ts","components/WizardButtons/WizardButtons.tsx","assets/icons/calendar.svg","assets/icons/chevron.svg","containers/SubmitSteps/Questionary/Step4b/Step4b.tsx","components/DatePicker/style.ts","components/DatePicker/DatePicker.tsx","containers/SubmitSteps/Questionary/Step4b/index.ts"],"names":["getBrowserStoreData","storageType","storeName","sessionStorageData","getItem","JSON","parse","undefined","_a","storeFactory","name","store","set","value","get","getName","isUndefined","val","setUpDevTools","isDevMode","getStore","window","STATE_MACHINE_DEBUG","setItem","STATE_MACHINE_RESET","clear","STATE_MACHINE_GET_STORE","STATE_MACHINE_SAVE_TO","localStorage","stringify","STATE_MACHINE_LOAD","data","StateMachineContext","createContext","updateStore","payload","transformStore","transform","externalStoreName","externalStoreData","currentStoreData","getSyncStoreData","defaultStoreData","options","syncStoreOption","syncStores","Array","isArray","forEach","option","Object","entries","key","values","browserStore","assign","setStore","isClient","sessionStorage","length","toString","removeItem","middleWaresArray","setStorageType","type","createStore","middleWares","methods","process","StateMachineProvider","props","useState","globalState","useMemo","createElement","Provider","actionTemplate","callback","result","shouldReRenderApp","pipeData","reduce","currentValue","currentFunction","useStateMachine","updateStoreFunction","useContext","keys","actions","previous","useCallback","action","p","state","useHeaderContext","React","HeaderContext","title","setTitle","logoSize","setLogoSize","setDoGoBack","doGoBack","scrollToTop","scrollTo","top","behavior","updateAction","storeKey","resetStore","welcome","language","StyledButton","styled","button","dark","color","disabled","colors","midGray","darkBlack","white","Button","memo","children","WizardButtonsContainer","div","theme","layout","generalPaddingAmount","breakpoints","tablet","WizardButtons","invert","leftLabel","leftDisabled","leftHandler","rightLabel","rightDisabled","rightHandler","onClick","module","exports","schema","Yup","symptomsStartedDate","required","defined","previousStep","nextStep","Portal","usePortal","bindTo","document","getElementById","history","useHistory","useTranslation","t","i18n","activeStep","setActiveStep","useForm","defaultValues","resolver","yupResolver","control","handleSubmit","errors","formState","handleDoBack","push","goBack","useEffect","onSubmit","a","defaultValue","render","onChange","label","Date","locale","StyledReactDatePickerContainer","DatePickerContainer","lightGray","LabelValueContainer","Label","darkGray","Value","DatePickerInput","forwardRef","ref","alt","src","calendarSvg","chevronSvg","defaultProps","today","endOfDay","selected","customInput","dateFormat","maxDate"],"mappings":"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","file":"static/js/19.79c5aad4.chunk.js","sourcesContent":["import { createContext, useState, useMemo, createElement, useContext, useCallback } from 'react';\n\nconst STORE_DEFAULT_NAME = '__STATE_MACHINE__';\r\nconst STORE_ACTION_NAME = '__STATE_MACHINE_ACTION_NAME__';\r\nconst STATE_MACHINE_DEBUG_NAME = '___STATE_MACHINE_DEBUG__';\n\nvar getBrowserStoreData = (storageType, storeName) => {\r\n    const sessionStorageData = storageType.getItem(storeName);\r\n    try {\r\n        return sessionStorageData ? JSON.parse(sessionStorageData) : undefined;\r\n    }\r\n    catch (_a) {\r\n        return undefined;\r\n    }\r\n};\n\nfunction storeFactory(storageType, name) {\r\n    const storeName = name || STORE_DEFAULT_NAME;\r\n    let store = getBrowserStoreData(storageType, storeName);\r\n    const getName = () => storeName;\r\n    const set = (value) => {\r\n        store = value;\r\n    };\r\n    const get = () => store;\r\n    return {\r\n        set,\r\n        get,\r\n        getName,\r\n    };\r\n}\n\nvar isUndefined = (val) => val === undefined;\n\nfunction setUpDevTools(isDevMode, storageType, getName, getStore) {\r\n    if (typeof window === 'undefined' || !isDevMode)\r\n        return;\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_DEBUG = (value) => storageType.setItem(STATE_MACHINE_DEBUG_NAME, value);\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_RESET = () => storageType.clear();\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_GET_STORE = () => storageType.getItem(getName());\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_SAVE_TO = name => window.localStorage.setItem(name, JSON.stringify(getStore()));\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_LOAD = ({ storeName, data, }) => storageType.setItem(getName() || STATE_MACHINE_DEBUG_NAME, data || window.localStorage.getItem(storeName) || '');\r\n}\n\nvar StateMachineContext = createContext({\r\n    store: {},\r\n    updateStore: (payload) => payload,\r\n});\n\nvar transformStore = ({ transform, externalStoreName, storageType, store, }) => transform({\r\n    externalStoreData: getBrowserStoreData(storageType, externalStoreName),\r\n    currentStoreData: store,\r\n});\n\nfunction getSyncStoreData(defaultStoreData, options, storageType) {\r\n    let store = defaultStoreData;\r\n    const syncStoreOption = options.syncStores;\r\n    if (!syncStoreOption)\r\n        return store;\r\n    try {\r\n        if (Array.isArray(syncStoreOption)) {\r\n            syncStoreOption.forEach(option => {\r\n                store = transformStore({\r\n                    transform: option.transform,\r\n                    externalStoreName: option.externalStoreName,\r\n                    storageType,\r\n                    store,\r\n                });\r\n            });\r\n        }\r\n        else if (syncStoreOption.externalStoreName &&\r\n            typeof syncStoreOption.transform === 'function' &&\r\n            typeof syncStoreOption.externalStoreName === 'string') {\r\n            return transformStore({\r\n                transform: syncStoreOption.transform,\r\n                externalStoreName: syncStoreOption.externalStoreName,\r\n                storageType,\r\n                store,\r\n            });\r\n        }\r\n        else {\r\n            Object.entries(syncStoreOption).forEach(([key, values]) => {\r\n                const browserStore = getBrowserStoreData(storageType, key);\r\n                values.forEach((value) => {\r\n                    store = Object.assign(Object.assign({}, store), {\r\n                        [value]: Object.assign(Object.assign({}, store[value]), browserStore[value]),\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n    catch (_a) {\r\n        return store;\r\n    }\r\n    return store;\r\n}\n\nconst isClient = typeof window !== 'undefined';\r\nconst isDevMode = process.env.NODE_ENV !== 'production';\r\nlet storageType = isClient\r\n    ? window.sessionStorage\r\n    : {\r\n        getItem: payload => payload,\r\n        setItem: (payload) => payload,\r\n        clear: () => { },\r\n        length: 0,\r\n        key: (payload) => payload.toString(),\r\n        removeItem: () => { },\r\n    };\r\nlet getStore;\r\nlet setStore;\r\nlet getName;\r\nlet middleWaresArray = [];\r\nconst middleWare = (data = '') => {\r\n    if (data && isClient) {\r\n        // @ts-ignore\r\n        window[STORE_ACTION_NAME] = data;\r\n    }\r\n    return data;\r\n};\r\nfunction setStorageType(type) {\r\n    storageType = type;\r\n}\r\nfunction createStore(defaultStoreData, options = {\r\n    name: STORE_DEFAULT_NAME,\r\n    middleWares: [],\r\n    syncStores: undefined,\r\n}) {\r\n    const storeName = options ? options.name : STORE_DEFAULT_NAME;\r\n    const methods = storeFactory(storageType, storeName);\r\n    if (isDevMode && isClient) {\r\n        // @ts-ignore\r\n        window['STATE_MACHINE_NAME'] = storeName;\r\n    }\r\n    getName = methods.getName;\r\n    getStore = methods.get;\r\n    setStore = methods.set;\r\n    middleWaresArray = options.middleWares;\r\n    setUpDevTools(isDevMode, storageType, getName, getStore);\r\n    setStore(getSyncStoreData(getStore() || defaultStoreData, options, storageType));\r\n}\r\nfunction StateMachineProvider(props) {\r\n    const [globalState, updateStore] = useState(getStore());\r\n    const value = useMemo(() => ({\r\n        store: globalState,\r\n        updateStore,\r\n    }), [globalState]);\r\n    // @ts-ignore\r\n    return createElement(StateMachineContext.Provider, Object.assign({ value: value }, props));\r\n}\r\nconst actionTemplate = ({ options, callback, updateStore, }) => (payload) => {\r\n    let result;\r\n    const debugName = callback ? callback.name : '';\r\n    if (isDevMode) {\r\n        middleWare(debugName);\r\n    }\r\n    if (callback) {\r\n        result = callback(getStore(), payload);\r\n    }\r\n    setStore(isUndefined(result) ? getStore() : result);\r\n    storageType.setItem(getName(), JSON.stringify(getStore()));\r\n    if (isUndefined(options) ||\r\n        (options && options.shouldReRenderApp !== false)) {\r\n        let pipeData = getStore();\r\n        if (Array.isArray(middleWaresArray) && middleWaresArray.length) {\r\n            pipeData = middleWaresArray.reduce((currentValue, currentFunction) => currentFunction(currentValue) || currentValue, pipeData);\r\n        }\r\n        updateStore(pipeData);\r\n    }\r\n};\r\nfunction useStateMachine(updateStoreFunction, options) {\r\n    const { store: globalState, updateStore } = useContext(StateMachineContext);\r\n    if (updateStoreFunction && Object.keys(updateStoreFunction).length) {\r\n        return {\r\n            actions: Object.entries(updateStoreFunction).reduce((previous, [key, callback]) => (Object.assign(Object.assign({}, previous), { [key]: useCallback(actionTemplate({\r\n                    options,\r\n                    callback,\r\n                    updateStore,\r\n                }), []) })), {}),\r\n            action: p => p,\r\n            state: globalState,\r\n        };\r\n    }\r\n    return {\r\n        actions: {},\r\n        action: useCallback(updateStoreFunction\r\n            ? actionTemplate({\r\n                options,\r\n                callback: updateStoreFunction,\r\n                updateStore,\r\n            })\r\n            : () => { }, []),\r\n        state: globalState,\r\n    };\r\n}\n\nexport { StateMachineContext, StateMachineProvider, createStore, setStorageType, useStateMachine };\n","import React from 'react';\nimport { HeaderContext } from 'components/Header';\n\nconst useHeaderContext = () => {\n  const {\n    title, setTitle, logoSize, setLogoSize, setDoGoBack, doGoBack,\n  } = React.useContext(HeaderContext);\n\n  return {\n    title,\n    setTitle,\n    logoSize,\n    setLogoSize,\n    doGoBack,\n    setDoGoBack,\n  };\n};\n\nexport default useHeaderContext;\n","export const scrollToTop = function scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nexport const scrollToBottom = function scrollToBottom() {\n  window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\n};\n","// TODO: Improve types\nexport function updateAction(storeKey: string): any {\n  return (state: any, payload: any) => ({\n    ...state,\n    [storeKey]: {\n      ...state[storeKey],\n      ...payload,\n    },\n  });\n}\n\nexport function resetStore(): any {\n  return (state: any) => ({ welcome: { language: state.welcome.language } });\n}\n","import styled from 'styled-components';\nimport { colors } from '../../theme';\n\nexport interface StyledButtonProps {\n  disabled?: boolean;\n  dark?: boolean;\n  id?: string;\n}\n\nexport const StyledButton = styled.button<StyledButtonProps>`\n  height: 50px;\n  border-radius: 4px; \n  font-family: 'Source Sans Pro'; /* It could be removed if default on body changes */\n  font-weight: bold;\n  font-size: 14px;\n  font-weight: bold;\n  width: 100%;\n\n  ${({ dark, disabled }) => {\n    const color = disabled ? colors.midGray : colors.darkBlack;\n    return dark ? `\n    background-color: ${color};\n    color: ${colors.white};\n    border: none;\n  ` : `\n    background-color: ${colors.white};\n    color: ${color};\n    border: 1px solid ${color};\n  `;\n  }}\n`;\n","import React, { PropsWithChildren } from 'react';\n\n// Styles\nimport {\n  StyledButton,\n  StyledButtonProps,\n} from './style';\n\nexport interface ButtonProps extends PropsWithChildren<StyledButtonProps> {\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void);\n}\n\nconst Button = React.memo(({ children, ...props }: ButtonProps) => ((\n  <StyledButton\n    type=\"button\"\n    {...props}\n  >\n    {children}\n  </StyledButton>\n)));\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const WizardButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: ${props => `calc(100% - ${props.theme.layout.generalPaddingAmount * 2}px)`};\n  margin: 0 auto;\n\n  button {\n    flex: 1;\n\n    &:first-of-type {\n      margin-left: 0px !important;\n    }\n\n    &:last-of-type {\n      margin-left: 20px;\n    }\n  }\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n  }\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Components\nimport Button from 'components/Button';\n\n// Styles\nimport {\n  WizardButtonsContainer,\n} from './style';\n\ninterface WizardButtonsProps {\n  invert?: boolean;\n  leftLabel: string;\n  leftDisabled?: boolean;\n  leftHandler: () => void;\n  rightLabel?: string;\n  rightDisabled?: boolean;\n  rightHandler?: () => void;\n}\n\nconst WizardButtons = React.memo(({\n  invert = false,\n  leftLabel,\n  leftDisabled,\n  leftHandler,\n  rightLabel,\n  rightDisabled,\n  rightHandler,\n}: WizardButtonsProps) => (\n  <WizardButtonsContainer>\n    <Button\n      dark={invert}\n      disabled={leftDisabled}\n      onClick={leftHandler}\n    >\n      {leftLabel}\n    </Button>\n    {\n        rightLabel && rightHandler && (\n          <Button\n            dark={!invert}\n            disabled={rightDisabled}\n            onClick={rightHandler}\n          >\n            {rightLabel}\n          </Button>\n        )\n      }\n  </WizardButtonsContainer>\n));\nexport default React.memo(WizardButtons);\n","module.exports = __webpack_public_path__ + \"static/media/calendar.ffdaf43c.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron.66e5f21f.svg\";","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport usePortal from 'react-useportal';\nimport { useTranslation } from 'react-i18next';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers';\nimport { ErrorMessage } from '@hookform/error-message';\nimport * as Yup from 'yup';\n\n// Update Action\nimport { updateAction } from 'utils/wizard';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Utils\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Styles\nimport DatePicker from 'components/DatePicker';\nimport WizardButtons from 'components/WizardButtons';\nimport {\n  QuestionText, QuestionRequiredIndicatorText, GrayExtraInfo,\n} from '../style';\n\nconst schema = Yup.object({\n  symptomsStartedDate: Yup.date().required(),\n}).defined();\n\ntype Step4bType = Yup.InferType<typeof schema>;\n\nconst Step4b = ({\n  previousStep,\n  nextStep,\n  storeKey,\n}: Wizard.StepProps) => {\n  // Hooks\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const { setDoGoBack, setTitle } = useHeaderContext();\n  const history = useHistory();\n  const { t, i18n } = useTranslation();\n  const { state, action } = useStateMachine(updateAction(storeKey));\n\n  // States\n  const [activeStep, setActiveStep] = React.useState(true);\n\n  // Form\n  const {\n    control, handleSubmit, formState,\n  } = useForm({\n    defaultValues: state?.[storeKey],\n    resolver: yupResolver(schema),\n  });\n  const { errors } = formState;\n\n  const handleDoBack = React.useCallback(() => {\n    setActiveStep(false);\n    if (previousStep) {\n      history.push(previousStep);\n    } else {\n      history.goBack();\n    }\n  }, [history, previousStep]);\n\n  useEffect(() => {\n    scrollToTop();\n    setTitle(t('questionary:headerText2'));\n    setDoGoBack(() => handleDoBack);\n  }, [handleDoBack, setDoGoBack, setTitle, t]);\n\n  // Handlers\n  const onSubmit = async (values: Step4bType) => {\n    if (values) {\n      action(values);\n      if (nextStep) {\n        setActiveStep(false);\n        history.push(nextStep);\n      }\n    }\n  };\n\n  return (\n    <>\n      <GrayExtraInfo>{t('questionary:caption')}</GrayExtraInfo>\n\n      <QuestionText>\n        {t('questionary:symptomsDate')}\n        <QuestionRequiredIndicatorText> *</QuestionRequiredIndicatorText>\n      </QuestionText>\n      <Controller\n        control={control}\n        name=\"symptomsStartedDate\"\n        defaultValue={null}\n        render={({ onChange, value }) => (\n          <DatePicker\n            label=\"Date\"\n            value={value ? new Date(value) : null}\n            locale={i18n.language}\n            onChange={onChange}\n          />\n        )}\n      />\n      {/* Bottom Buttons */}\n      <p><ErrorMessage errors={errors} name=\"name\" /></p>\n      {activeStep && (\n        <Portal>\n          <WizardButtons\n            leftLabel={t('questionary:nextButton')}\n            leftHandler={handleSubmit(onSubmit)}\n            invert\n          />\n        </Portal>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(Step4b);\n","import styled from 'styled-components';\n\nexport const StyledReactDatePickerContainer = styled.div`\n  .react-datepicker-wrapper {\n    display: block;\n    max-width: 362px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const DatePickerContainer = styled.button`\n  background-color: ${props => props.theme.colors.lightGray};\n  border-radius: 4px;\n  border: none;\n  padding: 0 19.69px 0 14px;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const LabelValueContainer = styled.div`\n  flex: 1;\n  text-align: left;\n  padding: 7.41px 0 0 14px;\n  height: 100%;\n`;\n\nexport const Label = styled.div`\n  font-family: Source Sans Pro;\n  font-size: 12px;\n  line-height: 142.69%;\n  color: ${props => props.theme.colors.darkGray};\n`;\n\nexport const Value = styled.div`\n  font-family: Source Sans Pro;\n  font-size: 14px;\n  line-height: 142.69%;\n  color: ${props => props.theme.colors.darkBlack};\n`;\n","import React from 'react';\nimport ReactDatePicker from 'react-datepicker';\nimport { endOfDay } from 'date-fns';\n\n// Images\nimport calendarSvg from 'assets/icons/calendar.svg';\nimport chevronSvg from 'assets/icons/chevron.svg';\n\n// Styles\nimport {\n  DatePickerContainer,\n  Label,\n  LabelValueContainer,\n  StyledReactDatePickerContainer,\n  Value,\n} from './style';\n\ninterface DatePickerProps {\n  label: string;\n  value: Date | null | undefined;\n  locale: string;\n  onChange(date: Date | [Date, Date] | null, event: React.SyntheticEvent<any, Event> | undefined): void\n}\n\ninterface DatePickerInputProps {\n  label: string;\n  value?: Date | null | undefined;\n  onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined\n}\n\nconst DatePickerInput = React.forwardRef((\n  { label, value, onClick }: DatePickerInputProps,\n  ref: ((instance: HTMLButtonElement | null) => void) | React.RefObject<HTMLButtonElement> | null | undefined,\n) => (\n  <DatePickerContainer ref={ref} onClick={onClick}>\n    <img alt=\"calendar\" src={calendarSvg} />\n    <LabelValueContainer>\n      <Label>{label}</Label>\n      <Value>{value}</Value>\n    </LabelValueContainer>\n    <img alt=\"calendar\" src={chevronSvg} />\n  </DatePickerContainer>\n));\n\nDatePickerInput.defaultProps = {\n  value: undefined,\n  onClick: undefined,\n};\n\nconst DatePicker = ({\n  label, value, locale, onChange,\n}: DatePickerProps) => {\n  // Memos\n  const today = React.useMemo(() => endOfDay(new Date()), []);\n\n  return (\n    <StyledReactDatePickerContainer>\n      <ReactDatePicker\n        selected={value}\n        customInput={<DatePickerInput label={label} />}\n        onChange={onChange}\n        dateFormat=\"EEE, MMM d, Y\"\n        locale={locale}\n        maxDate={today}\n      />\n    </StyledReactDatePickerContainer>\n  );\n};\n\nexport default React.memo(DatePicker);\n","export { default } from './Step4b';\n"],"sourceRoot":""}