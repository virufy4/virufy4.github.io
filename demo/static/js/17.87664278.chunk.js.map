{"version":3,"sources":["components/Layout/Layout.ts","components/Wizard/style.ts","components/Wizard/Wizard.tsx","components/DotIndicators/style.ts","components/DotIndicators/DotIndicators.tsx","containers/Welcome/Welcome.tsx","containers/Welcome/index.ts"],"names":["Layout","styled","div","props","theme","breakpoints","tablet","WizardContainer","StepContainer","WizardNavControlPortal","AsyncLoad","loadable","container","fallback","cacheKey","Wizard","steps","children","match","useRouteMatch","location","useLocation","React","useState","loadSteps","setLoadSteps","pathList","useMemo","base","url","replace","map","step","path","useEffect","timing","duration","exact","Array","isArray","s","render","componentPath","id","memo","WelcomeWizardStepIndicators","ul","WelcomeWizardStepIndicator","li","colors","gray","darkBlack","ProgressIndicator","className","current","total","stepButtons","stepButtonsElements","push","StoreKey","createStore","name","middleWares","storageType","window","localStorage","baseUrl","stepsWithoutDots","storeKey","nextStep","previousStep","Welcome","pathname","active","findIndex","DotIndicators","length"],"mappings":"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","file":"static/js/17.87664278.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Layout = styled.div`\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    margin: auto;\n\n    max-width: 768px;\n    width: 100%;\n  }\n`;\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const WizardContainer = styled.div`\n  display: flex;\n  flex-direction:column;\n\n  height:100%;\n`;\n\nexport const StepContainer = styled.div`\n  height: 100%;\n`;\n\nexport const WizardNavControlPortal = styled.div`\n  margin-bottom: 16px;\n`;\n","import React from 'react';\nimport loadable from '@loadable/component';\nimport SlideRoutes from 'react-slide-routes';\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { StateMachineProvider } from 'little-state-machine';\n\n// Components\nimport Layout from 'components/Layout/';\n\n// Style\nimport {\n  WizardContainer,\n  StepContainer,\n  WizardNavControlPortal,\n} from './style';\n\ninterface WizardProps {\n  steps: Wizard.Step[];\n}\n\ninterface AsyncLoadProps extends Partial<Wizard.StepProps> {\n  container: string;\n}\n\nconst AsyncLoad = loadable(({ container }: AsyncLoadProps) => import(`containers/${container}`), {\n  fallback: <div>Loading ...</div>,\n  cacheKey: ({ container }: AsyncLoadProps) => container,\n});\n\nfunction clearPath(path: string) {\n  return path.replace(/\\/$/, '');\n}\n\nconst Wizard = ({ steps, children }: React.PropsWithChildren<WizardProps>) => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const [loadSteps, setLoadSteps] = React.useState(false);\n\n  const pathList = React.useMemo(() => {\n    const base = clearPath(match.url);\n    return steps.map(step => base + step.path);\n  }, [match.url, steps]);\n\n  React.useEffect(() => {\n    setLoadSteps(true);\n  }, []);\n\n  return (\n    <StateMachineProvider>\n      <WizardContainer>\n        <StepContainer>\n          {\n            loadSteps && (\n              <SlideRoutes\n                location={location}\n                timing=\"ease-in-out\"\n                duration={500}\n                pathList={pathList}\n              >\n                {\n                  steps.map(step => (\n                    <Route\n                      key={step.componentPath}\n                      exact\n                      path={Array.isArray(step.path)\n                        ? step.path.map(s => (match.path + s))\n                        : match.path + step.path}\n                      render={() => (\n                        <Layout>\n                          <AsyncLoad\n                            container={step.componentPath}\n                            {...step.props}\n                          />\n                        </Layout>\n\n                      )}\n                    />\n                  ))\n                }\n              </SlideRoutes>\n            )\n          }\n        </StepContainer>\n        <WizardNavControlPortal\n          id=\"wizard-buttons\"\n        >\n          {children}\n        </WizardNavControlPortal>\n      </WizardContainer>\n    </StateMachineProvider>\n  );\n};\n\nexport default React.memo(Wizard);\n","import styled from 'styled-components';\n\nexport const WelcomeWizardStepIndicators = styled.ul`\n  display: flex;\n  justify-content:center;\n  padding: 0;\n  margin-bottom: 22px;\n\n @media screen and (${props => props.theme.breakpoints.tablet}){\n    margin-bottom: 40px;\n  }\n`;\n\nexport const WelcomeWizardStepIndicator = styled.li`\n  background-color: ${props => props.theme.colors.gray};\n  border-radius: 50%;\n  display: inline-block;\n\n  height: 7px;\n  width: 7px;\n\n  &:not(:first-of-type){\n    margin-left: 6px;\n  };\n\n  &.active {\n    background-color: ${props => props.theme.colors.darkBlack};\n  };\n\n`;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n\n// Styles\nimport {\n  WelcomeWizardStepIndicators,\n  WelcomeWizardStepIndicator,\n} from './style';\n\ninterface ProgressIndicatorProps {\n  className?: string;\n  current: number;\n  total: number;\n}\n\nconst ProgressIndicator = ({\n  className = '',\n  current,\n  total,\n}: ProgressIndicatorProps) => {\n  // Memos\n  const stepButtons = React.useMemo(() => {\n    const stepButtonsElements: React.ReactElement[] = [];\n\n    for (let step = 0; step < total; step += 1) {\n      stepButtonsElements.push((\n        <WelcomeWizardStepIndicator\n          className={step === current ? 'active' : ''}\n          id={`WelcomeStepButton-${step}`}\n          key={`WelcomeStepButton-${step}`}\n        />\n      ));\n    }\n\n    return stepButtonsElements;\n  }, [current, total]);\n\n  return (\n    <WelcomeWizardStepIndicators className={className}>\n      {stepButtons}\n    </WelcomeWizardStepIndicators>\n  );\n};\n\nexport default React.memo(ProgressIndicator);\n","import React from 'react';\nimport { createStore } from 'little-state-machine';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\n\n// Wizard\nimport Wizard from 'components/Wizard';\nimport DotIndicators from 'components/DotIndicators';\n\nconst StoreKey = 'welcome';\n\ncreateStore({\n  [StoreKey]: {},\n}, {\n  name: 'VirufyWizard',\n  middleWares: [],\n  storageType: window.localStorage,\n});\n\nconst baseUrl = '/welcome';\n\nconst stepsWithoutDots: Wizard.Step[] = [\n  {\n    path: '',\n    componentPath: 'Welcome/Step1',\n    props: {\n      storeKey: StoreKey,\n      nextStep: `${baseUrl}/step-2`,\n    },\n  },\n  {\n    path: '/step-2',\n    componentPath: 'Welcome/Step2',\n    props: {\n      storeKey: StoreKey,\n      previousStep: `${baseUrl}`,\n      nextStep: `${baseUrl}/step-3`,\n    },\n  },\n];\n\nconst steps: Wizard.Step[] = [\n  {\n    path: '/step-3',\n    componentPath: 'Welcome/Step3',\n    props: {\n      storeKey: StoreKey,\n      previousStep: `${baseUrl}/step-2`,\n      nextStep: `${baseUrl}/step-4`,\n    },\n  },\n  {\n    path: '/step-4',\n    componentPath: 'Welcome/Step4',\n    props: {\n      storeKey: StoreKey,\n      previousStep: `${baseUrl}/step-3`,\n      nextStep: '/submit-steps/step-record/cough',\n    },\n  },\n];\n\nconst Welcome = () => {\n  // Hooks\n  const location = useLocation();\n  const match = useRouteMatch();\n\n  const url = location.pathname.replace(match.url, '');\n  const active = steps.findIndex(step => step.path === url);\n\n  return (\n    <Wizard\n      steps={[...stepsWithoutDots, ...steps]}\n    >\n      {active >= 0 && (\n        <DotIndicators\n          current={active}\n          total={steps.length}\n        />\n      )}\n    </Wizard>\n  );\n};\n\nexport default React.memo(Welcome);\n","export { default } from './Welcome';\n"],"sourceRoot":""}