{"version":3,"sources":["utils/wizard.ts","components/Checkbox/style.ts","components/Checkbox/Checkbox.tsx","hooks/useEmbeddedFile.ts","utils/mapOfConsentFiles.ts","data/privacyPolicy.ts","data/consentPdf.ts","containers/Welcome/Step3/Step3.tsx","helper/consentPathHelper.ts","containers/Welcome/Step3/index.ts"],"names":["updateAction","storeKey","state","payload","resetStore","welcome","language","StyledCheckboxContainer","styled","FullWidthDiv","isChecked","theme","colors","green_25","lightGreen_25","props","realBlack_4","fontWeight","css","breakpoints","tablet","StyledCheckboxInput","input","attrs","type","checkboxLeftOffsetPosition","StyledCheckboxInputLabel","label","Checkbox","id","name","value","margin","onChange","checked","htmlFor","DOMPurify","createDOMPurify","window","useEmbeddedFile","filePath","useState","isLoadingFile","setIsLoadingFile","file","setFile","useEffect","fetch","mode","then","fetchedFile","text","result","sanitize","ADD_ATTR","mapOfConsentFiles","Argentina","consentLang","Bolivia","Brazil","Colombia","Mexico","Pakistan","Peru","privacyPolicy","consentPdf","schema","Yup","shape","agreedConsentTerms","required","default","oneOf","agreedPolicyTerms","agreedCovidDetection","when","is","notRequired","otherwise","agreedTrainingArtificial","agreeCollectionAndProcessingInfo","React","memo","p","width","useWindowSize","Portal","usePortal","bindTo","document","getElementById","activeStep","setActiveStep","setDoGoBack","useHeaderContext","useStateMachine","action","store","currentCountry","country","useForm","defaultValues","resolver","yupResolver","context","control","handleSubmit","formState","errors","isValid","history","useHistory","lang","basePath","process","indexOfLang","indexOf","indexOfDefaultDoc","buildConsentFilePath","consentFormContent","onSubmit","values","a","nextStep","push","doBack","useCallback","previousStep","goBack","scrollToTop","t","useTranslation","p3MarginBottom","mt","textAlign","dangerouslySetInnerHTML","__html","mb","Trans","i18nKey","Link","to","target","defaultValue","render","e","WizardButtons","invert","leftLabel","leftHandler","leftDisabled"],"mappings":"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","file":"static/js/27.95c64f4c.chunk.js","sourcesContent":["// TODO: Improve types\nexport function updateAction(storeKey: string): any {\n  return (state: any, payload: any) => ({\n    ...state,\n    [storeKey]: {\n      ...state[storeKey],\n      ...payload,\n    },\n  });\n}\n\nexport function resetStore(): any {\n  return (state: any) => ({ welcome: { language: state.welcome.language } });\n}\n","import styled, { css } from 'styled-components';\nimport FullWidthDiv from 'components/FullWidthDiv';\n\ninterface StyledCheckboxContainerProps {\n  isChecked: boolean | undefined;\n  fontWeight?: number;\n  margin: string;\n\n}\n\ninterface StyledCheckboxLabelProps {\n  htmlFor: string;\n  checkboxLeftOffsetPosition: number;\n}\n\ninterface StyledCheckboxInputProps {\n  checkboxLeftOffsetPosition: number;\n}\n\nexport const StyledCheckboxContainer = styled(FullWidthDiv)<StyledCheckboxContainerProps>`\n  &:nth-child(odd) {\n    background-color: ${({ isChecked, theme }) => (isChecked ? theme.colors.green_25 : 'transparent')};\n  }\n  &:nth-child(even) {\n    background-color: ${({ isChecked, theme }) => (isChecked ? theme.colors.lightGreen_25 : 'transparent')};\n  }\n  border-top: 1px solid ${props => props.theme.colors.realBlack_4};\n  display: flex;\n  font-family: \"Source Sans Pro\";\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  ${({ fontWeight }) => fontWeight && css`font-weight: ${fontWeight};`}\n  padding: 15px 0;\n  position: relative;\n\n  &:last-of-type {\n    border-bottom: 1px solid ${props => props.theme.colors.realBlack_4};\n  };\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 470px;\n    margin: auto;\n    width: 100%;\n  }\n`;\n\nexport const StyledCheckboxInput = styled.input.attrs(() => ({\n  type: 'checkbox',\n}))<StyledCheckboxInputProps>`\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M16 2V16H2V2H16ZM16 0H2C0.9 0 0 0.9 0 2V16C0 17.1 0.9 18 2 18H16C17.1 18 18 17.1 18 16V2C18 0.9 17.1 0 16 0Z' fill='%2321242C'/%3E%3C/svg%3E%0A\");\n  background-repeat: no-repeat;\n  color: black;\n  cursor: pointer;\n  display: inline-block;\n  height: 18px;\n  left: ${props => props.checkboxLeftOffsetPosition}px;\n  outline: 0;\n  position:absolute;\n  width: 18px;\n  border: 0;\n  border-radius: 0;\n  transform: translateY(4px);\n\n  &:checked{\n    height: 18px;\n    width: 28px;\n    background-image: url(\"data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M16 0H2C0.9 0 0 0.9 0 2V16C0 17.1 0.9 18 2 18H16C17.1 18 18 17.1 18 16V2C18 0.9 17.1 0 16 0ZM16 16H2V2H16V16ZM14.99 6L13.58 4.58L6.99 11.17L4.41 8.6L2.99 10.01L6.99 14L14.99 6Z' fill='%2321242C'/%3E%3C/svg%3E%0A\");\n  }\n`;\n\nexport const StyledCheckboxInputLabel = styled.label<StyledCheckboxLabelProps>`\n  margin: auto;\n  margin-left:  ${({ checkboxLeftOffsetPosition }) => checkboxLeftOffsetPosition + 32}px;\n  margin-right: 20px;\n`;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/require-default-props */\nimport React, { FunctionComponent } from 'react';\n\nimport { StyledCheckboxContainer, StyledCheckboxInput, StyledCheckboxInputLabel } from './style';\n\ninterface CheckboxProps {\n  checkboxLeftOffsetPosition?: number;\n  fontWeight?: number;\n  id: string;\n  label: string | React.ReactElement;\n  margin?: string;\n  name: string;\n  onChange: (...event: any[]) => void;\n  value: boolean | undefined;\n}\n\nconst Checkbox: FunctionComponent<CheckboxProps> = ({\n  label, id, name, value, fontWeight = 400, margin = 'auto', checkboxLeftOffsetPosition = 20, onChange,\n}: CheckboxProps) => (\n  <StyledCheckboxContainer isChecked={value} fontWeight={fontWeight} margin={margin}>\n    <StyledCheckboxInput\n      onChange={onChange}\n      checkboxLeftOffsetPosition={checkboxLeftOffsetPosition}\n      id={id}\n      name={name}\n      checked={value}\n    />\n    <StyledCheckboxInputLabel\n      htmlFor={id}\n      checkboxLeftOffsetPosition={checkboxLeftOffsetPosition}\n    >\n      {label}\n    </StyledCheckboxInputLabel>\n  </StyledCheckboxContainer>\n);\n\nexport default Checkbox;\n","import { useState, useEffect } from 'react';\nimport createDOMPurify from 'dompurify';\n\nconst DOMPurify = createDOMPurify(window);\n\nconst useEmbeddedFile = (filePath = '') => {\n  const [isLoadingFile, setIsLoadingFile] = useState(false);\n  const [file, setFile] = useState('');\n\n  useEffect(() => {\n    setIsLoadingFile(true);\n    fetch(filePath, { mode: 'no-cors' }).then(fetchedFile => fetchedFile.text()).then(result => { setIsLoadingFile(false); setFile(result); });\n  }, [filePath]);\n\n  return { file: DOMPurify.sanitize(file, { ADD_ATTR: ['target'] }), isLoadingFile };\n};\n\nexport default useEmbeddedFile;\n","export const mapOfConsentFiles = {\n  Argentina: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Bolivia: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Brazil: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Colombia: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Mexico: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Pakistan: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  Peru: {\n    consentLang: [\n      'default.html',\n    ],\n  },\n  'United States': {\n    consentLang: [\n      'default.html',\n    ],\n  },\n};\n","export const privacyPolicy = {\n  Argentina: 'https://virufy.org/ar/privacy_policy.pdf',\n  Bolivia: 'https://virufy.org/bo/privacy_policy.pdf',\n  Brazil: 'https://virufy.org/br/privacy_policy.pdf',\n  Colombia: 'https://virufy.org/co/privacy_policy.pdf',\n  Peru: 'https://virufy.org/pe/privacy_policy.pdf',\n  Mexico: 'https://virufy.org/mx/privacy_policy.pdf',\n  Pakistan: 'https://virufy.org/eu/privacy_policy.pdf',\n  'United States': 'https://virufy.org/us/privacy_policy.pdf',\n};\n\ndeclare global {\n  type PrivacyPolicyCountry = keyof typeof privacyPolicy;\n}\n","export const consentPdf = {\n  Argentina: 'https://virufy.org/ar/study_consent.pdf',\n  Bolivia: 'https://virufy.org/bo/study_consent.pdf',\n  Brazil: 'https://virufy.org/br/study_consent.pdf',\n  Colombia: 'https://virufy.org/co/study_consent.pdf',\n  Peru: 'https://virufy.org/pe/study_consent.pdf',\n  Mexico: 'https://virufy.org/mx/study_consent.pdf',\n  Pakistan: 'https://virufy.org/eu/study_consent.pdf',\n  'United States': 'https://virufy.org/us/study_consent.pdf',\n};\n\ndeclare global {\n  type ConsentPDFCountry = keyof typeof consentPdf;\n}\n","import React, { useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation, Trans } from 'react-i18next';\nimport usePortal from 'react-useportal';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers';\nimport { ErrorMessage } from '@hookform/error-message';\nimport * as Yup from 'yup';\n\n// Components\nimport WizardButtons from 'components/WizardButtons';\nimport Link from 'components/Link';\nimport Checkbox from 'components/Checkbox';\n\n// Update Action\nimport { updateAction } from 'utils/wizard';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Hooks\nimport useWindowSize from 'hooks/useWindowSize';\nimport useEmbeddedFile from 'hooks/useEmbeddedFile';\n\n// Utils\nimport { buildConsentFilePath } from 'helper/consentPathHelper';\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Data\nimport { privacyPolicy } from 'data/privacyPolicy';\nimport { consentPdf } from 'data/consentPdf';\n\n// Styles\nimport {\n  WelcomeLogo,\n  WelcomeTitle,\n  WelcomeContent,\n  WelcomeSubtitle,\n  WelcomeStyledFormAlternative,\n  WelcomeConsentForm,\n  CheckboxTitle,\n} from '../style';\n\nconst schema = Yup.object().shape({\n  agreedConsentTerms: Yup.boolean().required().default(false).oneOf([true]),\n  agreedPolicyTerms: Yup.boolean().required().default(false).oneOf([true]),\n  agreedCovidDetection: Yup.boolean().when('$country', {\n    is: 'Colombia',\n    then: Yup.boolean().notRequired(),\n    otherwise: Yup.boolean().required().default(false).oneOf([true]),\n  }),\n  agreedTrainingArtificial: Yup.boolean().when('$country', {\n    is: 'Colombia',\n    then: Yup.boolean().notRequired(),\n    otherwise: Yup.boolean().required().default(false).oneOf([true]),\n  }),\n  agreeCollectionAndProcessingInfo: Yup.boolean().required().default(false).oneOf([true]),\n});\n\ntype Step3Type = Yup.InferType<typeof schema>;\n\nconst Step3 = (p: Wizard.StepProps) => {\n  const { width } = useWindowSize();\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const [activeStep, setActiveStep] = React.useState(true);\n  const { setDoGoBack } = useHeaderContext();\n\n  const { state, action } = useStateMachine(updateAction(p.storeKey));\n\n  const store = state?.[p.storeKey];\n\n  const currentCountry: PrivacyPolicyCountry = state.welcome.country;\n  const {\n    control, handleSubmit, formState,\n  } = useForm({\n    defaultValues: store,\n    resolver: yupResolver(schema),\n    context: {\n      country: currentCountry,\n    },\n    mode: 'onChange',\n  });\n  const { errors, isValid } = formState;\n  const history = useHistory();\n  const { isLoadingFile, file: consentFormContent } = useEmbeddedFile(\n    buildConsentFilePath(currentCountry, state.welcome.language),\n  );\n\n  const onSubmit = async (values: Step3Type) => {\n    if (values) {\n      action(values);\n      if (p.nextStep) {\n        setActiveStep(false);\n        history.push(p.nextStep);\n      }\n    }\n  };\n\n  const doBack = useCallback(() => {\n    if (p.previousStep) {\n      setActiveStep(false);\n      history.push(p.previousStep);\n    } else {\n      history.goBack();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    scrollToTop();\n    setDoGoBack(() => doBack);\n  }, [doBack, setDoGoBack]);\n\n  const { t } = useTranslation();\n  const p3MarginBottom = (width && width > 560 ? 50 : 27);\n\n  return (\n    <WelcomeStyledFormAlternative>\n      <WelcomeLogo />\n\n      <WelcomeTitle\n        mt={width && width > 560 ? 38 : 12}\n        textAlign={width && width > 560 ? 'center' : 'left'}\n      >\n        {t('consent:title')}\n      </WelcomeTitle>\n\n      <WelcomeContent>\n        <WelcomeConsentForm dangerouslySetInnerHTML={{ __html: isLoadingFile ? 'Loading...' : consentFormContent }} />\n\n        <WelcomeSubtitle\n          fontWeight={400}\n          mb={store?.country !== 'Brazil' ? p3MarginBottom : 10}\n          textAlign=\"left\"\n          mt={width && width > 560 ? 28 : 20}\n        >\n          <Trans i18nKey=\"consent:paragraph3\">\n            By checking the below boxes, you are granting your explicit, freely given, and informed consent to Virufy to\n            collect, process, and share your information for the purposes indicated above and as provided in greater\n            detail in our <Link to={privacyPolicy[currentCountry]} target=\"_blank\">Privacy Policy</Link>. You can print\n            a copy of this Consent Form for your personal records by\n            accessing <Link to={consentPdf[currentCountry]} target=\"_blank\">Privacy Policy</Link>\n          </Trans>\n        </WelcomeSubtitle>\n\n        {store?.country === 'Brazil' && (\n          <WelcomeSubtitle fontWeight={400} mb={p3MarginBottom} textAlign=\"left\">\n            <Trans i18nKey=\"consent:paragraph3_brazil\">\n              If you are located inside Brazilian national territory, and for the purposes of the General Personal Data\n              Protection Law (&quot;LGPD&quot;), &quot;consent&quot;, in its free, informed, and unequivocal\n              pronouncement, will be the legal basis on which we process sensitive personal data.\n            </Trans>\n          </WelcomeSubtitle>\n        )}\n\n        <CheckboxTitle>\n          {t('consent:pleaseConfirm', 'Please confirm the following:')}\n        </CheckboxTitle>\n\n        <Controller\n          control={control}\n          name=\"agreedConsentTerms\"\n          defaultValue={false}\n          render={({ onChange, value }) => (\n            <Checkbox\n              id=\"Step2-ConsentTerms\"\n              label={t('consent:certify')}\n              name=\"agreedConsentTerms\"\n              onChange={e => onChange(e.target.checked)}\n              value={value}\n            />\n          )}\n        />\n\n        <Controller\n          control={control}\n          name=\"agreedPolicyTerms\"\n          defaultValue={false}\n          render={({ onChange, value }) => (\n            <Checkbox\n              id=\"Step2-PolicyTerms\"\n              label={(\n                <Trans i18nKey=\"consent:agree\">\n                  I agree to the terms of the Virufy\n                  <Link to={privacyPolicy[currentCountry]} target=\"_blank\">Privacy Policy</Link>\n                </Trans>\n              )}\n              name=\"agreedPolicyTerms\"\n              onChange={e => onChange(e.target.checked)}\n              value={value}\n            />\n          )}\n        />\n\n        {currentCountry !== 'Colombia' && (\n          <>\n            <Controller\n              control={control}\n              name=\"agreedCovidDetection\"\n              defaultValue={false}\n              render={({ onChange, value, name }) => (\n                <Checkbox\n                  id=\"Step2-DetectionCovid\"\n                  label={(\n                    <Trans i18nKey=\"consent:detection\">\n                      I hereby acknowledge and agree that processing shall be done for the purposes indicated above\n                      and, in particular but without limitation, for research and compiling a dataset needed for the\n                      development of artificial intelligence algorithms for device-based COVID-19 detection.\n                    </Trans>\n              )}\n                  name={name}\n                  onChange={e => onChange(e.target.checked)}\n                  value={value}\n                />\n              )}\n            />\n\n            <Controller\n              control={control}\n              name=\"agreedTrainingArtificial\"\n              defaultValue={false}\n              render={({ onChange, value, name }) => (\n                <Checkbox\n                  id=\"Step2-TrainingArtificial\"\n                  label={(\n                    <Trans i18nKey=\"consent:signs\">\n                      I hereby acknowledge and agree that processing shall be done for the purposes indicated above\n                      and, in particular but without limitation, for training artificial intelligence algorithms to\n                      analyze cough audio recordings to better determine signs of COVID-19.\n                    </Trans>\n              )}\n                  name={name}\n                  onChange={e => onChange(e.target.checked)}\n                  value={value}\n                />\n              )}\n            />\n          </>\n        )}\n\n        <Controller\n          control={control}\n          name=\"agreeCollectionAndProcessingInfo\"\n          defaultValue={false}\n          render={({ onChange, value, name }) => (\n            <Checkbox\n              id=\"Step2-CollectionNProcessing\"\n              label={(\n                <Trans i18nKey=\"consent:collection\">\n                  I hereby expressly consent to the collection and processing of my personal information, biometric\n                  information, and health data.\n                </Trans>\n              )}\n              name={name}\n              onChange={e => onChange(e.target.checked)}\n              value={value}\n            />\n          )}\n        />\n\n        <p><ErrorMessage errors={errors} name=\"name\" /></p>\n        {activeStep && (\n          <Portal>\n            <WizardButtons\n              invert\n              leftLabel={t('consent:nextButton')}\n              leftHandler={handleSubmit(onSubmit)}\n              leftDisabled={!isValid}\n            />\n          </Portal>\n        )}\n      </WelcomeContent>\n    </WelcomeStyledFormAlternative>\n  );\n};\n\nexport default React.memo(Step3);\n","import { mapOfConsentFiles } from 'utils/mapOfConsentFiles';\n\ntype Country = keyof typeof mapOfConsentFiles;\n\nexport const buildConsentFilePath = (country:Country, lang:string) => {\n  const basePath = `${process.env.PUBLIC_URL}/static/consent`;\n\n  /* Check if country and lang combination exists in automatically generated \"mapOfConsentFiles\".\n   If not, find default lang document for the country and return it. */\n  const indexOfLang = mapOfConsentFiles[country].consentLang.indexOf(`${lang}.html`);\n\n  if (indexOfLang !== -1) {\n    return `${basePath}/${country}/${mapOfConsentFiles[country].consentLang[indexOfLang]}`;\n  }\n\n  const indexOfDefaultDoc = mapOfConsentFiles[country as Country].consentLang.indexOf('default.html');\n\n  return `${basePath}/${country}/${mapOfConsentFiles[country].consentLang[indexOfDefaultDoc]}`;\n};\n","export { default } from './Step3';\n"],"sourceRoot":""}