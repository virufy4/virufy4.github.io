{"version":3,"file":"component---src-pages-formtellstory-jsx-f6f6cdbb76e8465ada97.js","mappings":"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","sources":["webpack:///./src/components/Button.jsx","webpack:///./src/components/ModalSupporters.jsx","webpack:///./src/components/Overlay.jsx","webpack:///./src/hooks/usePx.js","webpack:///./src/hooks/useScrollLock.js","webpack:///./src/hooks/useEscape.js","webpack:///./src/components/Frame.jsx","webpack:///./src/pages/formtellstory.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby-plugin-intl\";\r\n\r\nconst tailwindClasses =\r\n  \"inline-block text-lg py-3 px-12 no-underline rounded-xl\";\r\n\r\nconst styles = {\r\n  primary: \"text-white bg-blue\",\r\n  secondary: \"text-black bg-white\",\r\n};\r\n\r\nfunction generateClassName(classNameProp, style = \"primary\") {\r\n  return `${tailwindClasses} ${styles[style]} ${classNameProp}`;\r\n}\r\n\r\nexport function ButtonLink({ children, style, ...props }) {\r\n  return (\r\n    <Link {...props} className={generateClassName(props.className, style)}>\r\n      {children}\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default ({ children, style, ...props }) => {\r\n  return (\r\n    <button {...props} className={generateClassName(props.className, style)}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Overlay from \"./Overlay\";\r\nimport { usePx, useScrollLock, useEscape } from \"../hooks\";\r\n\r\nconst HORIZONTAL_PIXEL_PADDING = 32; // each side\r\nconst VERTICAL_PIXEL_PADDING = 48; // each direction\r\n\r\nfunction calculatePosition(triggerRef, scale) {\r\n  // Retrieve element position and dimensions\r\n  const triggerElement = triggerRef.current;\r\n  if (triggerElement === null) {\r\n    return [0, 0, 0, 0];\r\n  }\r\n  const { x, y, width, height } = triggerElement.getBoundingClientRect();\r\n\r\n  // Retrieve window size\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  // Calculate total margins\r\n  const totalHorizontalMargins = HORIZONTAL_PIXEL_PADDING * 2;\r\n  const totalVerticalMargins = VERTICAL_PIXEL_PADDING * 2;\r\n\r\n  // Calculate scaled width and height, clamped by the margins\r\n  const calculatedWidth = Math.min(\r\n    innerWidth - totalHorizontalMargins,\r\n    width * scale\r\n  );\r\n  const calculatedHeight = Math.min(\r\n    innerHeight - totalVerticalMargins,\r\n    height * scale\r\n  );\r\n\r\n  // Calculate changes due to scaling, used for centering modal\r\n  const deltaX = width * scale - width;\r\n  const deltaY = height * scale - height;\r\n\r\n  // Calculate the raw, unclamped x and y values; they are centered by subtracting half the change in x and y\r\n  const rawX = x - deltaX / 2;\r\n  const rawY = y - deltaY / 2;\r\n\r\n  // Calculate x and y position, clamped by the margins on both sides\r\n  const calculatedX = Math.max(\r\n    Math.min(rawX, innerWidth - HORIZONTAL_PIXEL_PADDING - calculatedWidth),\r\n    HORIZONTAL_PIXEL_PADDING\r\n  );\r\n  const calculatedY = Math.max(\r\n    Math.min(rawY, innerHeight - VERTICAL_PIXEL_PADDING - calculatedHeight),\r\n    VERTICAL_PIXEL_PADDING\r\n  );\r\n\r\n  // Return [top, left, width, height]\r\n  return [calculatedY, calculatedX, calculatedWidth, calculatedHeight];\r\n}\r\n\r\nfunction usePositionCalculation(triggerRef, scale, show) {\r\n  // Calculate initial values for state\r\n  const [\r\n    initialTop,\r\n    initialLeft,\r\n    initialWidth,\r\n    initialHeight,\r\n  ] = calculatePosition(triggerRef, scale);\r\n\r\n  // Initialize state hooks\r\n  const [top, setTop] = usePx(initialTop);\r\n  const [left, setLeft] = usePx(initialLeft);\r\n  const [width, setWidth] = usePx(initialWidth);\r\n  const [height, setHeight] = usePx(initialHeight);\r\n\r\n  // Watch the trigger element's position\r\n  useEffect(() => {\r\n    function handleReposition() {\r\n      const [top, left, width, height] = calculatePosition(triggerRef, scale);\r\n\r\n      setTop(top);\r\n      setLeft(left);\r\n      setWidth(width);\r\n      setHeight(height);\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", handleReposition);\r\n    window.addEventListener(\"resize\", handleReposition);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleReposition);\r\n      window.removeEventListener(\"resize\", handleReposition);\r\n    };\r\n  }, [triggerRef, scale, setTop, setLeft, setWidth, setHeight]);\r\n\r\n  // Re-calculate the position when shown\r\n  useEffect(() => {\r\n    const [top, left, width, height] = calculatePosition(triggerRef, scale);\r\n\r\n    setTop(top);\r\n    setLeft(left);\r\n    setWidth(width);\r\n    setHeight(height);\r\n  }, [triggerRef, scale, setTop, setLeft, setWidth, setHeight, show]);\r\n\r\n  return [top, left, width, height];\r\n}\r\n\r\nfunction ModalFaqs({ triggerRef, scale, children, show, onClose }) {\r\n  if (!triggerRef || !scale)\r\n    throw new Error(\"Trigger ref and scale props must be set\");\r\n\r\n  // Calculate the modal position on resize and scroll\r\n  const [top, left, width, height] = usePositionCalculation(\r\n    triggerRef,\r\n    scale,\r\n    show\r\n  );\r\n\r\n  // Lock scroll when the modal is shown\r\n  useScrollLock(show);\r\n\r\n  // Handle escape-to-close when the modal is visible\r\n  useEscape(show, onClose);\r\n\r\n  const modalRef = useRef(null);\r\n  function closeIfModalWasNotTarget(event) {\r\n    const modalElement = modalRef.current;\r\n\r\n    if (event.target !== modalElement && !modalElement.contains(event.target))\r\n      onClose();\r\n  }\r\n\r\n  return (\r\n    <Overlay active={show} onClick={closeIfModalWasNotTarget}>\r\n      <div className=\"md:mx-72 md:px-8 py-20\">\r\n        <div\r\n          className=\"fixed xs:absolute bg-white p-6 shadow-2xl overflow-y-auto rounded-2xl  md:w-2/4 md:h-4/5\"\r\n          ref={modalRef}\r\n        >\r\n          <div className=\"flex flex-row-reverse \">\r\n            <button className=\"black text-black \" onClick={onClose}>\r\n              &#x2715;\r\n            </button>\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n}\r\n\r\nModalFaqs.propTypes = {\r\n  triggerRef: PropTypes.object.isRequired,\r\n  scale: PropTypes.number.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalFaqs;\r\n","import React from \"react\";\r\n\r\nexport default function Overlay({ active, ...props }) {\r\n  const hasChildren = typeof props.children !== \"undefined\";\r\n\r\n  return (\r\n    <>\r\n      {active && (\r\n        <div className=\"bg-black bg-opacity-20 fixed inset-0 z-10\" {...props}>\r\n          {hasChildren && <div className=\"z-20\">{props.children}</div>}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function usePx(initialValue) {\r\n  const [pixelValue, setPixelValue] = useState(initialValue);\r\n\r\n  function setNumericValue(value) {\r\n    setPixelValue(value + \"px\");\r\n  }\r\n\r\n  return [pixelValue, setNumericValue];\r\n}\r\n","import { useRef, useCallback, useEffect } from \"react\";\r\n\r\nexport default function useScrollLock(lock) {\r\n  const isInitialMount = useRef(true);\r\n\r\n  const lockScroll = useCallback(() => {\r\n    // Override CSS\r\n    document.body.style.height = \"100%\";\r\n    document.body.style.overflowY = \"hidden\";\r\n  }, []);\r\n\r\n  const restoreScroll = useCallback(() => {\r\n    // Restore CSS\r\n    document.body.style.height = \"\";\r\n    document.body.style.overflowY = \"\";\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Initially, only lock if `lock` is true, otherwise do nothing\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n\r\n      if (lock) lockScroll();\r\n\r\n      return;\r\n    }\r\n\r\n    // Then once the lock value changes, respond with both options\r\n    if (lock) {\r\n      lockScroll();\r\n    } else {\r\n      restoreScroll();\r\n    }\r\n\r\n    // And restore scroll when unmounted\r\n    return restoreScroll;\r\n  }, [lock, lockScroll, restoreScroll]);\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport default function useEscape(when, handler) {\r\n  useEffect(() => {\r\n    // Call `handler` if the escape key is pressed\r\n    function handleKeydown(event) {\r\n      if (event.keyCode === 27) {\r\n        // 27 -> escape\r\n        handler();\r\n      }\r\n    }\r\n\r\n    // Set a document listener for keydown if `when` is true\r\n    if (when) {\r\n      document.addEventListener(\"keydown\", handleKeydown);\r\n      // Otherwise remove the event listener\r\n    } else {\r\n      document.removeEventListener(\"keydown\", handleKeydown);\r\n    }\r\n\r\n    // Cleanup the document listener when unmounted\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeydown);\r\n    };\r\n  }, [when, handler]);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useIntl } from \"gatsby-plugin-intl\";\r\nimport ModalSupporters from \"./ModalSupporters\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport GatsbyImage from \"gatsby-image\";\r\nimport { ButtonLink } from \"../components/Button\";\r\n\r\nfunction FrameCallStory() {\r\n  const intl = useIntl();\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allFile(\r\n        filter: { relativePath: { regex: \"/images\\\\/get-involved-page\\\\/.*\\\\.((png)|(jpg)|(jpeg))/\"} }\r\n      )\r\n       {\r\n        edges {\r\n          node {\r\n            name\r\n            childImageSharp {\r\n              fluid(maxWidth: 1900, quality: 80)  {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const images = {};\r\n\r\n  data.allFile.edges.forEach(\r\n    (edge) => (images[edge.node.name] = edge.node.childImageSharp.fluid)\r\n  );\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const triggerRef = React.useRef(null);\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"flex flex-col rounded-2xl cursor-pointer transition-shadow hover:shadow-xl md:overflow-scroll\"\r\n        onClick={handleClick}\r\n        ref={triggerRef}\r\n      >\r\n        {intl.formatMessage({ id: \"becomeaSupporter.button\" })}\r\n      </button>\r\n      <ModalSupporters\r\n        show={open}\r\n        triggerRef={triggerRef}\r\n        scale={1.0}\r\n        onClose={handleClose}\r\n      >\r\n        <div className=\"\">\r\n          <GatsbyImage\r\n            fluid={images[\"background-modaltellsrory\"]}\r\n            imgStyle={{ objectFit: \"contain\" }}\r\n            className=\"h-44\"\r\n          />\r\n        </div>\r\n        <p className=\"font-bold pb-4 text-center text-black\">\r\n          {intl.formatMessage({\r\n            id: `getInvolved.joinusTellStory.yourStory`,\r\n          })}\r\n        </p>\r\n        <p className=\"py-8  text-black\">\r\n          {intl.formatMessage({\r\n            id: `getInvolved.joinusTellStory.thankyou`,\r\n          })}\r\n        </p>\r\n\r\n        <div className=\"flex justify-center rounded-xl pt-8 mx-12\">\r\n          <ButtonLink\r\n            to=\"/our-approach#tech-behind\"\r\n            className=\"px-18 py-4 text-lg\"\r\n          >\r\n            {intl.formatMessage({\r\n              id: `getInvolved.joinusTellStory.learnmore`,\r\n            })}\r\n          </ButtonLink>\r\n        </div>\r\n      </ModalSupporters>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FrameCallStory;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport FrameCallStory from \"../components/Frame\";\r\nimport { useIntl } from \"gatsby-plugin-intl\";\r\n\r\nfunction FormTellStory() {\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [story, setstory] = useState(\"\");\r\n  const [fileupload, setFileupload] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const intl = useIntl();\r\n\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    story: \"\",\r\n    fileupload: \"\",\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    console.log(event.target.name);\r\n    console.log(event.target.value);\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const sendData = (event) => {\r\n    event.preventDefault();\r\n    console.log(\r\n      \"enviando datos...\" +\r\n        data.email +\r\n        \" \" +\r\n        data.name +\r\n        \" \" +\r\n        data.story +\r\n        \" \" +\r\n        data.fileupload\r\n    );\r\n  };\r\n  // const handle = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   const data = {\r\n  //     email,\r\n  //     name,\r\n  //     story,\r\n  //     fileupload,\r\n  //   };\r\n  //   setgetData([...getData, data]);\r\n  //   setEmail(\"\");\r\n  //   setName(\"\");\r\n  //   setstory(\"\");\r\n  //   setFileupload(\"\");\r\n  // };\r\n\r\n  async function handleSignIn(event) {\r\n    event.preventDefault();\r\n    setErrorMessage(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      setErrorMessage(\"There was an error\");\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setErrorMessage(\"There was an error\");\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleClick() {\r\n    setOpen(true);\r\n  }\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className=\"overflow-visible flex flex-col items-center justify-center text-center text-black\">\r\n        <form\r\n          className=\"m-8 md:px-6 pb-10 overflow \"\r\n          onSubmit={sendData}\r\n          autoComplete=\"off\"\r\n        >\r\n          <input\r\n            className=\"mt-2 w-full p-2 border-gray-500 shadow-lg focus:border-blue\"\r\n            required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder={intl.formatMessage({\r\n              id: \"becomeaSupporter.inputemail\",\r\n            })}\r\n            // value={email}\r\n            onChange={handleInputChange}\r\n          ></input>\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"mt-2 w-full p-2 border-gray-500 shadow-lg focus:border-blue\"\r\n            required\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder={intl.formatMessage({\r\n              id: \"becomeaSupporter.inputname\",\r\n            })}\r\n            id=\"name\"\r\n            // value={name}\r\n            onChange={handleInputChange}\r\n          ></input>\r\n\r\n          <textarea\r\n            className=\"mt-2 w-full p-2 h-44 border-gray-500 shadow-lg focus:border-blue\"\r\n            required\r\n            type=\"text\"\r\n            name=\"story\"\r\n            id=\"story\"\r\n            placeholder={intl.formatMessage({\r\n              id: \"becomeaSupporter.inputstory\",\r\n            })}\r\n            // value={story}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mt-2 w-full p-2 border-gray-500 shadow-lg focus:border-blue\"></label>\r\n            <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\r\n              <div className=\"space-y-1 text-center\">\r\n                <div className=\"flex text-sm \">\r\n                  <label\r\n                    htmlFor=\"file-upload\"\r\n                    className=\"cursor-pointer bg-white rounded-md font-medium  focus-within:ring-gray\"\r\n                  >\r\n                    <span className=\"text-gray-500 text-lg font-medium\">\r\n                      {intl.formatMessage({\r\n                        id: \"becomeaSupporter.inputupLoadyourPicture\",\r\n                      })}\r\n                    </span>\r\n                    <input\r\n                      className=\"sr-only\"\r\n                      required\r\n                      id=\"file-upload\"\r\n                      name=\"fileupload\"\r\n                      type=\"file\"\r\n                      value={fileupload}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"\">\r\n            <button\r\n              className={`\r\n              bg-blue  border-2 rounded-xl text-white  px-6 my-4  py-2\r\n            ${loading ? \"bg-blue text-black animate-pulse\" : \"\"}\r\n          `}\r\n              disabled={loading}\r\n              onClick={handleSignIn}\r\n              type=\"submit\"\r\n            >\r\n              <FrameCallStory />\r\n            </button>\r\n            <p className=\"text-blue\">{errorMessage}</p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FormTellStory;\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["styles","primary","secondary","generateClassName","classNameProp","style","tailwindClasses","ButtonLink","children","props","Link","className","calculatePosition","triggerRef","scale","triggerElement","current","getBoundingClientRect","x","y","width","height","window","innerWidth","innerHeight","calculatedWidth","Math","min","HORIZONTAL_PIXEL_PADDING","calculatedHeight","VERTICAL_PIXEL_PADDING","rawX","rawY","calculatedX","max","show","onClose","Error","initialTop","initialLeft","initialWidth","initialHeight","usePx","top","setTop","left","setLeft","setWidth","setHeight","useEffect","handleReposition","addEventListener","removeEventListener","usePositionCalculation","useScrollLock","useEscape","modalRef","useRef","active","onClick","event","modalElement","target","contains","ref","Overlay","hasChildren","initialValue","useState","pixelValue","setPixelValue","value","lock","isInitialMount","lockScroll","useCallback","document","body","overflowY","restoreScroll","when","handler","handleKeydown","keyCode","intl","useIntl","data","useStaticQuery","images","allFile","edges","forEach","edge","node","name","childImageSharp","fluid","open","setOpen","React","formatMessage","id","ModalSupporters","imgStyle","objectFit","Button","to","fileupload","loading","setLoading","errorMessage","setErrorMessage","email","story","setData","handleInputChange","console","log","preventDefault","err","Fragment","onSubmit","autoComplete","required","type","placeholder","onChange","htmlFor","disabled","Frame","_objectWithoutPropertiesLoose","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}