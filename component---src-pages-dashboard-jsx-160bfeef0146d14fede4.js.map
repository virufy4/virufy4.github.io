{"version":3,"file":"component---src-pages-dashboard-jsx-160bfeef0146d14fede4.js","mappings":"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","sources":["webpack:///./src/script/maps/countriies.js","webpack:///./src/services/CoughService.js","webpack:///./src/pages/MapAmerica.jsx","webpack:///./src/pages/dashboard.jsx"],"sourcesContent":["export const countryCode = {\n  [\"Afghanistan\"]: \"AF\",\n  [\"Ã…land Islands\"]: \"AX\",\n  [\"Albania\"]: \"AL\",\n  [\"Algeria\"]: \"DZ\",\n  [\"American Samoa\"]: \"AS\",\n  [\"AndorrA\"]: \"AD\",\n  [\"Angola\"]: \"AO\",\n  [\"Anguilla\"]: \"AI\",\n  [\"Antarctica\"]: \"AQ\",\n  [\"Antigua and Barbuda\"]: \"AG\",\n  [\"Argentina\"]: \"AR\",\n  [\"Armenia\"]: \"AM\",\n  [\"Aruba\"]: \"AW\",\n  [\"Australia\"]: \"AU\",\n  [\"Austria\"]: \"AT\",\n  [\"Azerbaijan\"]: \"AZ\",\n  [\"Bahamas\"]: \"BS\",\n  [\"Bahrain\"]: \"BH\",\n  [\"Bangladesh\"]: \"BD\",\n  [\"Barbados\"]: \"BB\",\n  [\"Belarus\"]: \"BY\",\n  [\"Belgium\"]: \"BE\",\n  [\"Belize\"]: \"BZ\",\n  [\"Benin\"]: \"BJ\",\n  [\"Bermuda\"]: \"BM\",\n  [\"Bhutan\"]: \"BT\",\n  [\"Bolivia\"]: \"BO\",\n  [\"Bosnia and Herzegovina\"]: \"BA\",\n  [\"Botswana\"]: \"BW\",\n  [\"Bouvet Island\"]: \"BV\",\n  [\"Brazil\"]: \"BR\",\n  [\"British Indian Ocean Territory\"]: \"IO\",\n  [\"Brunei Darussalam\"]: \"BN\",\n  [\"Bulgaria\"]: \"BG\",\n  [\"Burkina Faso\"]: \"BF\",\n  [\"Burundi\"]: \"BI\",\n  [\"Cambodia\"]: \"KH\",\n  [\"Cameroon\"]: \"CM\",\n  [\"Canada\"]: \"CA\",\n  [\"Cape Verde\"]: \"CV\",\n  [\"Cayman Islands\"]: \"KY\",\n  [\"Central African Republic\"]: \"CF\",\n  [\"Chad\"]: \"TD\",\n  [\"Chile\"]: \"CL\",\n  [\"China\"]: \"CN\",\n  [\"Christmas Island\"]: \"CX\",\n  [\"Cocos (Keeling) Islands\"]: \"CC\",\n  [\"Colombia\"]: \"CO\",\n  [\"Comoros\"]: \"KM\",\n  [\"Congo\"]: \"CG\",\n  [\"Congo, The Democratic Republic of the\"]: \"CD\",\n  [\"Cook Islands\"]: \"CK\",\n  [\"Costa Rica\"]: \"CR\",\n  [\"Cote D'Ivoire\"]: \"CI\",\n  [\"Croatia\"]: \"HR\",\n  [\"Cuba\"]: \"CU\",\n  [\"Cyprus\"]: \"CY\",\n  [\"Czech Republic\"]: \"CZ\",\n  [\"Denmark\"]: \"DK\",\n  [\"Djibouti\"]: \"DJ\",\n  [\"Dominica\"]: \"DM\",\n  [\"Dominican Republic\"]: \"DO\",\n  [\"Ecuador\"]: \"EC\",\n  [\"Egypt\"]: \"EG\",\n  [\"El Salvador\"]: \"SV\",\n  [\"Equatorial Guinea\"]: \"GQ\",\n  [\"Eritrea\"]: \"ER\",\n  [\"Estonia\"]: \"EE\",\n  [\"Ethiopia\"]: \"ET\",\n  [\"Falkland Islands (Malvinas)\"]: \"FK\",\n  [\"Faroe Islands\"]: \"FO\",\n  [\"Fiji\"]: \"FJ\",\n  [\"Finland\"]: \"FI\",\n  [\"France\"]: \"FR\",\n  [\"French Guiana\"]: \"GF\",\n  [\"French Polynesia\"]: \"PF\",\n  [\"French Southern Territories\"]: \"TF\",\n  [\"Gabon\"]: \"GA\",\n  [\"Gambia\"]: \"GM\",\n  [\"Georgia\"]: \"GE\",\n  [\"Germany\"]: \"DE\",\n  [\"Ghana\"]: \"GH\",\n  [\"Gibraltar\"]: \"GI\",\n  [\"Greece\"]: \"GR\",\n  [\"Greenland\"]: \"GL\",\n  [\"Grenada\"]: \"GD\",\n  [\"Guadeloupe\"]: \"GP\",\n  [\"Guam\"]: \"GU\",\n  [\"Guatemala\"]: \"GT\",\n  [\"Guernsey\"]: \"GG\",\n  [\"Guinea\"]: \"GN\",\n  [\"Guinea-Bissau\"]: \"GW\",\n  [\"Guyana\"]: \"GY\",\n  [\"Haiti\"]: \"HT\",\n  [\"Heard Island and Mcdonald Islands\"]: \"HM\",\n  [\"Holy See (Vatican City State)\"]: \"VA\",\n  [\"Honduras\"]: \"HN\",\n  [\"Hong Kong\"]: \"HK\",\n  [\"Hungary\"]: \"HU\",\n  [\"Iceland\"]: \"IS\",\n  [\"India\"]: \"IN\",\n  [\"Indonesia\"]: \"ID\",\n  [\"Iran, Islamic Republic Of\"]: \"IR\",\n  [\"Iraq\"]: \"IQ\",\n  [\"Ireland\"]: \"IE\",\n  [\"Isle of Man\"]: \"IM\",\n  [\"Israel\"]: \"IL\",\n  [\"Italy\"]: \"IT\",\n  [\"Jamaica\"]: \"JM\",\n  [\"Japan\"]: \"JP\",\n  [\"Jersey\"]: \"JE\",\n  [\"Jordan\"]: \"JO\",\n  [\"Kazakhstan\"]: \"KZ\",\n  [\"Kenya\"]: \"KE\",\n  [\"Kiribati\"]: \"KI\",\n  [\"Korea, Democratic People'S Republic of\"]: \"KP\",\n  [\"Korea, Republic of\"]: \"KR\",\n  [\"Kuwait\"]: \"KW\",\n  [\"Kyrgyzstan\"]: \"KG\",\n  [\"Lao People'S Democratic Republic\"]: \"LA\",\n  [\"Latvia\"]: \"LV\",\n  [\"Lebanon\"]: \"LB\",\n  [\"Lesotho\"]: \"LS\",\n  [\"Liberia\"]: \"LR\",\n  [\"Libyan Arab Jamahiriya\"]: \"LY\",\n  [\"Liechtenstein\"]: \"LI\",\n  [\"Lithuania\"]: \"LT\",\n  [\"Luxembourg\"]: \"LU\",\n  [\"Macao\"]: \"MO\",\n  [\"Macedonia, The Former Yugoslav Republic of\"]: \"MK\",\n  [\"Madagascar\"]: \"MG\",\n  [\"Malawi\"]: \"MW\",\n  [\"Malaysia\"]: \"MY\",\n  [\"Maldives\"]: \"MV\",\n  [\"Mali\"]: \"ML\",\n  [\"Malta\"]: \"MT\",\n  [\"Marshall Islands\"]: \"MH\",\n  [\"Martinique\"]: \"MQ\",\n  [\"Mauritania\"]: \"MR\",\n  [\"Mauritius\"]: \"MU\",\n  [\"Mayotte\"]: \"YT\",\n  [\"Mexico\"]: \"MX\",\n  [\"Micronesia, Federated States of\"]: \"FM\",\n  [\"Moldova, Republic of\"]: \"MD\",\n  [\"Monaco\"]: \"MC\",\n  [\"Mongolia\"]: \"MN\",\n  [\"Montserrat\"]: \"MS\",\n  [\"Morocco\"]: \"MA\",\n  [\"Mozambique\"]: \"MZ\",\n  [\"Myanmar\"]: \"MM\",\n  [\"Namibia\"]: \"NA\",\n  [\"Nauru\"]: \"NR\",\n  [\"Nepal\"]: \"NP\",\n  [\"Netherlands\"]: \"NL\",\n  [\"Netherlands Antilles\"]: \"AN\",\n  [\"New Caledonia\"]: \"NC\",\n  [\"New Zealand\"]: \"NZ\",\n  [\"Nicaragua\"]: \"NI\",\n  [\"Niger\"]: \"NE\",\n  [\"Nigeria\"]: \"NG\",\n  [\"Niue\"]: \"NU\",\n  [\"Norfolk Island\"]: \"NF\",\n  [\"Northern Mariana Islands\"]: \"MP\",\n  [\"Norway\"]: \"NO\",\n  [\"Oman\"]: \"OM\",\n  [\"Pakistan\"]: \"PK\",\n  [\"Palau\"]: \"PW\",\n  [\"Palestinian Territory, Occupied\"]: \"PS\",\n  [\"Panama\"]: \"PA\",\n  [\"Papua New Guinea\"]: \"PG\",\n  [\"Paraguay\"]: \"PY\",\n  [\"Peru\"]: \"PE\",\n  [\"Philippines\"]: \"PH\",\n  [\"Pitcairn\"]: \"PN\",\n  [\"Poland\"]: \"PL\",\n  [\"Portugal\"]: \"PT\",\n  [\"Puerto Rico\"]: \"PR\",\n  [\"Qatar\"]: \"QA\",\n  [\"Reunion\"]: \"RE\",\n  [\"Romania\"]: \"RO\",\n  [\"Russian Federation\"]: \"RU\",\n  [\"RWANDA\"]: \"RW\",\n  [\"Saint Helena\"]: \"SH\",\n  [\"Saint Kitts and Nevis\"]: \"KN\",\n  [\"Saint Lucia\"]: \"LC\",\n  [\"Saint Pierre and Miquelon\"]: \"PM\",\n  [\"Saint Vincent and the Grenadines\"]: \"VC\",\n  [\"Samoa\"]: \"WS\",\n  [\"San Marino\"]: \"SM\",\n  [\"Sao Tome and Principe\"]: \"ST\",\n  [\"Saudi Arabia\"]: \"SA\",\n  [\"Senegal\"]: \"SN\",\n  [\"Serbia and Montenegro\"]: \"CS\",\n  [\"Seychelles\"]: \"SC\",\n  [\"Sierra Leone\"]: \"SL\",\n  [\"Singapore\"]: \"SG\",\n  [\"Slovakia\"]: \"SK\",\n  [\"Slovenia\"]: \"SI\",\n  [\"Solomon Islands\"]: \"SB\",\n  [\"Somalia\"]: \"SO\",\n  [\"South Africa\"]: \"ZA\",\n  [\"South Georgia and the South Sandwich Islands\"]: \"GS\",\n  [\"Spain\"]: \"ES\",\n  [\"Sri Lanka\"]: \"LK\",\n  [\"Sudan\"]: \"SD\",\n  [\"Suriname\"]: \"SR\",\n  [\"Svalbard and Jan Mayen\"]: \"SJ\",\n  [\"Swaziland\"]: \"SZ\",\n  [\"Sweden\"]: \"SE\",\n  [\"Switzerland\"]: \"CH\",\n  [\"Syrian Arab Republic\"]: \"SY\",\n  [\"Taiwan, Province of China\"]: \"TW\",\n  [\"Tajikistan\"]: \"TJ\",\n  [\"Tanzania, United Republic of\"]: \"TZ\",\n  [\"Thailand\"]: \"TH\",\n  [\"Timor-Leste\"]: \"TL\",\n  [\"Togo\"]: \"TG\",\n  [\"Tokelau\"]: \"TK\",\n  [\"Tonga\"]: \"TO\",\n  [\"Trinidad and Tobago\"]: \"TT\",\n  [\"Tunisia\"]: \"TN\",\n  [\"Turkey\"]: \"TR\",\n  [\"Turkmenistan\"]: \"TM\",\n  [\"Turks and Caicos Islands\"]: \"TC\",\n  [\"Tuvalu\"]: \"TV\",\n  [\"Uganda\"]: \"UG\",\n  [\"Ukraine\"]: \"UA\",\n  [\"United Arab Emirates\"]: \"AE\",\n  [\"United Kingdom\"]: \"GB\",\n  [\"United States\"]: \"US\",\n  [\"United States Minor Outlying Islands\"]: \"UM\",\n  [\"Uruguay\"]: \"UY\",\n  [\"Uzbekistan\"]: \"UZ\",\n  [\"Vanuatu\"]: \"VU\",\n  [\"Venezuela\"]: \"VE\",\n  [\"Viet Nam\"]: \"VN\",\n  [\"Virgin Islands, British\"]: \"VG\",\n  [\"Virgin Islands, U.S.\"]: \"VI\",\n  [\"Wallis and Futuna\"]: \"WF\",\n  [\"Western Sahara\"]: \"EH\",\n  [\"Yemen\"]: \"YE\",\n  [\"Zambia\"]: \"ZM\",\n  [\"Zimbabwe\"]: \"ZW\",\n};\n","const url =\n  \"https://spreadsheets.google.com/feeds/cells/1PnsTLMpNN9WsffMnmmTMp-Na7zZlbc1kihDsh7m0mLo/7/public/full?alt=json\";\n\nexport async function getData() {\n  try {\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      const error = await response.json();\n\n      throw new Error(error.message);\n    }\n    return await response.json();\n  } catch (err) {\n    if (err.name !== \"AbortError\") {\n      throw err;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport HighMaps from \"highcharts/highmaps\";\nimport { useIntl } from \"gatsby-plugin-intl\";\n\nimport americalMap from \"../script/maps/america-map\";\nimport { countryCode } from \"../script/maps/countriies\";\n\n// Service\nimport { getData } from \"../services/CoughService\";\n\n// const intl = useIntl();\n\nclass MapAmerica extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        title: {\n          text: \"\",\n        },\n        chart: {\n          spacingTop: 0,\n          marginTop: 0,\n          height: 100 + \"%\",\n        },\n        responsives: {\n          rules: [\n            {\n              condition: {\n                minHeight: 600,\n              },\n              chart: {\n                height: (14 / 16) * 100 + \"%\",\n              },\n              chartOptions: {\n                legend: {\n                  align: \"center\",\n                  verticalAlign: \"bottom\",\n                  layout: \"horizontal\",\n                },\n              },\n            },\n          ],\n        },\n        plotOptions: {\n          map: {\n            states: {\n              hover: {\n                color: \"#00A788\",\n                enabled: false,\n              },\n            },\n          },\n        },\n        colorAxis: {\n          min: 0,\n          minColor: \"#E6E7E8\",\n          maxColor: \"#00A788\",\n        },\n        tooltip: {\n          formatter: function (tooltip) {\n            // Donated coughs\n            return `<b>${this.key}:</b> <br>\n              ${props.intl.formatMessage({\n                id: \"dashboard.donatedCoughs\",\n              })}: <b>${this.point.value}</b> <br>`;\n          },\n        },\n        legend: {\n          align: \"center\",\n          verticalAlign: \"bottom\",\n          layout: \"horizontal\",\n        },\n        credits: {\n          enabled: false,\n        },\n        exporting: {\n          enabled: false,\n        },\n        subtitle: {\n          text: \"\",\n          floating: true,\n          align: \"right\",\n          y: 50,\n          style: {\n            fontSize: \"16px\",\n          },\n        },\n        series: [\n          {\n            mapData: americalMap,\n            data: [],\n            name: \"\",\n            dataLabels: {\n              enabled: false,\n              format: \"{point.name}\",\n            },\n          },\n        ],\n        mapNavigation: {\n          enabled: false,\n          buttonOptions: {\n            verticalAlign: \"bottom\",\n          },\n        },\n      },\n    };\n  }\n\n  dataToCountries = (data) => {\n    return data.feed.entry\n      .reduce((acc, item, i) => {\n        if (i > 1) {\n          if (i % 2 === 0) {\n            return [\n              ...acc,\n              {\n                name:\n                  data.feed.entry[i].gs$cell.numericValue ||\n                  data.feed.entry[i].gs$cell.$t,\n                value: parseInt(data.feed.entry[i + 1].gs$cell.numericValue),\n              },\n            ];\n          }\n          return acc;\n        }\n        return acc;\n      }, [])\n      .map((item) => {\n        if (countryCode[item.name]) {\n          return [countryCode[item.name].toLowerCase(), item.value];\n        } else {\n          return [item.name, item.value];\n        }\n      });\n  };\n  async fetch() {\n    const data = await getData();\n    const countries = this.dataToCountries(data);\n\n    const options = {\n      ...this.state.options,\n      series: [\n        {\n          ...this.state.options.series[0],\n          data: countries,\n        },\n      ],\n    };\n    this.chart = new HighMaps[\"Map\"](findDOMNode(this), options);\n    setTimeout(this.fetch.bind(this), 10000); // Refresh data each 10 seconds\n  }\n\n  componentDidMount() {\n    this.fetch(this);\n  }\n\n  componentWillUnmount() {\n    this.chart && this.chart.destroy();\n  }\n\n  render() {\n    return <div />;\n  }\n}\n\nexport default MapAmerica;\n","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { useIntl } from \"gatsby-plugin-intl\";\nimport SEO from \"../components/SEO\";\nimport MapAmerica from \"./MapAmerica\";\n\nexport default function Dashboard({ data }) {\n  const intl = useIntl();\n\n  return (\n    <Layout>\n      <SEO title=\"Dashboard | Virufy\" />\n\n      <div className=\"px-4 lg:px-0 lg:w-4/5 lg:mx-auto\">\n        <div className=\"grid mb-4 xl:px-0 justify-items-center grid-col-1 gap-16 overflow-hidden\">\n          <div className=\"mb-4 justify-self-start xl:mb-0 2l:mr-9 pt-10 xs:pt-8\">\n            <h1\n              className=\"font-bold mb-8 \"\n              dangerouslySetInnerHTML={{\n                __html: intl.formatMessage({ id: \"dashboard.header\" }),\n              }}\n            />\n            <p\n              className=\"mb-8 xl:pr-14 max-w-screen-lg\"\n              dangerouslySetInnerHTML={{\n                __html: intl.formatMessage({ id: \"dashboard.sub-header\" }),\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <iframe\n        src={`https://virufy-dashboard.vercel.app/${\n          intl.locale == \"ja\" ? \"jp\" : intl.locale\n        }`}\n        className=\"w-full min-h-screen border-none\"\n      />\n      <div className=\"flex flex-col items-center justify-center mt-8 m-2\">\n        <p className=\"text-xl text-center font-semibold mb-4\">\n          {intl.formatMessage({ id: \"dashboard.cta\" })}\n        </p>\n        <a\n          className=\"vf-btn-primary mx-auto my-4 px-6 py-2 inline-block border-2 border-blue\"\n          target=\"_blank\"\n          href={\"/app\"}\n        >\n          {intl.formatMessage({ id: \"dashboard.button\" })}\n        </a>\n      </div>\n    </Layout>\n  );\n}\n"],"names":["countryCode","async","getData","response","fetch","ok","error","json","Error","message","err","name","_Component","MapAmerica","props","_this","call","dataToCountries","data","feed","entry","reduce","acc","item","i","concat","_toConsumableArray","gs$cell","numericValue","$t","value","parseInt","map","toLowerCase","state","options","title","text","chart","spacingTop","marginTop","height","responsives","rules","condition","minHeight","chartOptions","legend","align","verticalAlign","layout","plotOptions","states","hover","color","enabled","colorAxis","min","minColor","maxColor","tooltip","formatter","this","key","intl","formatMessage","id","point","credits","exporting","subtitle","floating","y","style","fontSize","series","mapData","americalMap","dataLabels","format","mapNavigation","buttonOptions","_inheritsLoose","_proto","prototype","countries","HighMaps","findDOMNode","setTimeout","bind","componentDidMount","componentWillUnmount","destroy","render","React","Component","Dashboard","_ref","useIntl","Layout","SEO","className","dangerouslySetInnerHTML","__html","src","locale","target","href"],"sourceRoot":""}