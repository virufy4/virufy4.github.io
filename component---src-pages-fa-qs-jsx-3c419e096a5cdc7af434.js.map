{"version":3,"file":"component---src-pages-fa-qs-jsx-3c419e096a5cdc7af434.js","mappings":"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","sources":["webpack:///./src/components/meta/FAQsMeta.jsx","webpack:///./src/pages/FAQs.jsx"],"sourcesContent":["import React from \"react\";\nimport { useIntl } from \"gatsby-plugin-intl\";\nimport { Helmet } from \"react-helmet\";\n\nfunction FAQsMeta() {\n  const intl = useIntl();\n  return (\n    <Helmet>\n      <meta\n        name=\"description\"\n        content={intl.formatMessage({ id: `faqstext.meta` })}\n      />\n      <link\n        rel=\"alternate\"\n        hreflang=\"x-default\"\n        href=\"https://virufy.org/en/FAQs/\"\n      />\n      <link rel=\"alternate\" hreflang=\"en\" href=\"https://virufy.org/en/FAQs/\" />\n      <link rel=\"alternate\" hreflang=\"es\" href=\"https://virufy.org/es/FAQs/\" />\n      <link rel=\"alternate\" hreflang=\"pt\" href=\"https://virufy.org/pt/FAQs/\" />\n      <link rel=\"alternate\" hreflang=\"ja\" href=\"https://virufy.org/ja/FAQs/\" />\n    </Helmet>\n  );\n}\n\nexport default FAQsMeta;\n","import React, { useState } from \"react\";\nimport { graphql } from \"gatsby\";\nimport { useIntl } from \"gatsby-plugin-intl\";\nimport {\n  questionsVirufyApp,\n  questionsAboutVirufy,\n  questionsAboutAI,\n  questionsFinances,\n  questionsPrivacy,\n  questionsOthers,\n} from \"../data/our-approach/faq\";\nimport SEO from \"../components/SEO\";\nimport Layout from \"../components/Layout\";\nimport Faqstext from \"./Faqstext\";\nimport FAQsMeta from \"../components/meta/FAQsMeta\";\n\nexport const query = graphql`\n  {\n    allFile(filter: { relativeDirectory: { eq: \"images/our-approach-page\" } }) {\n      edges {\n        node {\n          relativePath\n          name\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst tabs = {\n  virufyApp: \"VirufyApp\",\n  aboutVirufy: \"About Virufy\",\n  aboutAI: \"About AI\",\n  aboutFinances: \"Finances\",\n  privacy: \"Privacy\",\n  other: \"Other\",\n};\n\nfunction Faqs() {\n  const intl = useIntl();\n  // const breakpoints = useBreakpoint();\n  const [selectedTab, setSelectedTab] = useState(tabs.virufyApp);\n\n  const selectedTabClasses =\n    \"font-medium font-semibold text-lg bg-white border-b-4 border-solid border-green focus:outline-none active:outline-none xs:center\";\n  const unselectedTabClasses =\n    \"bg-white text-gray-500 text-lg font-semibold xs:center xs:py-2.5\";\n\n  return (\n    <Layout className=\"font-montserrat\">\n      <SEO title={intl.formatMessage({ id: `faqstext.tabFaqs.pageTitle` })} />\n      <FAQsMeta />\n\n      <h1 className=\"font-heading md:mb-6 lg:mb-4 md:ml-20  p-8\">\n        {intl.formatMessage({ id: \"faqstext.tabFaqs.title\" })}\n      </h1>\n\n      {/* Top fold */}\n      <div className=\"text-center md:pl-18 md:pt-6 xs:px-10 xs:mx-12\">\n        <button\n          onClick={() => setSelectedTab(tabs.virufyApp)}\n          className={`${\n            selectedTab === tabs.virufyApp\n              ? selectedTabClasses\n              : unselectedTabClasses\n          } md:mr-16`}\n        >\n          <h2>\n            <small>\n              {intl.formatMessage({\n                id: \"faqstext.tabFaqs.virufyApp\",\n              })}\n            </small>\n          </h2>\n        </button>\n        <button\n          onClick={() => setSelectedTab(tabs.aboutVirufy)}\n          className={`${\n            selectedTab === tabs.aboutVirufy\n              ? selectedTabClasses\n              : unselectedTabClasses\n          } md:mr-16 xs:px-8`}\n        >\n          <h2>\n            <small>\n              {intl.formatMessage({\n                id: \"faqstext.tabFaqs.aboutVirufy\",\n              })}\n            </small>\n          </h2>\n        </button>\n\n        <button\n          onClick={() => setSelectedTab(tabs.aboutAI)}\n          className={`${\n            selectedTab === tabs.aboutAI\n              ? selectedTabClasses\n              : unselectedTabClasses\n          } md:mr-16 xs:px-8`}\n        >\n          <h2>\n            <small>\n              {intl.formatMessage({\n                id: \"faqstext.tabFaqs.aboutAI\",\n              })}\n            </small>\n          </h2>\n        </button>\n        <button\n          onClick={() => setSelectedTab(tabs.aboutFinances)}\n          className={`${\n            selectedTab === tabs.aboutFinances\n              ? selectedTabClasses\n              : unselectedTabClasses\n          } md:mr-16 xs:px-8`}\n        >\n          <h2>\n            <small>\n              {intl.formatMessage({\n                id: \"faqstext.tabFaqs.aboutFinances\",\n              })}\n            </small>\n          </h2>\n        </button>\n        <button\n          onClick={() => setSelectedTab(tabs.privacy)}\n          className={`${\n            selectedTab === tabs.privacy\n              ? selectedTabClasses\n              : unselectedTabClasses\n          } md:mr-16 xs:px-8`}\n        >\n          <h2>\n            <small>\n              {intl.formatMessage({\n                id: \"faqstext.tabFaqs.privacyDetails\",\n              })}\n            </small>\n          </h2>\n        </button>\n        <button\n          onClick={() => setSelectedTab(tabs.other)}\n          className={`${\n            selectedTab === tabs.other\n              ? selectedTabClasses\n              : unselectedTabClasses\n          } md:mr-16 xs:px-8`}\n        >\n          <h2>\n            <small>\n              {intl.formatMessage({\n                id: \"faqstext.tabFaqs.otherDetails\",\n              })}\n            </small>\n          </h2>\n        </button>\n      </div>\n\n      <div className=\"md:mt-10 grid sm:grid-cols-2 sm:gap-x-4 sm:gap-y-16 lg:grid-cols-3 lg:gap-x-2 xl:grid-cols-3 pb-8\">\n        {selectedTab === tabs.virufyApp &&\n          questionsVirufyApp.map((question, idx) => (\n            <Faqstext\n              key={`questions${idx}`}\n              category=\"questionsVirufyApp\"\n              questions={question}\n            />\n          ))}\n\n        {selectedTab === tabs.aboutVirufy &&\n          questionsAboutVirufy.map((question, idx) => (\n            <Faqstext\n              key={`questions${idx}`}\n              category=\"questionsAboutVirufy\"\n              questions={question}\n            />\n          ))}\n        {selectedTab === tabs.aboutAI &&\n          questionsAboutAI.map((question, idx) => (\n            <Faqstext\n              key={`questions${idx}`}\n              category=\"questionsAboutAI\"\n              questions={question}\n            />\n          ))}\n        {selectedTab === tabs.aboutFinances &&\n          questionsFinances.map((question, idx) => (\n            <Faqstext\n              key={`questions${idx}`}\n              category=\"questionsFinances\"\n              questions={question}\n            />\n          ))}\n        {selectedTab === tabs.privacy &&\n          questionsPrivacy.map((question, idx) => (\n            <Faqstext\n              key={`questions${idx}`}\n              category=\"questionsPrivacy\"\n              questions={question}\n            />\n          ))}\n        {selectedTab === tabs.other &&\n          questionsOthers.map((question, idx) => (\n            <Faqstext\n              key={`questions${idx}`}\n              category=\"questionsOthers\"\n              questions={question}\n            />\n          ))}\n      </div>\n    </Layout>\n  );\n}\nexport default Faqs;\n"],"names":["intl","useIntl","React","Helmet","name","content","formatMessage","id","rel","hreflang","href","tabs","selectedTab","setSelectedTab","useState","selectedTabClasses","unselectedTabClasses","Layout","className","SEO","title","FAQsMeta","onClick","questionsVirufyApp","map","question","idx","Faqstext","key","category","questions","questionsAboutVirufy","questionsAboutAI","questionsFinances","questionsPrivacy","questionsOthers"],"sourceRoot":""}